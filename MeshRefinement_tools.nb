(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    452680,       9432]
NotebookOptionsPosition[    447807,       9351]
NotebookOutlinePosition[    448211,       9367]
CellTagsIndexPosition[    448168,       9364]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Refinement of Q1 H1 elements.", "Chapter",
 CellChangeTimes->{{3.8997183159890547`*^9, 
  3.8997183287902584`*^9}},ExpressionUUID->"74634c0f-8f77-43d6-bd68-\
8d923a5f8290"],

Cell["\<\
Author: Huilong Ren
Date: 30.07.2023
Email: HuilongRen2012@gmail.com
Version: v1.0\
\>", "Text",
 CellChangeTimes->{{3.899718390825485*^9, 3.8997184284029493`*^9}, {
  3.8997190523546743`*^9, 
  3.899719058694662*^9}},ExpressionUUID->"c2595c41-3dd0-44e6-a2e4-\
5fa0b3098a43"],

Cell[CellGroupData[{

Cell["Basic ideas.", "Section",
 CellChangeTimes->{{3.8997183409722767`*^9, 3.8997183609593554`*^9}, {
  3.8997184392177877`*^9, 
  3.8997184409688115`*^9}},ExpressionUUID->"81e79014-6fff-4daf-b55a-\
c29c4c87a2bd"],

Cell[TextData[{
 "In static analysis of finite element method, Q1/H1 elements are very \
useful. However, the creation of such mesh with different levels of \
refinement is not easy. \nIn TrueGrid ( http://truegrid.com/Transition.html \
), we can make \n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
L2IeHd0=
     "], {{0, 100.5}, {187.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{187.5, 100.5},
   PlotRange->{{0, 187.5}, {0, 100.5}}]], "Input",ExpressionUUID->
  "45abc3d4-0219-461a-937f-c645f06ca983"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
qSfvGLJb8zWqVW9zytj5zTv3nXPbb9Fu10R2az/wvq/LNPup3r+o23S932y1
Xdu2O/y+ZZ3GXe75eQ3NrL9de+MH81tw7rhT2tT8w3nvz38957Ubbnhx8VTg
j48f26rmVue8m/TH9w91a1Fzm/M/tJ7S3Ann9bzg3YXuqSV1qxkyb9Kf+533
2lLG0gI3MPHcrR1Xc99/5tlP53z67BMvvPvKyy+/POaNT39Sn7O/fPXhO267
529jxk+cOPH9j7/+4sNxY/h87Iff/PjF+DHzTx3/xUyVfffxa/PfvDJx6twZ
k56976E3vklg+eNn4x69++7Hx09dcFiWzZ5lB2Y9ekyz6o063vwFZ899a+g+
nUfc9+Srk38sh/S8zx+69dEvfxqFk6/cpcVBd4VLs2bNtOIJYWdxdNYPP3wz
5euvv57y/ay5P347/9XXU76bWaY58w9P+W6WXX3ONx+88tLrk6fPS7fM7OdO
+HWtLc95J/nhmY8e1azW1iPs4nPfubD/lZPKvzJr6gevPP/CW58l15g9/Z9T
p0yZMvWb6XPK302d/6vFtzofVj9+Mv6Db2d+Of61SdPL4qvqp8+nlc397sNX
X/vkh/IL/vDp2Odfeufzjz/9IkFm2Q+TJnw0vazs25fP26nBL4974oup38/2
o+XPlXrkzCsvrgS4mjvl8X6HnztfYZb98MZQjlbfaNBLc1Q29bF+mzVoduDI
jydctHPtNdberNNJd06YdG0H7FeDg+/9cdpzA35TvVqNLYfRAbO/vPMQVE/N
3U4evte61Versf2FH835/P5em2188I3P33LYBhscMeqL1H2Xff/OjV1+2Wj3
q5KOmvPqaZtWTyxg9YabdBz25JQFzy/77E+7tjjwzszNQRbsLGzZ2Mv2blbt
F90f/Gr6B6P7bVmzxg5nvvzV3LLpE87bbcseD3wyV9NfueTIw84cef8tZ7Zv
s9kxd30cY2vOy4M2qvn7oW/TIHPHn7Nnq6Y1txw2v3XmvnVev6s+Sc4u++re
o//Q4exHn7ntqI2b7XfrZ3P/+cKI3dep1qjTn9/7voxbGHPy9lv2efjT2MzF
tzp17PWHrr968459e+3ces1f9/vH5Piq4244fKMaLQ8cNrzP4Qds07zeVme/
MRfe9Nd+Rw4d/Y+nbuj+2z2u/GrulDFXd/nV6hsOHjfny6evPuI31eq1Pf7c
Kx9+5cWfjibDI37k/2ZeuTLkJ1xV/3W7g3bdsH6NLYaOt/F5+361DFfzPrl0
x5qr1dz58s/K5ow9eZPq1X9zKnQAqvCLNebjambZV1fvWvMnXGnua0N+W6Pa
6o32uWHSV68/OHrc1B+fOf7X1Rt0GTVDP955QN0aW/50+Z9//qM7em69bg0Y
1lob9Xl0Wtk3z1ze79jD999540Ycq7Za3a3OeiUo5VL2+dW7teh8R3ZqcNRZ
8y/+3vCt6u95/Vdg8/s79qu34Ymv0MGzXzh7yKhp8xE85HebDHw56fLv7j24
UYN9bo53PuVpNq216emvz5372rAeF446ZdNavz3jDd6cc8KfJ9uvzHnp9F26
3Qn45zzfp1XDw0bPmq9Rr9m94eYJGrnuCcffkzEI0rc665Fujet3uOWrsvm0
KOOqsx7pvk7TA++C3pX989rdam19/qR5sx48rNWOI97Gt/rhb/c89E8ectYD
h6y9UYKgWX89qM56J72atPXPRzMfOePKJQGnAgn0VdmP44YeO2JChCt9e3eX
JqvX2PHST3neQRtVr7HpadwvuPrlT7j6OsTV66eDqxrbXfCR3dzct4duXmO1
2lscftawoQOO2GevA85/MU1R5335cO/f1Fpt9UaHP/AzhmZPfviUHZuuUX2D
AS/4N8q++PMeLQ4YmZNxnu4slX16xR/r73zFp/NmPju04+9atDzmsR9n/G3o
0Md+nH9nZ/xmjbaX/6Q/v79lnxprHXhv6pLjh25ea5OTX3zhjGOv+Hh28mbw
Sy8MPf7azwM1+sOHj99w8Yj+7Ro1OMTuf8Yzx/26+aH3T5v35Y29Bz89s6Rb
nf340ev+4vjnf26c6KqzHz+mxa/7/mP+5zNHHVj/90PfmVs2ZXSPDapXa7Jd
7xtfn5bcz6yHj2iSgavyo9mPnHHl7PZdOFmQX733xJNmDgJcad5nDwzcYb2t
jr7kosO33KTDiH/Mf4hCXHGxn/p+3gfnbwvOdgKUhXfx/X2HNq3euvdTC/DX
si+v2aP+xoPHzPH31+7ZYv/bvsmhABm4UtnXN+/dcJvzXrj19AtfeeWUNo0P
uO7mM89NWPLcN4ZsUm3Dk63pafvDGzXv8WRG65y39Zq/2nH3blejoJI3v9xx
zx43uDWf++Gth+925C3vz5rzyokbNPwJVyjhy3ZquPXwhy7sefbrmZ1UAa4y
rrpA7x/UIOn9ObNnz/ho9Fkd16tRbb2+T/9YMa4yHznrypUgP/mDNfe47p9h
f80YOR9XGya4mj3xL8cec8HzH3w25Qf/yTmvDN64+mq19xs5fea4035XYz6u
JrgdrNW+HFea9eLAjSBaG/d+bMq8edPG3PvIR96WcyfePfSsm8clQ232c303
3WH4W7M1442bTzv1yicnJwD77u5j97vU3S5gtVfz/W79Zx6znDN28MY1tho+
cUEEfzeqS+PmbY654bOyee+f94c1G7Q99625P51+8kbVf3vm2/MbtOyzy3Ze
v+dTM9IXnTfp4ra1au/25wRJ8z66eIdadfdKDKs9wuunbtLgwFF06cxne7eq
1+W+72fZyJj+SPeW9Zruc9lH2cMpfavgap1WvZ+dnXfV+b3/qxOe/1mrTJg7
8/7zLnhj/oFpf+26zubD3qOxHzq8yUYnzQ9azHqwa70Wx/1j9nfffDv356OZ
j5xx5ZwGLl1mffrSyBPbzo9frdFi77NHvfrVTw86a9K9R21cvdrq9Xc+68Up
/3m+33o16v9661323LfzYcceP/jC+yfOf+QxZ25Vb/Xav9z2gGM7bQqlarrX
xa/9a+qY4buuvTpkreuNb5tqRmM8fuK2jaqvtnrtdX+zz7Dnpv2MimkP9lhv
zdVrr7/XCWecPnDQhY9OnjOfB9/Tff21Vlu9YZsOvU46c/j1z33hTV/21fV7
N+90Sw6sZn78/F/6bLVmtfptTxz54uRQ7c149Nhtjn10vl9bNvlPe+1ywQd+
xeljL+mw0eZdzrnu+uE9jz3/xW8zr1w2+aqOB9zwE5LmfXplx843TQmfoXuL
6o226HjsiaccsEG1htv0veenUAQWdOcDbpmadcn0rZZ99/adx266WrWNjrrh
pfkPHF/1hJsevKPH76rX3PKE+yZ8PPamwzaoVn/n0x4bf3uXZr859II7771+
QOduN33032lv3NZ942prbjPwwfdnlE2+sUPDBpsdcv5jE1/7+Wj6ked+9/Zd
6St/NCvjtitfpv/jlM3rrFGzXsN6tdZYDYZdYytzvmd/8/Gkr7PoQ0rmTPv0
/Y+mzky18twfp0x67/0vf1hgVJfN+ubjiR9+PSMa6mXTJ49/98uSfm5BmTft
2+9++uWZ334TTSGUzfjqo0lTC9vxx2++mRG+WfAW5v3w+UdJMKDs+ynBdabd
O+jkRxY9xp1z1QVl1sxZc6Z/8f67H3+bGVadOzdb8ZTwyEtDyr64vn3TXa+Y
nNxk2azPb9r/F3tdM7lSfIaVUaZPePDWUY/dMeioEa+vEvvvLrrM+Xj0GUd0
7XHKmUPPOfe8YacNuezJz5ZhHHc5l7kTLt1j/Q3bHnvjhAyyViVVUiVVUiVV
UiUrufx/kfIZUQ==
     "], {{0, 165.75}, {150., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{115.49999999999997`, Automatic},
   ImageSizeRaw->{150., 165.75},
   PlotRange->{{0, 150.}, {0, 165.75}}]], "Input",ExpressionUUID->
  "2632930e-4f67-4d7f-a65e-6f9e603021eb"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQm8jmX+/5E9IUv7KlvrlLYpbUYlTLRMi7TIkoiIspTIVtqkaZmotBfV
0KJlKmlDtEkoP6KMMIYyKMcc5//5v91frrm67ue5z3M4x/p8X6Y55zn3c933
fV2f6/P9fK/lex3cussF15QoVqxY97L854Krezbo1u3q3hdW5peLru/eof31
7do2vv7Gdu3bdftj6134cB7/+5z/rf9ZWcta1rKWtaxlLWtZy1rWspa1rGUt
a9uDFcta1grP0mFsC6M6azuqZTGWtaK2LMayVtSWxVjWitqyGMtaUVsWY1kr
astiLGtFbVmMZa2oLYuxrBW1ZTGWtaK2LMayVtSWxVjWitqyGMtaUVsWY1kr
astiLGtFbVmMbQuWq9y39NYv+mVrP0iRWBZjW91ma3ZndX5ZL7dTO36Yrulb
+4kK2bIY24r2//T/HtWjd+vu/+q/9sliLR6gAZfpstEa7T7c3i2Lsa1li7So
q7pO0ZT4n0DXS3rpTJ3ZUz2XaumWf7bCtSzGtorhGfuq72qtTvnXPOVdq2sb
qdFkTe6ojtfpum/0zRZ+wkK0LMa2sK3QCtgJhZ/ugnmad5yOG6Zh7pMlWnKb
bmuplm/oDeC3RR6zMC2LsS1pEzThRt24TMvSXXCf7jtexwOz+J/WaM1IjTxJ
J92v+1dqZVE+ZiFbFmNbxkDIQA18Xs+j81NesEqrztJZHdQhHVNxwdk6u73a
v6/3W6v1DbrhO31XlI9caJbF2BawN/Xmn/XnBVqQ7gKc4FE66kN9mFACF4zX
ePfJP/XPPupzuS5/Ta+t07pCfuJCtSzGitQgpQf1YH/1r6/6h+iQR/Vo/IKr
dBUIhOjSldBKrZqqacoLcpTzjJ45WScP1uBtdgg3i7Gis5/0Uxd1+Upf2a8w
TxM1OVAHDtIgc4izNKue6sWB5wxvyAWP6JF0F6zV2uZqfqWunKiJ7dSuq7pu
gw40i7EisrEa20/9ftNvweewzRW6Yn/tD7P9UX8Eh+lKuF23cwHITHfBJE36
g/7wul53nyzUQhwo5RO3bjsRaBZjhW6I81t0CxIr3QX/1r9P1akn6AQ4DWb7
QT8EF4DDBmqAqk+4C39tqIb/0X/ifwLYj+kx3OudujPdENyWtCzGCtemaiqt
/y/9K90FyKdjdMwX+sJ+HamRdVSHT97RO/bJGI2BnT7Vp+lKgNngtzt0R8Jj
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
+EpYrpEa3a27bXzVLrY9uZba61bdCu9Z/Ej46SYc8Y9P6kn84868QLoQbQfA
mKJMmO3Urq/6NldzdBQyHvX+gB4oozKX6JLAOQ7SIC6D8fyNABYRKBp6hejc
FuCsbb7tGBhTtCgR3Q6VIdTLqzwxJv9e0SvxY0kJEnfVrvHV0RfogrZqy78g
d0HWNtN2GIwpWq1xqS7FP/ZX/+N0XCmVekgP1Vd9P1mxnUH5oB4kigy+PkIj
OqhDNn4sdNuRMGY2XuM7qROi62k9jfjvpm5n6AxFoeV5Os8dTVhXdd2RfMiz
HuqR9Y9FZDsexhTlryDMPFpHX6SLGqsxDhSO+oP+4K/bcQnHZmpme7XPxo9F
ZzskxhSxVmd1xlcSVL6u11FoltvQN/wpEq6f+vlZ7LJW6LajYszsVb16ik5B
nl2ja/CG/p/AFfFjsOgia0VhOzbGFK27PkSH4Ar9w1UXaAHyPrtAesvYDo8x
RelTWqgF2syo7E29eZNuym4g2mK2M2BM0VbKdmpXTdXwm/6ii6xtAdtJMKZo
hgiFv2NnkN42befBWNa2lmUxlrWitizGslbUlsVY1orashjLWlFbFmNZK2rL
YixrRW1ZjGWtqC0BY1nLWqHYFoZ01rKWtaxlLWtZy1rWCsNyly9YtCr/yzbb
8lYvnj1r3vL8M2HmrVk6d8a3C35Zm++VO6vlLf5k9CvTV2b06RazNfM+fOKG
kyuXKFasZI3Gnbp17dTu0oZ1Kpeq0fmD5aMuqb5L6SN6f1qkLZoz64lWR1Yu
UbxY8fI1Lnr0W1vAum7moBNKF7dopXjZU++es055C8f1alD7hDYPPPPXK46p
eVb/Ccv/t2E3570OtfY/oXmLK69sdlSl4lWPPf/KKy9tWm/fP/TYjEfPW/7Z
k9ccu1vx0sdc+9L0nxdPeaz1keWKlTqq3TNTl3DjdT9++OBldfc7p//b8wq2
xbwoHtW3Ne92O/Hsu762h8pbu3Zd/NOtYrnf9D+2VLFiZRoN33Bo7MpPep3f
/YOcrx66rEGjbmMWFuFJ2Gu/+luv/s+98/YzvRvuvUuxkof2mLy+qnOnDzzn
mDP+FFnDc7q+uChPa95pv/8upY7t/02u1n07+MRSpU4aMtttkFzz5sMjvl3/
W+6nPQ4tfdygWet/Xjt1+PCPNi9J8Ko32uxXOron9ssrV+5T+oTbv9tw19yv
B7W745sCt1pRPWoKWzfnwc6Dpm4jWRbWzRx4vMNY7qz3xs9bO2/8Wx9+M+mT
Tz6Z+Pm8DRSbs3DKq888+cKbE6fNnDlz1txFC777dCJ/n/zd0lULpk1cf+m0
Bb8q7+e5U9f/MmnmktzVc8a/+MrnSyOIrvrh09eff/6NaUt+313zctbYB2te
b71XySrnPraAq3O/7NvkgsEvvj1l/ioH75XPnF+hePHSh1335pK1X/erV6pi
kxE//Q/7a35dE/2/33B8umblyqWLFy1atPiXNbmrlq3/adHin3/N09r1Hy/+
eY0VsHbpt5M+/mz+ihR7enPev+7gMvX6T48a6tfXW+1V5vjBVnju9CHXD5uz
8Strlnw7acKHX/4QlZGz4l9LFi9evGTpirUbf1uy/q7Jj7oeYqu+n/btsl8X
Tps6Z0VeWKo2/H15Xu7P302Z+v3KjQWunDd5wsfTf5w7b0GE0ryVc76evSIv
b9kng06tdOC1by1Y8kuO+3Tje8VeOWXJhWkexnIXv9G55cD1pJq38vO+fFqy
9g0fr1XeknGdj6q014VPzf36ztPK77L7Uc26P/v1nIeb4uMqXTx61fL3uxxW
slipev1ojJyFz14KJZVueNOARnuWLL6eb9b++PI1R9W5eMSEkZfVrHn5qAWx
d8j7ZfqIiw6scuZfo0ZbO6XX4SUjL1myct1z+729eP31ecteb1+7LB613CEN
Tjv+lC4vzUnV73/fcPi7yfc23qvYAVeN/WnFt2M61ytd6uQ+n/yUm7fi60EN
67X9+/e5WjHp7isu6/PUyyP7nHPoUa2fmxvibO0nN9Qu/Ye+X1EhudP6n71f
9dL1+q2vndwvB3X+6/fR1Xk/jb76uKa3vf7ek63q7NX8iR9y//Xh4DP3KFal
2YMzfsnjESbedFK9Dq/OC11h+KhLJj/S4pASe5/b6ZrT9i97cOcP5oelfjq8
Ze1S+17Yb0CHluefsPdux972eS4666XOV/Qd88E7w6864qxhP+UunvjARQeV
qHXjp2sXvvvA5YcV261+x4HDXp300YZPo64SvvJ/U5Zc2LYBYyUPPuMvf6pV
sdQxfadZv326eRnD2Lrv7zmldPHSpw39IW/t5Jvqlix5WE/kA9LigF3WY+zX
vJ8e+FPpDRhT7tTeR5QqVqJKk+Fzfvps7JhPl6x6r+PBJStdNGq1Vj17foVS
9TYU/7/bz36m3fF7llqPn9odXl+et/S9oZ3btDzvtDpV+KxY8QrH3jop6vq5
c//WpFqJ9dircOQ1L6bUQUHDrS98xoBjK579yHrO++WZ5rvV6jaJxs758Lbe
o5avR3PvI+t2/SRq/p9HX1ylUpPHFoQlTu19eJnDb/4sN3dqv7ZDRvU4vMwR
t3zOL/2ve3C+3WXtxzc3uPJZOsLaCR32q3zZGJ41b/5DZ1Y+OkIm5V7X8YXl
mTzqmteurFqx6cif8tbLqBSlrnntqj2qX/gccjDvXw83LHP87XPWrRl72X6n
DP6KuGzlmy+88i9ecs3fL929doSmNS/9Zdca3adE1fS/T1O+coqSCwSgDMzj
sbxVn/ZtM/jrAGNa9vxF1UqUOuWeebz7DbVLljq8F88Oxg7cgLFFPsY+uxmM
lfrjHRv0Uu5XfY8uVbz8MS1v7de3y+VNGp1/+0dxebtu4avtDytTvESVln9f
4z7Mmf9qj1Oq71KyZpcP1+b9NLZzvT1PuGXMyFaH7gocd2v4wLx4RcQbTnnz
7ju94mn3zVv36/i+5x65z76tx61a/WbfvuNWrX+yWw7bpf7QDbz6y8gmpcpd
ODpW5LS+R5epe9NHH97S5r65OdEvN378Yd+OD//o0fHK794Yftfg68+oUulS
e/7V71178N4tXl6+buGI9je+myo1dvxRc964es8DOk74X+UEpea80Xqfgzt9
sP7vv466sOIf+k7PzVs8pm3NksWq/bH9iM8sBlrz6uXVUmBs46epXzlFySme
eLPs93psxltvm8vwMKZ1P/y968k1jr367jtb1qvbdPAH618oEWMUtmxD6d/e
fiKYO/WeFJjw7ZcXW1QvuX/7d37nA/MWPnRWxTo3Tvxt5qDjS+1So/OEHMq7
69TyxUtUvXzMmlgZKTCmvEWPNa58wqAPn7h5yKRJPQ6tev7fHuszMFLYuZ/3
rlus1k3WDLRDyyp7t307Re0MOr7sQaeceeUDEFf0y4GnnN12uPP4ud890bLh
FSNnrVk7qVvNyhswBjnfe2rl4we8MqTdbZ+lbLB8MJai1N8h4S+VIiSszclZ
PXvMrefWKFWsRqd3V+WPsZSvnKrkQrYNcWXps/72L18qrX5qPcZqRRjLmfl4
m9Z3TPj2h8Ur3e3XTrqxTsni5Zs/teLXT3sdWWo9xr52vrLMORsxpjUfda2N
MKvTftzideuWTxz92v8CwtyZz/e99bFPoy6Y836nw08e8GWOVn/+WK+ew96e
H4Ht5+fbNL/nm9x184c1KLfLAR3ey4nuW7dU+ZPumBHH7NrJN9YpdeyAmb//
y8+jLqq696Gth/+Qt27WoOPKVqo/8MvcDZffVLvkEX2+Wl+5eT/ce9oh7d5Z
Ha+edXPuql+mfMMHI1Stm33XyWUqNHrEBRy5n/WsW+nCUTTvr+Pb77fbRS/+
ssZ6yYrXrtp3t+pN7p2dumvFHxWM7bFf+/E56Updj4SDrpvwP7b5OvfXlwfd
8fn6D5a/dMkeR/ebQWW/0rJa7e7rB0LWjL1kt32u/SDn56XLcv/3acpXTlFy
ymfeVFsz7+OnutVfPz62yz6Nbxs15acNL71mzuhWdUoWK1HxtFs/WvzbhM41
SlU8+PgGZ//5gsvadLxxyMsz17/+xD7H7lai/IEnnt+m2eFIsOqN7pr67yUT
B/xp9xKIu0tGfLVhCCtv0RvdTqxSsniJ8nse1qTf+97A1vKxbWuULVH+kEbX
3XJz1xuGvD5/7XoN/cJVh5QrXqLyoU2v6d5nwCPvL4ieaNWUoc1r1Tin3/Mv
DWt54vGtHp8R0/y/zp3weIdjyxarWL/bUx/N9/+8+vU2J7R5fX18nDf//kYN
7vjWNeyKyXc3rX30Rf3/9siAdm1u/2hZypAqb/5fzz1/+AZUrZs37NwLHl3s
v8NV+5Sscsy5bbr1OL9mscondHphw/AGXva080cuSVVk/FHzfv7q2TaHFy9W
u9Xwj9e/cFjqdY+OfabtkSVL17vuxa/nTn70sprFKp7Wa9y0py/a67AWdzw7
+pEuF1z56Oz/Lv/8yavqFCt7Qtexs1bnzR/RtHKloy69fdzMqf/7NP7KuT9/
9Vy85NlxJ1HUtuKDHkfvukvp3SrvVmaX4sihUsdaQJ+zdO6cRRmdxLF2+bxZ
s5f8Gqvx3FWL58yYtXDl73r7+vH8md8tWh1QQN6aZd/PmDk/gwmBwNYtX/bz
hjv/umxpMHWRt/qn2XOWJNbpqqVLV/u//P6N1638cXY0wJD3y2KvnOWjb7jp
tU0fW09T6u9tza9r1q5YMOubuctSDuHm5qYmpAxeeUtb3oJHzqn+p/vmRw+c
t+bHR887oNFD87M54tLYiq/HPjFq3DM3tBr8WXbSK2NbO3fMLZdf0rZHn779
Bw7q16v3vW//sI2MH2+Dlvv1PWcdUqt+mxFfpxB3Wcta1grN/j+jlGPB
     "], {{0, 166.5}, {153., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{114., Automatic},
   ImageSizeRaw->{153., 166.5},
   PlotRange->{{0, 153.}, {0, 166.5}}]], "Input",ExpressionUUID->
  "1fd75bae-59e4-427d-8448-567ed10ef7c5"],
 "\nHere, we implement this function in Mathematica. Without TrueGrid, we can \
output this kind of mesh and use this mesh for the purpose of academic \
research. For simplicity, only the 1:3 transition in 2D/3D is implemented. \n\
\nSome Examples:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3U9sVWUax/FLby+FW7QI2jLyp1BLhBpoSBSwFRImGc0YiSIgJiNpIDBC
MkjCYCaTjH82Y0xMRAmJLowbozs3bAiGuHNtunMjiSYmbMysWJ/5zX3DyWlv
z3mf9j6vg6ffTzKm0NP37bn3fHueOtd22+mLL/+1r9Fo/H2V/vHyqX8cunTp
1D+PrtUfjr/x9/Ovv3H2zJ/fuHz29bOX9p9u6i9v6n/HVjQa/3s7AwAAAAAA
AAAAAAAAAPC78tlnn/07sT91pFv/5MmTWv/dd99Nt0XqUzh//rzWf/PNN9Nt
kfoU9MlrfZ1Iui1Sn4IuIa2vyyndFqlPIVDUxvb7+vq2p7RixYp2u51u/XXr
1jUajcceeyzdFnqIBgYG0q0/MjKiU9i8eXO6Lfo70q2vT16noBNJt4WegqTX
qi4hnYIup3RbKATlkG797Z1r1d7+gw8+2NvsELFy5cpDhw6lW//tt9/WU/br
r7+m22Lt2rW7d+9Ot/7nn3+uU/juu+/SbbGpI936+uR1CjqRdFvoKdATkW59
XUI6BV1O6bZQCMoh3fqinGnfEe1H0b4F7fuifQvaj6J9d7QfRfsWtG9B+75o
P4r2LWjfF+1b0H4U7buj/Sjat6B9C9r3RftRtG9B+75o34L2o2jfHe1H0b4F
7VvQvi/aj6J9C9r3RfsWtB9F++5oP4r2LWjfgvZ90X4U7VvQvi/at6D9KNp3
R/tRtG9B+xa074v2o2jfgvZ90b4F7UfRvjvaj6J9C9q3oH1ftB9F+xa074v2
LWg/ivbd0X4U7VvQvgXt+6L9KNq3oH1ftG9B+1G07472o2jfgvYtaN8X7UfR
vgXt+6J9C9qPon13tB9F+xa0b0H7vmg/ivYtaN8X7Vukbv/rr79O3f74+Pia
NWvSrR/aP3fuXLotaN8X7VvUoP3169f39/enWz+0/+qrr6bb4r5qf2ZmRue7
IqVGR+otUq/PKRi3qIHUj1Lq9RW1sf1Wq/WXlPT56GtRuvW3bt2q8z1y5Ei6
LXS7abfb6dbftWuXTuHAgQPptljZkW79vXv3hqt6bxoaWkKYuvsn2kKPj9Yf
Hh5O9ygpBD1E6dYX5Wxsn5nfgpk/Ksz8MjU1lWL9VatWrbg3Wty6dct9/TNn
zoTFl8/MT/sWtB8V2t+5c6f+efXqVd/Fn3zySYWvC0n/XL169YYNG3zX//77
77XyxMQE7fui/ajatP/WW29pZh4cHHRc+f3339fKr732Wrj1f/jhh/rjiRMn
HLcYHR3VVfrjjz/Svi/aj6pT+zdv3vSd/JX8o48+mt0b+/XG/v37HSf/MO3r
Kvrll19o3xftR9Wpfb197Ngxr8k/TPvhkcnbF6/Jf3Z2VmtOTk7qbdp3R/tR
NWtfXCb/fNoPfyy27zX5h2n/7t27Ge0nQPtR9Ws/TP7T09O9rJlP+/kf8/az
e5P/t99+u+T182k//JH23dF+VP3az3qe/IvTfjCv/ay3yb847Qe07472o2rZ
ftbD5D9v2g+6279y5cqSJ//itB/Qvjvaj6pr+0ue/JX5xo0bu/9yXvvZUif/
edN+QPvuaD+qru1nS5r8u6f9YMH2s8VP/t3TfkD77mg/qsbtZ4uc/Bec9oOy
9hc7+XdP+wHtu6P9qHq3v6jJf8FpP3/Xgu1ni5n8w7T/zjvvdL+L9t3RflS9
28/Mk3/ZtB9UtJ/ZJv+yaT+gfXe0H1X79rPOY6jutpQbGhoqm/aD6vbD5N9u
tyu2aHZ0T/sB7buj/ajl0P6pU6d0gG7Nm0roxl2RdhZrP+vc+lutVtn64ScA
7N27t+zDad8d7Ucth/bfe+89HfDzzz+XHaDvC/r6+iq2iLa/fv36nTt3VhzQ
399/+PDhsvfSvjvaj6L9jPad0L4v2o+ifQva90X7FrSf0f5ctG9B+1G0b0H7
vmjfgvYz2p+L9i1oP4r2LWjfF+1b0H5G+3PRvgXtR9G+Be37on0L2s9ofy7a
t6D9KNq3oH1ftG9B+xntz0X7FrQfRfsWtO+L9i1oP6P9ucLv4J5JSc/X0NBQ
uvW3bdump+yVV15Jt0Wz2Wy32+nWn5yc1CnowkixuC7mqakpPQs6i6lkxsbG
dAoPPfRQ2QHDw8M6YM+ePWUHDA4ONjq/zKtM+D28FQfoS4fKqjhAH65dyt6r
z00HqJ2KFXo0MDAQTuHIkSMpnuuZezkb2290fm16Oo2O1FukXr8ep4D7Qeon
2tg+M79FDWb+1atX677f6Nz43H9HdvabzPx6CvREVBxw387833zzzcjIiBaP
ftvSO77f91WP9uXGjRth9u7xt2V1o/0y+m600flhYleuXNH3p7TviPYtQvvh
7fCTM30HANrvlt/un3766fA3tO+L9i2K7Yv7AED78+S3+48//jj/S9r3RfsW
89oP8gHg2rVrPa5P+7nu232O9n3RvsWC7Wd+AwDtBwve7nO074v2LcraD3of
AGi/4nafo31ftG9R3X7W+c1ZvQwAy7z96tt9jvZ90b5FtP1gyQPAsm3/1q1b
0dt9jvZ90b6Fsf2sMAA88MAD+8zCK6sfeeSRsgP0Lh2wa9eusgN009QBFVu0
Wi2FU3GAvnSo7ooDtL4ehLL3hldWL+qs161bZ7nd52jfF+1b2NsPtmzZEgYA
o/BKdeVZdoCqDOmVHaByq3cML1itOCC8XLb6AO1S9t7wxafZbFas0P0pDZp/
vXhG+95o32Kx7Z88eXJRV+nynPmHhobKfqvvgmjfF+1b0H5G+3PRvgXtR9G+
Be37on0L2s9ofy7at6D9KNq3oH1ftG9B+xntz0X7FrQfRfsWtO+L9i1oP6P9
uWjfgvajaN+C9n3RvsVi29+xY4c+pQ1mqiC8bK/sAL0rvOi37IBWq1W9Y3jh
X8UBykrHVBygD1f+Ze8NrzrW5VqxQveOOnH7o0r7vmjfwt7+7du3t2/fHl6g
u83s4YcfDi+GLztA79IBmzZtKjtA14kOqNii2WwqnIoDQvsVB1Sf1ObNmxud
H6dZscI8ujD0ITr369evWx7bbbTvivYtjO1fuHBBienmePny5UWtvzxnfvn0
00/XrFmjD3zppZeiB9O+L9q3iLaf3+417d+5c2ex6y/b9oODBw9aBgDa90X7
FtXtL/l2n1vm7WeFAeDFF18sO4b2fdG+RVn7Pd7uc7QfVA8AtO+L9i0WbL/3
232O9nMVAwDt+6J9i3nte93uc7Q/z4IDAO37on2LYvuOt/sc7XfrHgBo3xft
W4T2dbsfHx93vN3naL9McQCgfV+0b6HwdeW73+5ztF8hHwDa7fb90/7MzEx4
HWM64Scopls/vNQz3forO6eQdIvw27F1ZabbonHPEn6lu1H1+tHdfxcH9CJ/
ClqtVtInWlEb29cl98eUdNa66aRbP/xA6WeeeSbdFvryokc13fpbt25tdH5+
dYrF9ciMjY2Fy28smfCaXt3Xyg7IX9NbdkC4biu2COFUHKAT1FfR6hXUXdl7
89f0VqzQo/BFXm/s27cvxXMtytnYPjO/RQ1m/o0bN6q7dOv/BjO/qlxROTDf
tzN/TiEoh3TrZ3y/760G7W/qSLc+7VvQvi/at6D9jPbnon0L2o+ifQva90X7
FrSf0f5ctG9B+1G0b0H7vmjfgvYz2p+L9i1oP4r2LWjfF+1b0H5G+3PRvgXt
R9G+Be37on0L2s9ofy7at6D9KNq3oH1ftG9B+xntz0X7FrQfRfsWtO+L9i3+
7+2fPXtWB0xMTEyW0INcnXa0/Xa7rWPK1hd9+PT0dNmH07472o9aDu2PjIzo
AF1sQyVUrg64cOFC2QrV7X/xxReNzs8/KVtfVnR+hkzZCrTvjvajat/+mTNn
9F49U9WL7Nixo9ls3r59e8H3Vre/tqN6/Rs3bujTKLv107472o+qd/uzs7Nq
1vIA3rlzRzfu8fHxBd9b0f6zzz6r3b/88svoFseOHdORV69e7X4X7buj/ah6
tz86Oqpr4O7du5Z1Ll++XDb5l7Wv5PUhzz33nPFTHR4eHhwc7P572ndH+1E1
bt847ReVTf5l7Vum/aKyyZ/23dF+VF3bt0/7RWHy3759+7y/X7B9+7RftODk
T/vuaD+qru0vatovWnDy725/sdN+UffkT/vuaD+qlu0vYdov6p78u9tf7LRf
1D3507472o+qX/tLm/aLuif/ee0vbdovCpP/tWvXwh9p3x3tR9Wv/SVP+0Xz
Jv9i+71M+0XFyZ/23dF+VM3a73HaLypO/sX2e5n2i4qTP+27o/2oOrXf+7Rf
VJz88/Z7n/aL8smf9t3RflSd2neZ9ovyyT+07zXtF4XJn/bd0X5Ubdrfs2eP
17RfFCb/gYEBte817RfdvHlTn/ZTTz1F+75oP6o27avNyclJ98XD5J//Juuv
vvrKfYsw+S+r9jVK6cvpv1Lq6+vTTJVu/SeeeEJP2cWLF9Nt0Wq1hoaG0q1/
4MABnYIuv3RbtDvSrf/888+H9o8ePXoiAd36Q5sbNmxIsb6EXwK+ZcuWdI+S
QlAO6dYX5Vzx30EXzczMNADUiKK2tP/JJ59oSPhPSvpyOj09nW79S5cu6Xx/
+OGHdFvopj8xMZFu/Y8++kincP369XRb/KEj0eKzs7O6kHQKH3zwwZ00fvrp
J33npe/69UaiLXQWOoXDhw/r7UQPlEJQDokWD5SzngtL+3y/b8H3+1Hh+32d
SLotxsbGFvxvb73oEtIpnD59Ot0W99X3+7RvQftR+uRTt6+nwP3f8BeF9t3/
T4oi2vdF+xa0H0X77mg/ivYtaN+C9n3RfhTtW9C+L9q3oP0o2ndH+1G0b0H7
FrTvi/ajaN+C9n3RvgXtR9G+O9qPon0L2regfV+0H0X7FrTvi/YtaD+K9t3R
fhTtW9C+Be37ov0o2regfV+0b0H7UbTvjvajaN+C9i1o3xftR9G+Be37on0L
2o+ifXe0H0X7FrRvQfu+aD+K9i1o3xftW9B+FO27o/0o2regfQva90X7UbRv
Qfu+aN+C9qNo3x3tR9G+Be1b0L4v2o+ifQva90X7FrQfRfvuaD+K9i1o34L2
fdF+FO1b0L4v2reg/ahl2H6z2TyYUl9fn56ydOuPjo7qKZuamkq3RX9//+Dg
YLr1H3/8cZ3C5ORkui0GOtKtr09ep6ATSbeFngI9EenW1yWkU9DllG4LhaAc
0q0vytne/t8S05frffv2pVv/hRde0Bbnzp1Lt8XujnTrHz9+XOvPzMyk2yL1
KeiT1/o6kXRbpD4FXUJaX5dTui0UQtJTCIztAwAAAAAAAAAAAAAAAAAAAPht
/BePQ/4Y
     "], {{0, 138.75}, {255., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{171., Automatic},
   ImageSizeRaw->{255., 138.75},
   PlotRange->{{0, 255.}, {0, 138.75}}]], "Input",ExpressionUUID->
  "30468a7d-4435-482b-8bdc-a19191a5f3ed"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztXU2ONDluTdgbL32E8i28TC9nO4b3OQO3B7PpAXoGMLzLm9RR6hbe6hLe
h2OKSIIpStQT9RORWXpAN+qryggpFBT1+Egp/+WPf/n9f/3D5XL56z/t//v9
H/7733777Q//8+//vP/jP37965//9Osv//m7X//2y59++e1f//iP+y//d//v
//b//v7ztrCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwMAshhPv9fr1ePz4+9h+O
7s7CQhN2e/76+tot+eMb92/wz0f3bmGhGuyiL5cLmfH+G/7r/sv9n/tfd7M/
rIsLCzDInnewPSdN9/Pzc7dq+vz+MWnzCwungmTR+/+LTGO37dvtxj8v8144
FTTlwNnFbti7SfM/iX6P6OTCAohkVOi4j3bU+33Yky8sTIMdFTqgq5Qprlyy
ycIEgFGhA/t9kgyE4spl3guDUBsVOiADSd363u5SBRd6oSUqdCAKJCOQV1+y
yYIbHBWyPU8jA3tzhm1vD1VwTmcW3gbdo0IHKCNpf4Y6OaU7Cy8MHRXSD0f1
B9nKvff59o0J/Vl4OeSiQiK0R1mOEUhGWKrgggQSFVItBykSNu8dgd2wcXMl
857fyYWToDYq5AzgIXVKtkiisVTBHwh3VCg953xFwjGbVjHVT0CXXGFERSYX
cvjOBFvFVO+KvrnCaImfGbLhgaTGKqZ6G4zLFWp5eRqnbbHPJZu8NCbkCvf7
J1nBHOJdG0hGWMVUL4eZucLdtHKMd8Ki3x4Sri2W58e4ClIbRi57wqLf5XDp
tcXynJhQQWrDTkcO9YotgaS+1TLvM2ByBamNIl8dV2La0ba3pQoehygqPLbu
TmLvRjGaG1SD1xhIaixVcCakiybKQZYsN89SndIhrnvvDGLbg4h39+VgqYKj
gUSF5GHY2tnUJ1cBkUiCGNgIxXvEtxQtVXAEZFRYrG2j5VgazP4z1ePNfDWG
AKjRV47Yn3rQXoNVTNUF7qiQqaZOkVAR/hwqvjdU5Tw7JnT6BpIR1hZLH7rk
CmUYlaSITFSGUnHiRbWXdLHJ7oFkhCWb4MhFhT5I0dhYQ4mojKPiNHeqLum1
hWGcX2W3QG9qRBNvgHG5wighUlzru1NxerT9uRxOuAuh7R5I8hPRKDFRXKqg
RFVU6INO9iHiVSMV12xqb9T36huJN2mP7svlffaeyCeiYSG+zQd6/3DZZHKu
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
uityH5zY5DDhYRG0WCDPi1umanTEcvz12At5yX+Bgo0iMzHeLLn9KATDaxVG
kDTd0O1RY+ZT8xoVxe3QKDKCewVh2zZeXK8prOl0y0JfZCY5ne2mvm0H14LG
EW8JHigd5lfdBJyzGkMJmAM+C5R8JjdBGv2VsaS2rDi1zESqCvfnEqMqVbl7
4bSEHKh2A3O/uDnLEw5frR2NIf1sWItjnMEIsaVE0PaiNFVz2ot8oqpXac8p
H2Qn2UF1ySw4FprDpb8kHC5F2vZmbofHHWyUcCl+vkXGzF0bLetJvZFXulo3
1TIfdSdzQWIv51nrl04SRUZwrEE6hDREYPuFIup07kK3J9TXcjfI7xlTkofL
ETc1EoaimtfReVbFlb7RmINaH6gXPjuoTCYLfCYt0RKjcZlQshuIouJ4mz4h
Alfz+pY64N6jMRU4FLXRWXIMc05Jmj1Ip3H4YrQi97DvzOJ2bbtb5SpZW5vX
PZoDe3u2KDJClR6YtG1jgpCj61s7VGw09/mb2DZe1ExaCrxzGMTTBuUEi709
ZxQpUUVfc5/MjQPZ9qBYA3mnPu5h/PXrcai4r8+5ReFeOgDNwLjKUjtM6K7/
jAAeyBuPo22YzGDcmhXyeW2EAtlcMffXz8cmDl+wEHmSpJpXi3HEwAgTpm1m
bwfoXY1h1Iu1O8+CQzdKCXqEAhWzOcm/km3XMiIJ8iRgkFjE6NRnbhxyRRcn
RMBKu20XIZewofm4qFEj52LDwUyYZPqMSvazy8SfoFQkd0DM3MzeDmSUbNvm
OX5vrisDEVL1HlWoZSYye4XbleZIveb+HKXi/lx1cP4oMgKiABQp1uesL1v5
fN427l6Xi8wkcrAycEOYSVAHnOLXFjGT9MqJ/BJRZITifERGsp1DGshxj5bE
n80uookTiRJG1UGRI7VT5ZmpE15rXiiKlCg6k+JD0Q6C7tFNMUPX6AZtI4ni
iKiVaFpVqXmNxjk5dUKD3CLpHAtDNC7Gm0yzO/qTu6ikst/jHGaizYkdmkPN
a9RbJvtP5lcvFEVGMERje+1mmt1OJn26R8ucApnJR6rMm0IMX9OOcxi4wzMJ
SVUNwGmRc4D2uRzRwQW+RHCRexQvbzyOpshMLs8n4nISv0Ua8l07J33QS4c/
D5IKlWHb+vNG0lAjAN+6BaIlQEOyOWTM+nW3yHq+a4cSEjlzX9pRayT1wJxt
59wOQoC7JJ0jtEjHxtSQtp183ZxwdLRby+LGEZL3c9QaWlVLjqdtwPY+l0Fj
iAj1BqI+y9lHKpBuToYGV/OMSgNVK053QjLCyZwW2pNo29Y0275JR+5ho6Xs
M8quyq5G4nauyjqYZ1QawGPhjoTkbeLEKkQWom0bWf2jPbbjCjIlqth+8tqk
B6PlANRweG3CbQZkJl0IyVvGiTii2EqWUmxYdB+e6z3GdTXZdBUzid510oXS
kQ615lpl4Ui3G1PebxwnVkHSaWnbNs2O7GR0HWYOOmRIIrmmyHndzkV5QKg+
ttht22m4CclPdtRJ8OLOtm3Q7Ej1lTeZP55FTc9+15+P8yR5hjYyAWnhdpBi
DJejG/xSznnewoEIj3Qku7Wkmm1T0Ebtwo3k+oJHTx+9D7fZMAs3iHeVfcpo
19ndd8ftgSgBF7k+205AhtAdzJzBGFBCrv5956YcuqotqAghcTzpj0V4fNUF
1/jx2ap3ePd6bXqiF4hB+YRHmWEfkQcM5heTgSmG6IY/UNBrxD6qdKwH62MO
h9Dr9DAQ0n35Dszh3o4uTPp8nKQtLTyos1XBvc/j+vmWCI/a3UaHMCGcSTIl
R4mgrDGYI8t/qq/ei+IUPUNl8P5ye2HOgy5S3tCg0sgQORiRtO2ZgTDpJGzh
HOBEa8dy1H3Rxet2DyrBFbl2bkpbmr+LSjJnEqZowraL7QtJdCHMHYPKIE5C
Q25YJbPL4xoOUXg2FTKsOHEoumRhGumNW+OqYkScq7odes7MgXULPw29CLOP
3uRK76ruAJYIMmk/avVfhR/z0YUwh9LO4ujDvZIRAS4RZNueT7ZXnHgUehHm
oi5XlffEAS49VIvSUgpeixUnngFd3rgxR0aX9yBLD9n/nEBy5RPPA7vEDkc0
R6bl15D+k20Pzdqswo9zopceSJ55fn6t2H+i2YOyNitOPDm6EAb+JoL5jssm
/GTbfQPJVfjxKqjSOobexN10jplwnVIvsm3UAyycEy3HlBGMI30mIJdFol51
sUNdAbXwEmhP5RyY0SYkM62cJHI/2hL03gCNxsmp7aOQlCLpoXxkewl6b4PG
VM4Z+KdmJrylEb/JihPfEi21T2ew7U0xE477kGuXoPfecOuBM8v+DUSBAxGS
4hMtR/0T4E7lnMS2t+ckKdl2rmMrTvxp8JV2z6+yy0GWCNKW5+RnVpz4A+HQ
Aw9M3CTBjxAFkitOXKgt7Z5ZQQri/vj2KHLgK05cINTqgYcnbjToEXhz4nLU
C4wqV3x44kZD7k9cceKCRFVp90nEbQIdBLfixAUDuB54BtteGwQWqgCmco4V
t1n9WI56AQco7h1i20vQW2gEUto9OXEjNwiskyEX3CimcmYmbpajXugLW76e
IG6vwo+FQbBTOUNtexV+LIyGUdo9InGz4sSFmcjpgX3F7VX4sTAfuVROr/PQ
lqNeOBDJ0u5GcXvFiQtnQFIPdIvbK05cOBV0aXetba84ceGciOoDqxI3K05c
ODlkaTcobi9HvfASkK7btu0w+Gz5hYXuYD0wl7iR39Y0vXcLC00gVxwlbtYG
gYU3AEWRTE6WoLfwTqDNtmsj+cL7gXz1ctQLCwsLCwsLCwsz8f/elQPa
     "], {{0, 160.5}, {183., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{136.5, Automatic},
   ImageSizeRaw->{183., 160.5},
   PlotRange->{{0, 183.}, {0, 160.5}}]], "Input",ExpressionUUID->
  "ecd2ebaa-7b9c-4ade-bbd4-536a40f70e5b"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
KsgDVOCCClCBoILMoAIXVCCoIABUYIMKUIGggjxABS6ooAYqGBoaGhwc3JCO
Tpzh4eG0rb29vTpVjd2LxaKeRqNB8sYwuwN6otK2qkm0gbH7AtavX6/tL1y4
EH6KUIHNClSB3h10ZIaPCs1vbm62B6ExTQYGBuxBqOH2LAjpgB4lbevIyEhL
S0vGkzw6OjoxMbEzHZ3plUolbave8bWBsXtra6suG4wGOoq6u7vtDmzdujVt
q54HuwOL6e/v1zMfPvtQgc2KUsGxY8d0TrW1tW3bti18SDQ0NJTLZaOBjjFj
moyPj9uDsKOjQw9hd0Db2B3Qo6RtnZ6e1oec8STvvMYKhITDhw9rt3WxEbI8
QAU2K0cFW7Zs0dHyxBNPXGo+BYJcqypI2LRpU8jyABXYrAQVJIsBPZPffffd
MvJRgVzbKpC55YHubi8PUIHNZVfBshcDVVCBXPMqSLCXB6jA5jKqIONioAoq
EFTwb4zlASqwuVwqyL4YqIIKBBX8J0suD1CBTe1VkNdioAoqEFSwiMXLA1Rg
U2MV5LgYqIIKBBWkMH95gApsaqaC3BcDVVCBoIJ0qssDVGBTGxUk7yXLdzFQ
BRXInAoGBgbuSKdQKNx6661pW3VfvUDG7qtXr1ZXGA10FJXL5WV3YHBw0O5A
RorFonagu7s73iH0DHR0dMTLb21tVafFy1+7dm3USzA0NKSXQOfC8PBwpEM0
NDS0t7cbDfQBajfStqpJ7DNQKpX0EHYHtI3dAT1K2lZVfXYVnPc4efKk6iht
66lTp7SBvXv2BmfPnk3bqssSe/fsvPzyy2+//fbXX38dKd89Ays8/9NPP43d
/6effvrMmTNRD+EOwtOnT6dt/fzzz2swC/QoRgMlowoghN9///1ydwEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAoEb8P++bgYw=
     "], {{0, 137.25}, {258.75, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{192.1875, Automatic},
   ImageSizeRaw->{258.75, 137.25},
   PlotRange->{{0, 258.75}, {0, 137.25}}]],
  CellChangeTimes->{{3.899648757676634*^9, 3.899648817277975*^9}, {
   3.899648852572274*^9, 3.8996488543013244`*^9}},ExpressionUUID->
  "51c8f215-4adf-4e86-abd5-ab7af88e990b"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AKfl/E8=
     "], {{0, 144.75}, {157.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{131.25, Automatic},
   ImageSizeRaw->{157.5, 144.75},
   PlotRange->{{0, 157.5}, {0, 144.75}}]], "Input",ExpressionUUID->
  "6618de0f-b64e-4697-a412-7e598e1e7996"]
}], "Text",
 CellChangeTimes->{{3.899718367589509*^9, 3.8997183711518497`*^9}, {
   3.8997184437207036`*^9, 3.899718508538515*^9}, {3.899718757319867*^9, 
   3.899718790332488*^9}, {3.8997189617728767`*^9, 3.899719039944892*^9}, {
   3.8997190766231613`*^9, 3.899719082248843*^9}, 3.8997191180007052`*^9, 
   3.899719179384933*^9, {3.899719252747592*^9, 3.8997192611749697`*^9}, 
   3.89971946178249*^9, {3.8997195687573605`*^9, 3.899719606654645*^9}, {
   3.899719670168517*^9, 3.899719703579296*^9}, {3.9343705804104443`*^9, 
   3.9343705878895063`*^9}},ExpressionUUID->"5f145ffe-1c3e-4447-b34a-\
8729a6f38d16"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related functions.", "Section",
 CellChangeTimes->{{3.8997193929591584`*^9, 
  3.8997193985868654`*^9}},ExpressionUUID->"83b24f18-4ca4-462b-9685-\
c7f5b776126b"],

Cell[CellGroupData[{

Cell["H1permutation function ", "Subsection",
 CellChangeTimes->{{3.899625424764917*^9, 
  3.899625437282985*^9}},ExpressionUUID->"3333a479-a43f-4f56-9ccd-\
d1c04524b50e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1permutation", "[", "e8_List", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"face", ",", "pair", ",", "facePer"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "e8", "]"}], "!=", "8"}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
     RowBox[{"face", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",",
           "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "5", ",", "6", ",", "2", ",", "4", ",", "8", ",", "7", ",",
           "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "2", ",", "6", ",", "7", ",", "3", ",", "1", ",", "5", ",", "8", ",",
           "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "4", ",", "8", ",", "5", ",", "2", ",", "3", ",", "7", ",",
           "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "5", ",", "8", ",", "7", ",", "6", ",", "1", ",", "4", ",", "3", ",",
           "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "3", ",", "7", ",", "8", ",", "4", ",", "2", ",", "6", ",", "5", ",",
           "1"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"facePer", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pair", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"face", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "ii"}], "]"}], "]"}], ",", 
              RowBox[{"face", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"ii", "+", "4"}]}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", "facePer"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "6"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"e8", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "pair"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1permutation", "[", "e8_List", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{"face", ","}], "*)"}], 
     RowBox[{"pair", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",",
           "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "2", ",", "3", ",", "4", ",", "1", ",", "6", ",", "7", ",", "8", ",",
           "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "3", ",", "4", ",", "1", ",", "2", ",", "7", ",", "8", ",", "5", ",",
           "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "4", ",", "1", ",", "2", ",", "3", ",", "8", ",", "5", ",", "6", ",",
           "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "5", ",", "6", ",", "2", ",", "4", ",", "8", ",", "7", ",",
           "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "5", ",", "6", ",", "2", ",", "1", ",", "8", ",", "7", ",", "3", ",",
           "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "6", ",", "2", ",", "1", ",", "5", ",", "7", ",", "3", ",", "4", ",",
           "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "2", ",", "1", ",", "5", ",", "6", ",", "3", ",", "4", ",", "8", ",",
           "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "2", ",", "6", ",", "7", ",", "3", ",", "1", ",", "5", ",", "8", ",",
           "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "6", ",", "7", ",", "3", ",", "2", ",", "5", ",", "8", ",", "4", ",",
           "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "7", ",", "3", ",", "2", ",", "6", ",", "8", ",", "4", ",", "1", ",",
           "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "3", ",", "2", ",", "6", ",", "7", ",", "4", ",", "1", ",", "5", ",",
           "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "4", ",", "8", ",", "5", ",", "2", ",", "3", ",", "7", ",",
           "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "4", ",", "8", ",", "5", ",", "1", ",", "3", ",", "7", ",", "6", ",",
           "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "8", ",", "5", ",", "1", ",", "4", ",", "7", ",", "6", ",", "2", ",",
           "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "5", ",", "1", ",", "4", ",", "8", ",", "6", ",", "2", ",", "3", ",",
           "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "5", ",", "8", ",", "7", ",", "6", ",", "1", ",", "4", ",", "3", ",",
           "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",",
           "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "7", ",", "6", ",", "5", ",", "8", ",", "3", ",", "2", ",", "1", ",",
           "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "6", ",", "5", ",", "8", ",", "7", ",", "2", ",", "1", ",", "4", ",",
           "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "3", ",", "7", ",", "8", ",", "4", ",", "2", ",", "6", ",", "5", ",",
           "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "7", ",", "8", ",", "4", ",", "3", ",", "6", ",", "5", ",", "1", ",",
           "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "8", ",", "4", ",", "3", ",", "7", ",", "5", ",", "1", ",", "2", ",",
           "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "4", ",", "3", ",", "7", ",", "8", ",", "1", ",", "2", ",", "6", ",",
           "5"}], "}"}]}], "}"}]}], 
     RowBox[{"(*", 
      RowBox[{",", "facePer"}], "*)"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "e8", "]"}], "!=", "8"}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"e8", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "pair"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.8995454078928175`*^9, 3.899545455015624*^9}, {
   3.8995454906596546`*^9, 3.8995455555972548`*^9}, {3.8995459124814453`*^9, 
   3.8995459822069654`*^9}, {3.8995460363211985`*^9, 
   3.8995460375280313`*^9}, {3.8995460947243857`*^9, 3.899546113173338*^9}, {
   3.899546328984994*^9, 3.8995463340977297`*^9}, {3.899546417015753*^9, 
   3.8995464508139005`*^9}, {3.8995465011330256`*^9, 3.899546554487032*^9}, 
   3.899546604856443*^9, {3.8995501588818583`*^9, 3.899550189885393*^9}, 
   3.8995510847555075`*^9, {3.8995511179049387`*^9, 3.899551216022417*^9}, {
   3.8995512904042997`*^9, 3.899551335822719*^9}, {3.89955151722871*^9, 
   3.8995515517383986`*^9}, {3.8995516882856216`*^9, 3.899551752330204*^9}, {
   3.8997158281146407`*^9, 3.8997158284255857`*^9}, {3.89971585873015*^9, 
   3.8997158879196663`*^9}, {3.899715926996713*^9, 3.899715961795765*^9}, {
   3.899716035466332*^9, 3.8997161998795195`*^9}, {3.9343702588480797`*^9, 
   3.9343702668257895`*^9}},ExpressionUUID->"a70f72a1-db4c-41ac-8a86-\
b069dd51a8dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "ElementSameListByCoordinateNearest", "]"}], ";", 
  RowBox[{
   RowBox[{"ElementSameListByCoordinateNearest", "[", 
    RowBox[{"coord_", ",", "ele_", ",", "eleSize_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eleCenter", ",", "nn", ",", 
       RowBox[{"BClist", "=", 
        RowBox[{"{", "}"}]}], ",", "tol"}], "}"}], ",", 
     RowBox[{
      RowBox[{"eleCenter", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"coord", "[", 
            RowBox[{"[", "ie", "]"}], "]"}], "]"}], "/", 
          RowBox[{"Length", "[", "ie", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ie", ",", "ele"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"tol", "=", 
       RowBox[{"0.02", " ", "eleSize"}]}], 
      RowBox[{"(*", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"coord", "[", 
          RowBox[{"[", 
           RowBox[{"ele", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "-", 
         RowBox[{"coord", "[", 
          RowBox[{"[", 
           RowBox[{"ele", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], 
       "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nn", "=", 
       RowBox[{"Nearest", "[", 
        RowBox[{
         RowBox[{"eleCenter", "\[Rule]", "Automatic"}], ",", "eleCenter", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "tol"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "nn"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8995537477700768`*^9, 3.8995537687006545`*^9}, {
  3.899553799537382*^9, 3.899553880985647*^9}, {3.8995539228681602`*^9, 
  3.899553950363035*^9}, {3.899554174185751*^9, 3.8995543124255247`*^9}, {
  3.8995543425698977`*^9, 3.8995543510758247`*^9}, {3.8995543821470747`*^9, 
  3.899554397227725*^9}, {3.899554512717092*^9, 3.8995546014262857`*^9}, {
  3.89955733030441*^9, 3.8995573457974606`*^9}, {3.899558941704644*^9, 
  3.899558946534276*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"58c3c7de-570e-41ef-a89f-5dd98375ead9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distance function.", "Subsection",
 CellChangeTimes->{{3.8996432231166553`*^9, 3.8996433262575903`*^9}, 
   3.899643397874908*^9, {3.8996479833750277`*^9, 
   3.8996479883158712`*^9}},ExpressionUUID->"30e93988-cec9-4a20-8478-\
1eb8af196226"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Distance", " ", "function", " ", "is", " ", "a", " ", "good", " ", 
     RowBox[{"idea", ".", " ", "Firstly"}]}], ",", 
    RowBox[{
    "it", " ", "is", " ", "analytical", " ", "and", " ", "hence", " ", "it", 
     " ", "is", " ", 
     RowBox[{"concise", ".", "It"}], " ", "represents", " ", "the", " ", 
     RowBox[{"topology", ".", " ", "Equal"}], " ", "symbol", " ", "denotes", 
     " ", "boundary"}], ",", 
    RowBox[{"sign", " ", "symbol", " ", "denotes", " ", 
     RowBox[{"distance", ".", "How"}], " ", "to", " ", "define", " ", "a", 
     " ", "distance", " ", 
     RowBox[{"function", "?", "Firstly"}]}], ",", 
    RowBox[{
    "distance", " ", "function", " ", "is", " ", "a", " ", "set", " ", "of", 
     " ", "constraint"}], ",", 
    RowBox[{"it", " ", "contains", " ", "bool", " ", "function", " ", 
     RowBox[{"first", ".", "Or"}]}], ",", "And", ",", 
    RowBox[{
     RowBox[{"Not", ".", "Positve"}], "-", "True"}], ",", 
    RowBox[{
     RowBox[{"Negative", "-", 
      RowBox[{"False", ".", 
       RowBox[{"Or", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "]"}]}]}], "=", 
     RowBox[{
      RowBox[{"2.", " ", 
       RowBox[{"Or", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"a", ",", "b"}], "]"}], ".", 
        RowBox[{"And", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"a", ",", "b"}], "]"}], ".", 
         RowBox[{"Not", "[", "a", "]"}]}], "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"a", ".", "Positive"}]}], "-", "True"}]}]}]}]}], ",", 
    RowBox[{"Negative", "-", 
     RowBox[{"False", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"distFun", ">", 
     RowBox[{"0", " ", "means", " ", "inside", " ", "or", " ", "True"}]}], 
    ",", " ", 
    RowBox[{"distFun", "<", 
     RowBox[{"0", " ", "means", " ", "outside", " ", "or", " ", 
      RowBox[{"False", ".", " ", "distFun"}], " ", "should", " ", "be", " ", 
      "defined", " ", 
      RowBox[{"with", "/", "without"}], " ", "Or0"}]}], ",", " ", "And0", ",",
     " ", "Not0"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "FindPointsByDistanceFunction", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"distFun", "[", 
       RowBox[{"x_", ",", "y"}], "]"}], ":=", 
      RowBox[{"[", 
       RowBox[{"Or0", ",", "And0", ",", "Not0"}], "]"}]}], ",", " ", 
     RowBox[{"distValue", ">", 
      RowBox[{"0", " ", "selects", " ", "distFun"}], ">", "0"}], ",", " ", 
     RowBox[{"distValue", " ", "selects", " ", "some", " ", "outside", " ", 
      RowBox[{"distFun", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindPointsByDistanceFunction", "[", 
      RowBox[{"pts_", ",", "distfun_", ",", "distValue_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dList", ",", 
         RowBox[{"pInside", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"pInDist", "=", 
          RowBox[{"{", "}"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"dList", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Apply", "[", 
           RowBox[{"distfun", ",", "pts", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "<", "distValue"}], ",", 
             RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">=", "0."}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"pInside", ",", "i"}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"pInDist", ",", "i"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "dList", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"pInDist", ",", "pInside"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"Or0", ",", "And0", ",", "Not0"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Or0", "[", 
      RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
     RowBox[{"Max", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Or0", "[", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
     RowBox[{"Max", "[", 
      RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"And0", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
     RowBox[{"Min", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"And0", "[", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
     RowBox[{"Min", "[", 
      RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Not0", "[", "a_", "]"}], ":=", 
     RowBox[{"-", "a"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"distFun1", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"And0", "[", 
        RowBox[{
         RowBox[{"And0", "[", 
          RowBox[{
           RowBox[{"4", "-", "x"}], ",", 
           RowBox[{"x", "-", "2"}]}], "]"}], ",", 
         RowBox[{"And0", "[", 
          RowBox[{
           RowBox[{"4", "-", "y"}], ",", " ", 
           RowBox[{"y", "-", "2"}]}], "]"}]}], "]"}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"denotes", " ", "2"}], "<=", "x", "<=", "4"}], " ", "&&", 
         " ", 
         RowBox[{"2", "<=", "y", "<=", "4"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"distFun2", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], ":=", 
      RowBox[{"And0", "[", 
       RowBox[{
        RowBox[{"Or0", "[", 
         RowBox[{
          RowBox[{"2", "-", "x"}], ",", " ", 
          RowBox[{"x", "-", "8"}]}], "]"}], ",", 
        RowBox[{"1", "-", "y"}]}], "]"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"denotes", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "<", "2"}], "||", 
         RowBox[{"x", ">", "8"}]}], ")"}]}], "&&", " ", 
      RowBox[{"y", "<", "1"}]}], "*)"}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.899643402954212*^9, 3.8996434266306534`*^9}, {
  3.899643571869398*^9, 3.899643872246398*^9}, {3.8996469823378735`*^9, 
  3.8996469998620543`*^9}, {3.8996472196033525`*^9, 3.8996472231767545`*^9}, {
  3.899647284459293*^9, 3.8996473780143557`*^9}, {3.8996474255279446`*^9, 
  3.8996474318417993`*^9}, {3.8996476350919905`*^9, 3.899647652919615*^9}, {
  3.899647722361478*^9, 3.8996477823813205`*^9}, {3.899647928467201*^9, 
  3.899647944633153*^9}, {3.8996480343129773`*^9, 3.8996481192321234`*^9}, {
  3.89964846439187*^9, 3.8996484700394845`*^9}, {3.9343702731725655`*^9, 
  3.934370306882554*^9}},ExpressionUUID->"ce1e84a1-843d-4899-aeef-\
087660a3bf08"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the boundary", "Subsection",
 CellChangeTimes->{{3.899648001635081*^9, 
  3.899648003666809*^9}},ExpressionUUID->"bc382919-f2dc-4a17-99cf-\
c06bedf9edfe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"by", " ", "FindPointsByDistanceFunction", " ", 
    RowBox[{"function", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "ElementBoundaryOfSetDistanceFunction", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ElementBoundaryOfSetDistanceFunction", "[", 
     RowBox[{
     "coord_", ",", "ele_", ",", "distFunc_", ",", "distValue_", ",", 
      "eleSize_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ndim", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "eleCenter", ",", 
        RowBox[{"faceList", "=", 
         RowBox[{"{", "}"}]}], ",", "faceCenter", ",", "elfun1", ",", "nedge",
         ",", "eleSet", ",", "adjacentEleSet", ",", "eleSetAll", ",", 
        "facePair", ",", "lenEleSet", ",", "ij", ",", "e1", ",", "e2", ",", 
        RowBox[{"bcPairElement", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"eleFound1", "=", 
         RowBox[{"{", "}"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"e1", ",", "e2", ",", "e1BC", ",", "e2BC"}], "}"}], "}"}], 
        "*)"}], "}"}], ",", 
      RowBox[{
       RowBox[{"eleCenter", "=", 
        RowBox[{"ElementCenter1", "[", 
         RowBox[{"coord", ",", "ele"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"adjacentEleSet", ",", "eleSet"}], "}"}], "=", 
        RowBox[{"FindPointsByDistanceFunction", "[", 
         RowBox[{"eleCenter", ",", "distFunc", ",", "distValue"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"eleSet", "==", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error, no element was found based on second function!\>\"", 
           "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"adjacentEleSet", "==", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error, no adjacent element was found based on first function!\
\>\"", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"eleSetAll", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"eleSet", ",", "adjacentEleSet"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "2"}], ",", 
         RowBox[{
          RowBox[{"elfun1", "=", "Q1BC"}], ";", 
          RowBox[{"nedge", "=", "4"}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "3"}], ",", 
         RowBox[{
          RowBox[{"elfun1", "=", "H1BC"}], ";", 
          RowBox[{"nedge", "=", "6"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"faceList", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"elfun1", "[", 
             RowBox[{"ele", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "eleSetAll"}], "}"}]}], "]"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"xy0", "=", 
          RowBox[{"{", 
           RowBox[{"eleSet", ",", "adjacentEleSet", ",", "faceList"}], 
           "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"facePair", "=", 
        RowBox[{"ElementSameListByCoordinateNearest", "[", 
         RowBox[{"coord", ",", "faceList", ",", "eleSize"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"lenEleSet", "=", 
        RowBox[{"Length", "[", "eleSet", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "beyond", " ", "lenEleSet", " ", "is", " ", "the", " ", 
         "\"\<boundary\>\"", " ", 
         RowBox[{"element", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"facePair", "=", 
        RowBox[{"facePair", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"(", 
            RowBox[{"nedge", "*", "lenEleSet"}], ")"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ij", "=", 
           RowBox[{"facePair", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ij", "]"}], "<", "2"}], ",", 
            RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"e1", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"ij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "/", "nedge"}], "]"}]}], ";", 
          RowBox[{"e2", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"ij", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", "nedge"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"e2", ">", "lenEleSet"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"bcPairElement", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"eleSet", "[", 
                 RowBox[{"[", "e1", "]"}], "]"}], ",", 
                RowBox[{"adjacentEleSet", "[", 
                 RowBox[{"[", 
                  RowBox[{"e2", "-", "lenEleSet"}], "]"}], "]"}], ",", 
                RowBox[{"faceList", "[", 
                 RowBox[{"[", 
                  RowBox[{"ij", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"faceList", "[", 
                 RowBox[{"[", 
                  RowBox[{"ij", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
             "]"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"nedge", "*", "lenEleSet"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ndim", "==", "2"}], ",", 
           RowBox[{"eleFound1", "=", 
            RowBox[{"CheckQ1To5Q1Element", "[", "]"}]}]}], "]"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"xy1", "=", 
          RowBox[{"{", 
           RowBox[{"bcPairElement", ",", "adjacentEleSet"}], "}"}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "3"}], ",", 
         RowBox[{"eleFound1", "=", 
          RowBox[{"CheckH1To5H1Element", "[", 
           RowBox[{
            RowBox[{"Length", "[", "eleSet", "]"}], ",", "bcPairElement", ",",
             "adjacentEleSet", ",", 
            RowBox[{"ele", "[", 
             RowBox[{"[", "adjacentEleSet", "]"}], "]"}]}], "]"}]}]}], "]"}], 
       ";", 
       RowBox[{"(*", 
        RowBox[{"consider", " ", "the", " ", "case", " ", "of", " ", 
         RowBox[{"RefineH1To5H1", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
       "Print", "[", 
        "\"\<ElementBoundaryOfSetDistanceFunction completed!\>\"", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"eleSet", ",", "bcPairElement"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"eleSet", ",", "bcPairElement", ",", "eleFound1"}], "}"}]}],
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8996482260914288`*^9, 3.899648305557832*^9}, {
  3.8996483833333178`*^9, 3.8996483847554483`*^9}, {3.8996484180266857`*^9, 
  3.899648448108629*^9}, {3.8996484781879435`*^9, 3.899648485549138*^9}, {
  3.899885244982686*^9, 3.899885256579734*^9}, {3.9004278167618723`*^9, 
  3.900427852441681*^9}, {3.9004279632888126`*^9, 3.9004279887030897`*^9}, {
  3.900428035529298*^9, 3.90042804181596*^9}, {3.9004280767799816`*^9, 
  3.9004280905244713`*^9}, {3.9004284467819595`*^9, 3.900428459240056*^9}, {
  3.9004285198641663`*^9, 3.9004287021866035`*^9}, {3.9004287714518814`*^9, 
  3.9004288046715364`*^9}, {3.9004289507882385`*^9, 3.900429069610806*^9}, {
  3.9343703323973403`*^9, 
  3.934370332825522*^9}},ExpressionUUID->"e6d184b7-bd6b-4367-9508-\
6f6157e0aaaf"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"by", " ", "FindPointsByRule", " ", 
    RowBox[{"function", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ElementBoundaryOfSet", "[", 
     RowBox[{
     "coord_", ",", "ele_", ",", "boolFun1_", ",", "boolFun2_", ",", 
      "eleSize_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ndim", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "eleCenter", ",", 
        RowBox[{"faceList", "=", 
         RowBox[{"{", "}"}]}], ",", "faceCenter", ",", "elfun1", ",", "nedge",
         ",", "eleSet", ",", "adjacentEleSet", ",", "eleSetAll", ",", 
        "facePair", ",", "lenEleSet", ",", "ij", ",", "e1", ",", "e2", ",", 
        RowBox[{"bcPairElement", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"eleFound1", "=", 
         RowBox[{"{", "}"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"e1", ",", "e2", ",", "e1BC", ",", "e2BC"}], "}"}], "}"}], 
        "*)"}], "}"}], ",", 
      RowBox[{
       RowBox[{"eleCenter", "=", 
        RowBox[{"ElementCenter1", "[", 
         RowBox[{"coord", ",", "ele"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"adjacentEleSet", ",", "eleSet"}], "}"}], "=", 
        RowBox[{"FindPointsByRule", "[", 
         RowBox[{"eleCenter", ",", "boolFun1", ",", "boolFun2"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"eleSet", "==", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error, no element was found based on second function!\>\"", 
           "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"adjacentEleSet", "==", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error, no adjacent element was found based on first function!\
\>\"", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"eleSetAll", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"eleSet", ",", "adjacentEleSet"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "2"}], ",", 
         RowBox[{
          RowBox[{"elfun1", "=", "Q1BC"}], ";", 
          RowBox[{"nedge", "=", "4"}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "3"}], ",", 
         RowBox[{
          RowBox[{"elfun1", "=", "H1BC"}], ";", 
          RowBox[{"nedge", "=", "6"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"faceList", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"elfun1", "[", 
             RowBox[{"ele", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "eleSetAll"}], "}"}]}], "]"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"xy0", "=", 
          RowBox[{"{", 
           RowBox[{"eleSet", ",", "adjacentEleSet", ",", "faceList"}], 
           "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"facePair", "=", 
        RowBox[{"ElementSameListByCoordinateNearest", "[", 
         RowBox[{"coord", ",", "faceList", ",", "eleSize"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"lenEleSet", "=", 
        RowBox[{"Length", "[", "eleSet", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "beyond", " ", "lenEleSet", " ", "is", " ", "the", " ", 
         "\"\<boundary\>\"", " ", 
         RowBox[{"element", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"facePair", "=", 
        RowBox[{"facePair", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"(", 
            RowBox[{"nedge", "*", "lenEleSet"}], ")"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ij", "=", 
           RowBox[{"facePair", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ij", "]"}], "<", "2"}], ",", 
            RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"e1", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"ij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "/", "nedge"}], "]"}]}], ";", 
          RowBox[{"e2", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"ij", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", "nedge"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"e2", ">", "lenEleSet"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"bcPairElement", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"eleSet", "[", 
                 RowBox[{"[", "e1", "]"}], "]"}], ",", 
                RowBox[{"adjacentEleSet", "[", 
                 RowBox[{"[", 
                  RowBox[{"e2", "-", "lenEleSet"}], "]"}], "]"}], ",", 
                RowBox[{"faceList", "[", 
                 RowBox[{"[", 
                  RowBox[{"ij", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"faceList", "[", 
                 RowBox[{"[", 
                  RowBox[{"ij", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
             "]"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"nedge", "*", "lenEleSet"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"xy1", "=", 
          RowBox[{"{", 
           RowBox[{"bcPairElement", ",", "adjacentEleSet"}], "}"}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "3"}], ",", 
         RowBox[{"eleFound1", "=", 
          RowBox[{"CheckH1To5H1Element", "[", 
           RowBox[{
            RowBox[{"Length", "[", "eleSet", "]"}], ",", "bcPairElement", ",",
             "adjacentEleSet", ",", 
            RowBox[{"ele", "[", 
             RowBox[{"[", "adjacentEleSet", "]"}], "]"}]}], "]"}]}]}], "]"}], 
       ";", 
       RowBox[{"(*", 
        RowBox[{"consider", " ", "the", " ", "case", " ", "of", " ", 
         RowBox[{"RefineH1To5H1", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"eleSet", ",", "bcPairElement"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"eleSet", ",", "bcPairElement", ",", "eleFound1"}], "}"}]}],
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "CheckH1To5H1Element", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckH1To5H1Element", "[", 
      RowBox[{
      "lenEleSet_", ",", "bcPairElement_", ",", "adjacentEleSet_", ",", 
       "adjacentElement_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pair1Count", ",", "ibc", ",", "bcJ", ",", "bcK", ",", "edgeJ", ",", 
         "edgeK", ",", "edgeJK", ",", "jkEle", ",", 
         RowBox[{"BCeleFound", "=", 
          RowBox[{"{", "}"}]}], ",", "iBCeleFound"}], "}"}], ",", 
       RowBox[{
        RowBox[{"pair1Count", "=", 
         RowBox[{"Tally", "[", 
          RowBox[{"bcPairElement", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<pair1Count:\>\"", ",", "pair1Count"}], "]"}], ";"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pair1Count", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "==", "1"}], ",", 
             RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ibc", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"bcPairElement", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"pair1Count", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"bcJ", "=", 
               RowBox[{"ibc", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"edgeJ", "=", 
               RowBox[{"bcPairElement", "[", 
                RowBox[{"[", 
                 RowBox[{"bcJ", ",", "4"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Do", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bcK", "=", 
                  RowBox[{"ibc", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"edgeK", "=", 
                  RowBox[{"bcPairElement", "[", 
                   RowBox[{"[", 
                    RowBox[{"bcK", ",", "4"}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"edgeJK", "=", 
                  RowBox[{"Intersection", "[", 
                   RowBox[{"edgeJ", ",", "edgeK"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "edgeJK", "]"}], "!=", "2"}], ",", 
                   RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"jkEle", "=", 
                  RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{
                    RowBox[{"adjacentElement", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], ",", "edgeJK"}], "]"}], 
                    ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"jkEle", ",", 
                    RowBox[{"adjacentEleSet", "[", 
                    RowBox[{"[", "l", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"l", ",", 
                    RowBox[{"Length", "[", "adjacentElement", "]"}]}], 
                    "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"iBCeleFound", "=", 
                  RowBox[{"Complement", "[", 
                   RowBox[{"jkEle", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"bcPairElement", "[", 
                    RowBox[{"[", 
                    RowBox[{"bcJ", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"bcPairElement", "[", 
                    RowBox[{"[", 
                    RowBox[{"bcK", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"iBCeleFound", "!=", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"BCeleFound", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"iBCeleFound", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "edgeJK"}], "}"}]}], 
                    "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"j", "+", "1"}], ",", 
                  RowBox[{"Length", "[", "ibc", "]"}]}], "}"}]}], "]"}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"Length", "[", "ibc", "]"}]}], "}"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "pair1Count", "]"}]}], "}"}]}], "]"}], ";",
         "\[IndentingNewLine]", "BCeleFound"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H1To5H1ElementAlign", "[", 
     RowBox[{"ele_", ",", "eleEdge_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eleList", ",", 
        RowBox[{"ires", "=", "0"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"eleList", "=", 
        RowBox[{"H1permutation", "[", "ele", "]"}]}], ";", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"ii", "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "5"}], "}"}], "]"}], "]"}], "]"}], "==", 
            "eleEdge"}], ",", 
           RowBox[{
            RowBox[{"ires", "=", "ii"}], ";", 
            RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "eleList"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ires", "==", "0"}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error, No edge is found, the edge didn't exist!\>\"", "]"}], 
          ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "ires"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H1To13H1ElementAlign", "[", 
     RowBox[{"ele_", ",", "eleEdge_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eleList", ",", 
        RowBox[{"ires", "=", "0"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"eleList", "=", 
        RowBox[{"H1permutation", "[", "ele", "]"}]}], ";", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"ii", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "4"}], "]"}], "]"}], "]"}], "==", 
            RowBox[{"Sort", "[", "eleEdge", "]"}]}], ",", 
           RowBox[{
            RowBox[{"ires", "=", "ii"}], ";", 
            RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "eleList"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ires", "==", "0"}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error, No edge is found, the edge didn't exist!\>\"", "]"}], 
          ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "ires"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.899552338198311*^9, 3.899552369939436*^9}, {
   3.8995529093393097`*^9, 3.899552916500743*^9}, {3.8995532677252016`*^9, 
   3.8995533536596384`*^9}, {3.899553446751993*^9, 3.8995534672444234`*^9}, 
   3.899553528843119*^9, {3.899553574383274*^9, 3.8995536346121855`*^9}, {
   3.899554663694906*^9, 3.899554704341443*^9}, {3.899554735004608*^9, 
   3.8995547396460867`*^9}, {3.899556567529376*^9, 3.899556574406772*^9}, {
   3.8995566751271887`*^9, 3.8995567053544135`*^9}, {3.8995567533655834`*^9, 
   3.8995568061255345`*^9}, {3.89955684540207*^9, 3.8995569717310667`*^9}, {
   3.8995570086981416`*^9, 3.8995570493995447`*^9}, {3.899557123074964*^9, 
   3.8995572639100437`*^9}, {3.899557299634884*^9, 3.8995573133703303`*^9}, {
   3.8995573602984867`*^9, 3.8995574300795813`*^9}, {3.8995574959193482`*^9, 
   3.8995575713240957`*^9}, {3.8995576104219275`*^9, 
   3.8995576171455784`*^9}, {3.8995576659006343`*^9, 
   3.8995577774844885`*^9}, {3.899557831055563*^9, 3.8995580030961523`*^9}, {
   3.899558036802791*^9, 3.8995580716951594`*^9}, {3.899558119287587*^9, 
   3.8995582091407557`*^9}, {3.899558533418699*^9, 3.8995585353614902`*^9}, {
   3.8995585779358044`*^9, 3.8995586078378887`*^9}, 3.899558665012906*^9, {
   3.8995589953571053`*^9, 3.8995590220685015`*^9}, {3.899559394963378*^9, 
   3.8995593999024467`*^9}, {3.8995594965875797`*^9, 3.899559533574984*^9}, {
   3.899603295662937*^9, 3.8996033210749393`*^9}, {3.8996033791638927`*^9, 
   3.8996033805546255`*^9}, {3.899603620406166*^9, 3.8996036446427107`*^9}, {
   3.899603711897216*^9, 3.899603741809471*^9}, {3.899603827554831*^9, 
   3.8996038659899964`*^9}, {3.8996040272022295`*^9, 3.899604337569228*^9}, {
   3.8996043989964705`*^9, 3.8996044856780443`*^9}, {3.8996045194056673`*^9, 
   3.89960456022268*^9}, {3.8996047438887763`*^9, 3.899604843681411*^9}, {
   3.8996049871515107`*^9, 3.899604993340263*^9}, {3.899605052570879*^9, 
   3.8996051631376753`*^9}, {3.899605197340664*^9, 3.8996052032938585`*^9}, {
   3.899605235656444*^9, 3.8996054941156187`*^9}, {3.8996055338655643`*^9, 
   3.89960559771169*^9}, {3.899605658292768*^9, 3.8996057501271453`*^9}, {
   3.8996057838117657`*^9, 3.8996058867282715`*^9}, {3.8996059281666665`*^9, 
   3.899605928900955*^9}, {3.89960599391853*^9, 3.8996060374789314`*^9}, {
   3.899606097474652*^9, 3.899606295472773*^9}, {3.899607379096072*^9, 
   3.8996074120521145`*^9}, {3.8996080614970016`*^9, 
   3.8996080620922694`*^9}, {3.899609218183546*^9, 3.899609244400103*^9}, {
   3.8996093350965533`*^9, 3.899609400274378*^9}, {3.8996094624382687`*^9, 
   3.899609475295351*^9}, {3.8996096215585737`*^9, 3.8996097207565393`*^9}, {
   3.8996098717086916`*^9, 3.8996098986752043`*^9}, {3.8996112547830987`*^9, 
   3.8996112565351253`*^9}, {3.8996130873994255`*^9, 3.8996131033665113`*^9}, 
   3.8996173601233635`*^9, {3.8996481710592346`*^9, 3.899648187879535*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2cbd9ea8-d2ba-471f-af69-544d71160b00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Q1BC", "[", "ei_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ei", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H1BC", "[", "ei_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ei", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5", ",", "6", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "8", ",", "7", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "6", ",", "7", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5", ",", "8", ",", "4"}], "}"}]}], "}"}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindPointsByRule", "[", 
   RowBox[{"v1_List", ",", "boolFun1_", ",", "boolFun2_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"inFun12", ",", "inFun2", ",", "inFun1not2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"inFun12", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"boolFun1", ",", "v1", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], ",", "True"}], "]"}], "]"}]}], 
     ";", 
     RowBox[{"inFun2", "=", 
      RowBox[{"inFun12", "[", 
       RowBox[{"[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"boolFun2", ",", 
             RowBox[{"v1", "[", 
              RowBox[{"[", "inFun12", "]"}], "]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], ",", "True"}], "]"}], "]"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inFun1not2", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{"inFun12", ",", "inFun2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"inFun1not2", ",", "inFun2"}], "}"}]}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"FindPointsByRule", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", "+", 
          RowBox[{"0.01", " ", "i"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"#", ">=", "3"}], "&"}], ",", " ", 
      RowBox[{
       RowBox[{"#", ">=", "5"}], "&"}]}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], 
       "}"}]}], "}"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.899553137166673*^9, 3.8995532189971876`*^9}, {
  3.899554647662645*^9, 3.8995546537443514`*^9}, {3.8995564689572816`*^9, 
  3.899556469644654*^9}, {3.8996130142463675`*^9, 3.8996130164348116`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4f89eaf0-e597-4616-877a-383b4b7c2cca"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two cases to refine Q1 elements. ", "Subsection",
 CellChangeTimes->{{3.899718140900078*^9, 
  3.8997181501216526`*^9}},ExpressionUUID->"75ea3288-5873-4753-9012-\
2f126ad93616"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 162.}, {143.25, 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{96., 96.},
       SmoothingQuality->"High"],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{149.0625, Automatic},
     ImageSizeRaw->{143.25, 162.},
     PlotRange->{{0, 143.25}, {0, 162.}}], 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
uhNtXHprX0Lv1sRuEG1cemtfQu/WxG4QbVx6a19C79bEbhBtXHprX0Lv1sRu
EHNcSmtfgtixJ/b2174EsWNP7CrLn6d3X2I3iDkuveXP07svsRvEHJfe8ufp
3ZfYDWKOS2/58/TuS+wGMcelt/x5evcldoOY49Jb/jy9+xK7Qcxx6S1/nt59
id0g5rj0lj9P777EbhBzXHrLn6d3X2I3iDkuveXP07svsRvEHJfe8ufp3ZfY
DWKOS2/58/TuS+wGMcelt/x5evcldoOY49Jb/jy9+xK7Qcxx6S1/nt59id0g
5rj0lj9P777EbhBzXHrLn6d3X2I3iDkuveXP07svsRvEHJfe8ufp3ZfYDWKO
S2/58/TuS+wGMcelt/x5evcldoOY49Jb/jy9+xK7Qcxx6S1/nt59id0g5rj0
lj9P777EbhBzXHrLn6d3X2I3iDkuveXP07svsRvEHJfe8ufp3ZfYDWKOS2/5
8/TuS+wGMcelt/x5evcldoOY49Jb/jy9+xK7Qcxx6S1/nt59id0g5rj0lj9P
777EbhBzXHrLn6d3X2I3iDkuveXP07svsRvEHJfe8ufp3ZfYDWKOS2/58/Tu
S+wGkcell8AQvZsSu0HkceklMETvpsRuEHlcegkM0bspsRtEHpdeAkP0bkrs
BpHHpZdAntJ9id0g8riUlr+E0n2J3SDyuJSWv4TSfYndIPK4lJa/hNJ9id0g
8riUlr+E0n2J3SDyuJSWv4TSfYndIPK4lJa/hNJ9id0g8riUlr+E0n2J3SDy
uJSWv4TSfYndIPK4lJa/hNJ9id0g8riUlr+E0n2J3SDyuJSWv4TSfYndIPK4
lJa/hNJ9id0g8riUlr+E0n2J3SDyuJSWv4TSfYndIPK4lJa/hNJ9id0g8riU
lr+E0n2J3SDyuJSWv4TSfYndIPK4lJa/hNJ9id0g8riUlr+E0n2J3SDyuJSW
v4TSfYndIPK4lJa/hNJ9id0g8riUlr+E0n2J3SDyuJSWv4TSfYndIPK4lJa/
hNJ9id0g8riUlr+E0n2J3WDacd1dX6TTLc/Hmw/pzPE5T0Vp+Uso3ZfYDYhd
Y/lLKN2X2A3GjSu1/OHz24t0TpeH2L1Rui+xGxC7xvKXULovsRtMFvvb23Tu
bq7SIXaflO5L7AbErrH8JZTuS+wG047r/ubqvp3YOxrLX4LYgyN2jeUvQezB
EbtSAnlKN50i9p/S+fTm4tPzUbxL526/v1viHosidqUE8pRuSuwGxK6UQJ7S
TcfFnvuSsXDyxK6UQJ7STYndgNiVEshTuukEsV/fpnOflvbpw+9v0/mYVvdh
IGmNrz6/36cjg9iVEshTuimxGxC7UgJ5SjcdF/uQ/lt2xP4KYvdM6abEbkDs
SgnkKd10jtj7f0C7+/bvoxf57SN2pQTylG5K7AYlQyv3+y9/m043rv9++UU6
0/78c8gnUPuzm0b+jko3HTJcwOmX4QS/6NaZdqTE7hOxDxdA7IFoJ1CSucZN
815Y/aMvtMm+dO+r/RDq006A2DsvrD6xx6OdALF3jrf++Uv3Tz/u05FX+yHU
p50AsXeOt57Yg9JOgNg7R0t/+gJ+4Ij9IlD7IdSnnQCxd46WntjjiZAAsXeO
lv7Hd+mUzITYZURIgNg7R0sfNfa+2g9kaRESIPZO7bbcqf1AlhYhAWLv1G4L
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA82q7TGfx3DFxu
0tnt97vanyaAsYgdiGG3uUyH2AF5xA4E8Rj7w0lVb6gaEEXsCOju+iKd7l/j
+/HmQzq1P6MlbNerw/tzcWLfHi69ev6mJL9hiYTYiZ3Ynevy7J+yfy61/OHz
24t0Tn+GeLGfeghie2hDxG6zf/wdC29FNorYxyB2Ym/CaaRD56V/uhf729t0
7m6u0iF21eSPbrreHq6FZhD7eMSOJpTHXvLy/v7m6j5e7C/pv4Wl8cZd70aH
l+vbzeX2+FuJUvrU7xmxz4PY4Q6xj/PwdtRul/569nG52PN/2OfxHTqFm+oi
9nGIndgbQ+xWu8N3y64yfw5G5I2so9ifv+XYf+Mu1X5J7Y4RuxWxdz9I7A07
N/NOvNgPhl7iamTe6d/x5Jtn+n/Il9ibQ+xnIHZijydo7CEMveX4/DcyfAEu
CGLXRew4QuzaXvnGYP4gTCTEro3Y8YTYI3gpeZ0/7INCxB4BsQMAAAAAAAAA
AAAAAAAAAAAAAAAAgFP/A94Mnmk=
       "], {{0, 242.25}, {251.25, 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{96., 96.},
       SmoothingQuality->"High"],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{123.5625, Automatic},
     ImageSizeRaw->{251.25, 242.25},
     PlotRange->{{0, 251.25}, {0, 242.25}}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "RefineQ1To3x3Q1", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RefineQ1To3x3Q1", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1_", ",", "x2_", ",", "x3_", ",", "x4_"}], "}"}], ",", 
      "eList_", ",", "Inc_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10", ",", 
        "x11", ",", "x12", ",", "x13", ",", "x14", ",", "x15", ",", "x16", 
        ",", "\[IndentingNewLine]", 
        RowBox[{"y12", "=", 
         RowBox[{"x2", "-", "x1"}]}], ",", 
        RowBox[{"y23", "=", 
         RowBox[{"x3", "-", "x2"}]}], ",", 
        RowBox[{"y14", "=", 
         RowBox[{"x4", "-", "x1"}]}], ",", 
        RowBox[{"y43", "=", 
         RowBox[{"x3", "-", "x4"}]}], ",", 
        RowBox[{"e1", "=", 
         RowBox[{"eList", "-", "Inc", "+", "4"}]}], ",", "elist"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x5", "=", 
        RowBox[{"x1", "+", 
         RowBox[{"y12", "/", "3"}]}]}], ";", 
       RowBox[{"x6", "=", 
        RowBox[{"x1", "+", 
         RowBox[{"2", 
          RowBox[{"y12", "/", "3"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x7", "=", 
        RowBox[{"x1", "+", 
         RowBox[{"y14", "/", "3"}]}]}], ";", 
       RowBox[{"x11", "=", 
        RowBox[{"x4", "-", 
         RowBox[{"y14", "/", "3"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x10", "=", 
        RowBox[{"x2", "+", 
         RowBox[{"y23", "/", "3"}]}]}], ";", 
       RowBox[{"x14", "=", 
        RowBox[{"x3", "-", 
         RowBox[{"y23", "/", "3"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x15", "=", 
        RowBox[{"x4", "+", 
         RowBox[{"y43", "/", "3"}]}]}], ";", 
       RowBox[{"x16", "=", 
        RowBox[{"x3", "-", 
         RowBox[{"y43", "/", "3"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x8", "=", 
        RowBox[{"x5", "+", 
         RowBox[{"y14", "/", "3"}]}]}], ";", 
       RowBox[{"x9", "=", 
        RowBox[{"x6", "+", 
         RowBox[{"y23", "/", "3"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x12", "=", 
        RowBox[{"x15", "-", 
         RowBox[{"y14", "/", "3"}]}]}], ";", 
       RowBox[{"x13", "=", 
        RowBox[{"x16", "-", 
         RowBox[{"y23", "/", "3"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"elist", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"e1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "5", ",", "8", ",", "7"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "6", ",", "9", ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", 
            RowBox[{"e1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "10", ",", "9"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"7", ",", "8", ",", "12", ",", "11"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", "9", ",", "13", ",", "12"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", "10", ",", "14", ",", "13"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"e1", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "11", ",", "12", ",", 
            "15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"12", ",", "13", ",", "16", ",", "15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"e1", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "16", ",", "13", ",", 
            "14"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10", ",", 
           "x11", ",", "x12", ",", "x13", ",", "x14", ",", "x15", ",", 
           "x16"}], "}"}], ",", 
         RowBox[{"elist", "+", "Inc", "-", "4"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "RefineQ1ToFourQ1", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RefineQ1ToFourQ1", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x1_", ",", "x2_", ",", "x3_", ",", "x4_"}], "}"}], ",", 
       "eList_", ",", "Inc_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x5", ",", "x6", ",", "x7", ",", "x8", ",", "\[IndentingNewLine]", 
         RowBox[{"y12", "=", 
          RowBox[{"x2", "-", "x1"}]}], ",", 
         RowBox[{"y23", "=", 
          RowBox[{"x3", "-", "x2"}]}], ",", 
         RowBox[{"y14", "=", 
          RowBox[{"x4", "-", "x1"}]}], ",", "elist", ",", 
         RowBox[{"e1", "=", 
          RowBox[{"eList", "-", "Inc", "+", "4"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"elist", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"e1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "5", ",", "7", ",", 
             RowBox[{"e1", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "6", ",", "8", ",", "7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"e1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"e1", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", "8", ",", "6"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"e1", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"e1", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", "7", ",", "8"}], "}"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"x5", "=", 
         RowBox[{"x1", "+", 
          RowBox[{"y12", "/", "3"}]}]}], ";", 
        RowBox[{"x6", "=", 
         RowBox[{"x1", "+", 
          RowBox[{"2", 
           RowBox[{"y12", "/", "3"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"x7", "=", 
         RowBox[{"x5", "+", 
          RowBox[{"y14", "/", "2"}]}]}], ";", 
        RowBox[{"x8", "=", 
         RowBox[{"x6", "+", 
          RowBox[{"y23", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x5", ",", "x6", ",", "x7", ",", "x8"}], "}"}], ",", 
          RowBox[{"elist", "+", "Inc", "-", "4"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8995598887073107`*^9, 3.8995599073258457`*^9}, {
   3.899560016644641*^9, 3.899560018766636*^9}, {3.8995600637971983`*^9, 
   3.899560073542362*^9}, {3.899560164786745*^9, 3.899560175085234*^9}, {
   3.899560345770415*^9, 3.8995609473302217`*^9}, {3.8995609954233513`*^9, 
   3.8995610307714434`*^9}, {3.8995611588445005`*^9, 
   3.8995613088015437`*^9}, {3.8995613529982786`*^9, 3.899561430261864*^9}, 
   3.8995614640723534`*^9, {3.8995624569501443`*^9, 3.899562471536477*^9}, {
   3.899562505052475*^9, 3.899562659637385*^9}, 3.899563136565349*^9, {
   3.899564592300687*^9, 3.899564608353925*^9}, {3.899565377279415*^9, 
   3.8995653791579847`*^9}, {3.899567655616145*^9, 3.8995676566475286`*^9}, {
   3.899568495613003*^9, 3.899568521063772*^9}, {3.8995686600164204`*^9, 
   3.899568677290436*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"d8861b0e-b3eb-4031-a2ea-5fcc4c3c669f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "RefineQ1ToFourQ1Aligned", "]"}], ";", 
  RowBox[{
   RowBox[{"RefineQ1ToFourQ1Aligned", "[", 
    RowBox[{"coord2_", ",", "e2_", ",", "e2pair_", ",", "eleInc_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cd2new", ",", "ele2new", ",", "e2Posi", ",", "pairIndex", ",", 
       "e2New0", ",", "coord2New0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"e2Posi", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"e2", ",", 
          RowBox[{"e2pair", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"e2Posi", "==", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Error, no index was found!\>\"", ",", "e2", ",", "e2pair"}], 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pairIndex", "=", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"e2Posi", "+", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], ",",
           "4"}], "]"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"NumericQ", "[", "pairIndex", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Error, pairIndex symbol\>\"", ",", "pairIndex"}], 
            "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"e2New0", "=", 
       RowBox[{"e2", "[", 
        RowBox[{"[", "pairIndex", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"coord2New0", "=", 
       RowBox[{"coord2", "[", 
        RowBox[{"[", "pairIndex", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"e2", ",", "coord2New0", ",", "e2New0", ",", "eleInc"}], 
           "}"}], ",", "\"\<xm2\>\""}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cd2new", ",", "ele2new"}], "}"}], "="}], "*)"}], 
      RowBox[{"RefineQ1ToFourQ1", "[", 
       RowBox[{"coord2New0", ",", "e2New0", ",", "eleInc"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.899561472543745*^9, 3.8995615814696116`*^9}, {
   3.8995616194065714`*^9, 3.899561620937851*^9}, {3.8995617005496626`*^9, 
   3.899561718315415*^9}, {3.899561784511979*^9, 3.8995617876091843`*^9}, {
   3.8995618675565586`*^9, 3.8995619110543537`*^9}, {3.8995619411241875`*^9, 
   3.899561992847604*^9}, {3.899562238776537*^9, 3.899562274400692*^9}, {
   3.8995627720469213`*^9, 3.89956295849341*^9}, {3.8995631829248047`*^9, 
   3.8995632617247734`*^9}, {3.8995644201362176`*^9, 
   3.8995644202933493`*^9}, {3.899565011945841*^9, 3.8995650143058195`*^9}, {
   3.899565265516368*^9, 3.8995652984042735`*^9}, 3.8995654225675077`*^9, {
   3.8995674267363863`*^9, 3.8995674775674047`*^9}, 3.899567531103368*^9, {
   3.8995676007853117`*^9, 3.8995676015862494`*^9}, {3.8995905003560266`*^9, 
   3.8995905863155565`*^9}, {3.8995907508504004`*^9, 
   3.8995907906953993`*^9}, {3.899591135912216*^9, 3.8995911393316927`*^9}, 
   3.899591180474827*^9, {3.899591709154473*^9, 3.899591741979813*^9}, 
   3.899617202877119*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"44862d7f-fe9a-497d-843c-dfabaf2b4107"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Three cases of element refinements in H1.", "Subsection",
 CellChangeTimes->{{3.8997181086586733`*^9, 
  3.8997181220390186`*^9}},ExpressionUUID->"86cc26e2-2e61-438b-8670-\
d7d02e8f4c98"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RefineH1To27H1", "[", "cd8_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cdNew", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", 
        "x6", ",", "x7", ",", "x8", ",", "ele"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", 
          "x7", ",", "x8"}], "}"}], "=", "cd8"}], ";", "\[IndentingNewLine]", 
       RowBox[{"cdNew", "=", 
        RowBox[{"{", 
         RowBox[{"x1", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "3"], "+", 
           FractionBox["x5", "3"]}], ",", 
          RowBox[{
           FractionBox["x1", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x5"}], "3"]}], ",", "x5", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "3"], "+", 
           FractionBox["x4", "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x1"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x5"}], "9"], "+", 
           FractionBox["x8", "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "9"], "+", 
           FractionBox["x4", "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x5"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x5"}], "3"], "+", 
           FractionBox["x8", "3"]}], ",", 
          RowBox[{
           FractionBox["x1", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x4"}], "9"], "+", 
           FractionBox["x5", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x1", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x5"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x5", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "3"]}], ",", "x4", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x4"}], "3"], "+", 
           FractionBox["x8", "3"]}], ",", 
          RowBox[{
           FractionBox["x4", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "3"]}], ",", "x8", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "3"], "+", 
           FractionBox["x2", "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x1"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x2"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x5"}], "9"], "+", 
           FractionBox["x6", "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "9"], "+", 
           FractionBox["x2", "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x5"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x5"}], "3"], "+", 
           FractionBox["x6", "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x1"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x2"}], "9"], "+", 
           FractionBox["x3", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"8", " ", "x1"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x2"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x3"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x4"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x5"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "27"], "+", 
           FractionBox["x7", "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "27"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x1"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x2"}], "27"], "+", 
           FractionBox["x3", "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "27"], "+", 
           FractionBox[
            RowBox[{"8", " ", "x5"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x6"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x8"}], "27"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x5"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "9"], "+", 
           FractionBox["x7", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "9"], "+", 
           FractionBox["x2", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x3"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x4"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x1"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x2"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x3"}], "27"], "+", 
           FractionBox[
            RowBox[{"8", " ", "x4"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x5"}], "27"], "+", 
           FractionBox["x6", "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x8"}], "27"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "27"], "+", 
           FractionBox["x2", "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x3"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x4"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x5"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x7"}], "27"], "+", 
           FractionBox[
            RowBox[{"8", " ", "x8"}], "27"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x5"}], "9"], "+", 
           FractionBox["x6", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x3", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x3"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x4"}], "9"], "+", 
           FractionBox["x7", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x3", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x7", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "3"]}], ",", 
          RowBox[{
           FractionBox["x1", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x2"}], "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x2"}], "9"], "+", 
           FractionBox["x5", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x1", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x2"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x5"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x6"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x5", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x2"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x3"}], "9"], "+", 
           FractionBox["x4", "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x1"}], "27"], "+", 
           FractionBox[
            RowBox[{"8", " ", "x2"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x3"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x5"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x6"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "27"], "+", 
           FractionBox["x8", "27"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x2"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x3"}], "27"], "+", 
           FractionBox["x4", "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x5"}], "27"], "+", 
           FractionBox[
            RowBox[{"8", " ", "x6"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x7"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "27"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x5"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x6"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "9"], "+", 
           FractionBox["x8", "9"]}], ",", 
          RowBox[{
           FractionBox["x1", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x2"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x3"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x1"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x2"}], "27"], "+", 
           FractionBox[
            RowBox[{"8", " ", "x3"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x4"}], "27"], "+", 
           FractionBox["x5", "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x7"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "27"]}], ",", 
          RowBox[{
           FractionBox["x1", "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x2"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x3"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "27"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x5"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x6"}], "27"], "+", 
           FractionBox[
            RowBox[{"8", " ", "x7"}], "27"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x8"}], "27"]}], ",", 
          RowBox[{
           FractionBox["x5", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x7"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x3"}], "3"], "+", 
           FractionBox["x4", "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x3"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x4"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "9"], "+", 
           FractionBox["x8", "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x3"}], "9"], "+", 
           FractionBox["x4", "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x7"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x8"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x7"}], "3"], "+", 
           FractionBox["x8", "3"]}], ",", "x2", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x2"}], "3"], "+", 
           FractionBox["x6", "3"]}], ",", 
          RowBox[{
           FractionBox["x2", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "3"]}], ",", "x6", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x2"}], "3"], "+", 
           FractionBox["x3", "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "x2"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x3"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "9"], "+", 
           FractionBox["x7", "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x2"}], "9"], "+", 
           FractionBox["x3", "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x6"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "9"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x6"}], "3"], "+", 
           FractionBox["x7", "3"]}], ",", 
          RowBox[{
           FractionBox["x2", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x3"}], "3"]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x2"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x3"}], "9"], "+", 
           FractionBox["x6", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x2", "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x3"}], "9"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x6"}], "9"], "+", 
           FractionBox[
            RowBox[{"4", " ", "x7"}], "9"]}], ",", 
          RowBox[{
           FractionBox["x6", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "3"]}], ",", "x3", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "x3"}], "3"], "+", 
           FractionBox["x7", "3"]}], ",", 
          RowBox[{
           FractionBox["x3", "3"], "+", 
           FractionBox[
            RowBox[{"2", " ", "x7"}], "3"]}], ",", "x7"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ele", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1", ",", "17", ",", "21", ",", "5", ",", "2", ",", "18", ",", 
            "22", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "17", ",", "33", ",", "37", ",", "21", ",", "18", ",", "34", ",", 
            "38", ",", "22"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "33", ",", "49", ",", "53", ",", "37", ",", "34", ",", "50", ",", 
            "54", ",", "38"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "5", ",", "21", ",", "25", ",", "9", ",", "6", ",", "22", ",", 
            "26", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "21", ",", "37", ",", "41", ",", "25", ",", "22", ",", "38", ",", 
            "42", ",", "26"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "37", ",", "53", ",", "57", ",", "41", ",", "38", ",", "54", ",", 
            "58", ",", "42"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "9", ",", "25", ",", "29", ",", "13", ",", "10", ",", "26", ",", 
            "30", ",", "14"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "25", ",", "41", ",", "45", ",", "29", ",", "26", ",", "42", ",", 
            "46", ",", "30"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "41", ",", "57", ",", "61", ",", "45", ",", "42", ",", "58", ",", 
            "62", ",", "46"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "18", ",", "22", ",", "6", ",", "3", ",", "19", ",", 
            "23", ",", "7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "18", ",", "34", ",", "38", ",", "22", ",", "19", ",", "35", ",", 
            "39", ",", "23"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "34", ",", "50", ",", "54", ",", "38", ",", "35", ",", "51", ",", 
            "55", ",", "39"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "6", ",", "22", ",", "26", ",", "10", ",", "7", ",", "23", ",", 
            "27", ",", "11"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "22", ",", "38", ",", "42", ",", "26", ",", "23", ",", "39", ",", 
            "43", ",", "27"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "38", ",", "54", ",", "58", ",", "42", ",", "39", ",", "55", ",", 
            "59", ",", "43"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "10", ",", "26", ",", "30", ",", "14", ",", "11", ",", "27", ",", 
            "31", ",", "15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "26", ",", "42", ",", "46", ",", "30", ",", "27", ",", "43", ",", 
            "47", ",", "31"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "42", ",", "58", ",", "62", ",", "46", ",", "43", ",", "59", ",", 
            "63", ",", "47"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "3", ",", "19", ",", "23", ",", "7", ",", "4", ",", "20", ",", 
            "24", ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "19", ",", "35", ",", "39", ",", "23", ",", "20", ",", "36", ",", 
            "40", ",", "24"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "35", ",", "51", ",", "55", ",", "39", ",", "36", ",", "52", ",", 
            "56", ",", "40"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "7", ",", "23", ",", "27", ",", "11", ",", "8", ",", "24", ",", 
            "28", ",", "12"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "23", ",", "39", ",", "43", ",", "27", ",", "24", ",", "40", ",", 
            "44", ",", "28"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "39", ",", "55", ",", "59", ",", "43", ",", "40", ",", "56", ",", 
            "60", ",", "44"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "11", ",", "27", ",", "31", ",", "15", ",", "12", ",", "28", ",", 
            "32", ",", "16"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "27", ",", "43", ",", "47", ",", "31", ",", "28", ",", "44", ",", 
            "48", ",", "32"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "43", ",", "59", ",", "63", ",", "47", ",", "44", ",", "60", ",", 
            "64", ",", "48"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"cdNew", ",", "ele"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H3c", ",", "H3e"}], "}"}], "=", 
      RowBox[{"CuboidMesh", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H3c", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"H3c", " ", 
         RowBox[{"2", "/", "3"}]}], "-", 
        RowBox[{"1", "\[IndentingNewLine]", 
         RowBox[{"H1shapeN", "[", 
          RowBox[{"\[Xi]_", ",", "\[Eta]_", ",", "\[Zeta]_"}], "]"}]}]}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Zeta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Eta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Xi]"}], ")"}]}], ")"}], "/", 
          "8"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Zeta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Eta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Xi]"}], ")"}]}], ")"}], "/", 
          "8"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Zeta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Eta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Xi]"}], ")"}]}], ")"}], "/", 
          "8"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Zeta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Eta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Xi]"}], ")"}]}], ")"}], "/", 
          "8"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Zeta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Eta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Xi]"}], ")"}]}], ")"}], "/", 
          "8"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Zeta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Eta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Xi]"}], ")"}]}], ")"}], "/", 
          "8"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Zeta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Eta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Xi]"}], ")"}]}], ")"}], "/", 
          "8"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Zeta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "\[Eta]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "\[Xi]"}], ")"}]}], ")"}], "/", 
          "8"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", 
       ",", "x8"}], "]"}], ";", 
     RowBox[{"xy8", "=", 
      RowBox[{"{", 
       RowBox[{
       "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7",
         ",", "x8"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xy64", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"xy8", ".", 
         RowBox[{"H1shapeN", "@@", 
          RowBox[{"H3c", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "64"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Use", " ", "xy64", " ", "and", " ", "H3e", " ", "to", " ", "create", 
      " ", "the", " ", "function"}], "*)"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RefineH1To27H1inc", "[", 
     RowBox[{"cd8_", ",", "inc_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cdNew", ",", "ele"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cdNew", ",", "ele"}], "}"}], "=", 
        RowBox[{"RefineH1To27H1", "[", "cd8", "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"cdNew", ",", 
         RowBox[{"ele", "+", "inc"}]}], "}"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.8996009143794727`*^9, {3.899602692269206*^9, 3.899602819028246*^9}, {
   3.8996030229898853`*^9, 3.8996030251305313`*^9}, {3.8996066588132715`*^9, 
   3.899606754839801*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"74e5efe5-b13c-40aa-8b1e-e6c7afba5bbd"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
KCsr+/z5M9f1IsQXdkDY2touWbKERsNff/318eNHrqtD/5CWgNi5cyczXHKX
Ll3mzp0bFxfHdVEiBMEXGxu7nvDz82vXrh07FExNTaFrmEtERETI5zV6JO3Y
AUGjoT6xYMGCqqoqrqtD/5DGgIAdJuw/q6uruS5KhKAd8PLyotuLqqpqvXr1
2AHRv3//69evvydgU8KuAUkjaI23bt06YsSIhg0bslfvHj16LF26FPoIrgtE
UhAQycnJmzdvhtrU1dWhd/D395ftpx4+fPgQExMDB1HQdLO3GgMDg7Fjxy4m
wsLCsrKyuK4UISE4duxYmzZtFBQUfvkWrOcfv/r06RPXZcopyQ+I8PDw5s2b
0wrnzJlTXl7OdUUiAZsA3RZKS0u9vb15NhbYfCAv8I0ZSPY8fvx4x44dI0eO
1NLS4ukj/AnoJqBf5rpMOYUBISHi4+Oha4DNwdfXt3PnzuwtpVGjRm5ubqGh
oenp6VyXiZBIwGbeunVrTUJVVZW9/kNwrFu3rpiAwye8T0+cJDkgYE0oKyvb
vXt3s2bNlJWVGzRoAPtPWQqIqqoqWOHpmv/777/zdNmwmdDtpVOnTmfOnOG6
WIREKCUlZe/evZuJYcOGsS+6qaio2NvbzyKWLVuGb6oXJ0kOiPv3769atcrR
0RF2kt27d4e/X7lyRZaOH6BxXrRoEV3zYQLZ6aCurj569Gi6vRw8eDA1NZXr
YhESk5CQEGNj4yYE+872X8j9ezt37swh8vPz8WYnUZPMgKisrISlD0cU0HXW
r19fX1/f19dXNl5JWlFRARNC1/D169czt2ZR0CXR7cLS0jIsLIzrYhHiwIMH
D/bt27dnzx7IggEDBrA3EDhWhP3VZAKOGB8/fsx1sTJOMgMCyli+fHm/fv10
dHS6du0aHBx87do12Xgm7t69e0uWLKFreM+ePSH+2Os/NNd7iPDwcFz5kZz7
8OFDUFBQC8LExAQOn9gbi42NTURERFZWFhx0cV2pzJK0gIBlnZmZGRoayjwa
Nm7cuIyMDG6rEory8vLXr1/DQRG0RTzX4KBxplvBH3/8wXWZCEmKT58+wQHV
YWLr1q29e/dmbzh6enqw71q5ciWegBUdSQuIJ0+e/P777/b29rq6ujIWEDBv
AwICoGtgXjZIQRMNDTXdCh4+fMh1mQhJotzcXNh84OCKZ/Pp1q0b9BEPiJcv
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
5crXr1/Lw7t0xBAQW7duZeawtrZ2ixYttm/fLvRvqa3Vq1ezX/YIsaWrq0vX
B3t7+/Pnz3NdIEKIM2lpacePHz9IjB49GvYPzL5CRUWlc+fOM2fOlIc36og5
IFxcXCIiIiThiWmegFBXV580aRJdH6BrgGaT6wIRQhJhz5497dq109fX5znP
EBgY+IhIT0+X1W5CpAHx7t27Z8+eLV68WFNTs2HDhhYWFlu2bBHi5/OvqKgo
NTX1EYuPjw9zVADLumvXrocOHeKkNoSQJHv69OmpU6dGjRrFDoj69evb2Ng4
E7AzuXPnDtdlioRIA+Ly5cuTJ0+2trZWVlYeNmzY0aNHU1JShPj5/Lt27ZqH
h4czC/POLiUlpQkTJkRFReFQ0Qihn9mxY0cnokOHDjxjCrdp02bTpk23CUiT
srIyrosVGpEGRGhoKPOGinnz5nHytiLoYh4+fLhq1SojIyP2MjUwMKCLu1u3
bjgWIUKoZqmpqdFEZGQkM7IwpampCd2EI7FgwQLICK6LFRqZD4gbN25Mnz7d
yspKTU2NvUxdXV3Pnz8Pizs2NhbHH0QI8am4uHj9+vW9ic6dO/Ncm7C1td25
c+dfREpKirS/qUPoAZGfn5+UlETnj7+/v56enqGhoZ2d3bZt28TwrDo0dzAJ
f7EEBQUxb8xo0qQJ9At0yW7fvl1iXx6LEJJYsB+DbuIaERERYW9vzw4IHR0d
a2vrHsTy5ctzcnK4rrdOhB4Q169fnzRpEp0/5ubmKioqzs7OFy5ceP78+adP
n4RScw3S09MhlXqwWFpaqqur0wl0cnI6deoUXbLQNeB79hBCdfH69euVK1c6
EXDwyTP6MOxaQ0NDk5OTpXcsAKEHxPnz5zt06EA/0MjICD48JCSkpKREKNXW
oLy8/N69e9CndO3alb2MGjVqBDFBlyA0hviuDISQsFRUVMCh711i7969NjY2
7J0P5EXbtm1XrFhRWFjIdaUCEmlADBkyJDo6+tWrV2I4mZOZmblgwQILCwue
B+R79ux55MgRugRfvHghn69kRAiJWkpKypIlS2CHw/PktYODA2TH/fv3P36U
kJdO1YIQA+LNmzd//vnnwoULmRGaJk6cCPttIVbLA3IHuoZjBPQp0Cnw9A59
+vQJDAzEa9AIIVF7//49HAzv2bOHZ9hrbW3tli1bwo5IGi9YCzEgEhMTR48e
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
IYQQQgghhBBCSEr8fzHG4Nw=
      "], {{0, 347.25}, {392.25, 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{96., 96.},
      SmoothingQuality->"High"],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{358.5, Automatic},
    ImageSizeRaw->{392.25, 347.25},
    PlotRange->{{0, 392.25}, {0, 347.25}}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Add", " ", "8", " ", "nodes", " ", "and", " ", "5", " ", 
       RowBox[{"elements", ".", " ", "x9"}]}], "-", 
      RowBox[{"x16", ".", " ", "x9"}]}], "=", 
     RowBox[{"x1", "+", 
      RowBox[{"y15", "/", "3"}]}]}], ";", 
    RowBox[{"x10", "=", 
     RowBox[{"x5", "-", 
      RowBox[{"y15", "/", "3"}]}]}], ";", 
    RowBox[{"x11", "=", 
     RowBox[{"x10", "+", 
      RowBox[{"y56", "/", "2"}]}]}], ";", 
    RowBox[{"x12", "=", 
     RowBox[{"x9", "+", 
      RowBox[{"y12", "/", "2"}]}]}], ";", 
    RowBox[{"x13", "=", 
     RowBox[{"x9", "+", 
      RowBox[{"y14", "/", "2"}]}]}], ";", 
    RowBox[{"x14", "=", 
     RowBox[{"x10", "+", 
      RowBox[{"y58", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"x15", "=", 
     RowBox[{"x11", "+", 
      RowBox[{"y58", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"x16", "=", 
     RowBox[{"x12", "+", 
      RowBox[{"y14", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "3", ",", "4", ",", "9", ",", "12", ",", "16", ",",
         "13"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "11", ",", "12", ",", "16", ",", "15", ",", "6", ",", "2", ",", "3", 
        ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "10", ",", "11", ",", "15", ",", "14", ",", "5", ",", "6", ",", "7", 
        ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "13", ",", "14", ",", "15", ",", "16", ",", "4", ",", "8", ",", "7", 
        ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", 
        ",", "16"}], "}"}]}], "}"}], ";"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}]], "Text",
 CellChangeTimes->{{3.899592814797576*^9, 3.8995928164079814`*^9}, {
   3.899592868472458*^9, 3.8995929097263727`*^9}, {3.8995929696833315`*^9, 
   3.899593144431472*^9}, {3.8995931991275883`*^9, 3.8995931994557343`*^9}, {
   3.899593244391286*^9, 3.899593342026579*^9}, {3.8995933756194177`*^9, 
   3.899593454735161*^9}, {3.899596693592799*^9, 3.899596694202696*^9}, {
   3.899596816051918*^9, 3.8995968171926994`*^9}, {3.8995972389832983`*^9, 
   3.8995972401552286`*^9}, {3.899597568625347*^9, 3.899597571428118*^9}, {
   3.8995976014394464`*^9, 3.899597852226713*^9}, {3.8995979571766634`*^9, 
   3.899598080050908*^9}, 3.8995981144037704`*^9, {3.89960006990967*^9, 
   3.899600080829941*^9}},ExpressionUUID->"a6cce61d-3dec-4e9b-ab9a-\
eff72dbba184"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "RefineH1To5H1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RefineH1To5H1", "[", "cd8_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", 
      ",", "x8", ",", "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", 
      ",", "x14", ",", "x15", ",", "x16", ",", "y15", ",", "y12", ",", "y14", 
      ",", "y56", ",", "y58", ",", "y67", ",", "y23", ",", "ele"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7",
         ",", "x8"}], "}"}], "=", "cd8"}], ";", "\[IndentingNewLine]", 
     RowBox[{"y15", "=", 
      RowBox[{"x5", "-", "x1"}]}], ";", 
     RowBox[{"y56", "=", 
      RowBox[{"x6", "-", "x5"}]}], ";", 
     RowBox[{"y12", "=", 
      RowBox[{"x2", "-", "x1"}]}], ";", 
     RowBox[{"y14", "=", 
      RowBox[{"x4", "-", "x1"}]}], ";", 
     RowBox[{"y58", "=", 
      RowBox[{"x8", "-", "x5"}]}], ";", 
     RowBox[{"y67", "=", 
      RowBox[{"x7", "-", "x6"}]}], ";", 
     RowBox[{"y23", "=", 
      RowBox[{"x3", "-", "x2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x9", "=", 
      RowBox[{"x1", "+", 
       RowBox[{"y15", "/", "3"}]}]}], ";", 
     RowBox[{"x10", "=", 
      RowBox[{"x5", "-", 
       RowBox[{"y15", "/", "3"}]}]}], ";", 
     RowBox[{"x11", "=", 
      RowBox[{"x10", "+", 
       RowBox[{"y56", "/", "2"}]}]}], ";", 
     RowBox[{"x12", "=", 
      RowBox[{"x9", "+", 
       RowBox[{"y12", "/", "2"}]}]}], ";", 
     RowBox[{"x13", "=", 
      RowBox[{"x9", "+", 
       RowBox[{"y14", "/", "2"}]}]}], ";", 
     RowBox[{"x14", "=", 
      RowBox[{"x10", "+", 
       RowBox[{"y58", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x15", "=", 
      RowBox[{"x11", "+", 
       RowBox[{"y67", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x16", "=", 
      RowBox[{"x12", "+", 
       RowBox[{"y23", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ele", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "9", ",", "12", ",", "16", 
          ",", "13"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "11", ",", "12", ",", "16", ",", "15", ",", "6", ",", "2", ",", "3", 
          ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "10", ",", "11", ",", "15", ",", "14", ",", "5", ",", "6", ",", "7", 
          ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "13", ",", "14", ",", "15", ",", "16", ",", "4", ",", "8", ",", "7", 
          ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
          "15", ",", "16"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", 
         "x7", ",", "x8", ",", "x9", ",", "x10", ",", "x11", ",", "x12", ",", 
         "x13", ",", "x14", ",", "x15", ",", "x16"}], "}"}], ",", "ele"}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RefineH1To5H1inc", "[", 
   RowBox[{"cd8_", ",", "inc_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cdNew", ",", "ele"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cdNew", ",", "ele"}], "}"}], "=", 
      RowBox[{"RefineH1To5H1", "[", "cd8", "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{"cdNew", ",", 
       RowBox[{"ele", "+", "inc"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8996000021003923`*^9, 3.8996002860019426`*^9}, {
  3.8996003513812895`*^9, 3.8996003601787777`*^9}, {3.899606777219752*^9, 
  3.8996067887136607`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"36fe5a61-2e8b-438f-9ef7-1d2a7fca626a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
LcIqYT3by+iOOvpqq3V/13QSa9X+U5H5BMIPn6wCeUie2GvWu/dU2av8ziuv
qTyMtdqq3uJudppZUPcHsvhatZudprrrnMVUgQwIq4R18J6646hfO5I46oMw
hJ98t/72F9Twu756Pn1MNc/s9RmJDHc6UFmrAlEkSWa1r4/2UuyoD70+r0n9
bWHusbQ+PX9Qi6xVrU/zF1MFeiKsEtaZ99TVV/bxi+njWrXzRuvkZQ9a1qd3
zm3W2bM+HaisVYHWTPn2H70abTXPN/rlBfz6v/y3P/018P6OureFOcbV+vT+
AU62VrU+HbeYKtACYZWwLr2nTr6jy15MX7/nl6DGOurN20lSndenQ5/V+fMc
ffasTycoa1WgFtO/uUasAns583a+3+hsjrq3hbHGuP/6NPyWux3soGtV69P5
iqkCdxjx5T59lb2njl/KdbvcWQOuCkN4B8+cXk87zX8m7c55lNljpxOXtSpQ
xpbhZDVD3bGXg9dxu7ZmNtWcw2x92v/Ak69Vu61Pw3uhmCpwiefoTvtyn75u
vqdevoX7dNNa9fwp9bTTPPeeoXKuVa1PFyymCpznwG0kW8/Iuv8mem5iyI2E
q2nCYbY+TVJ51qrWp8vWNhXRL39gAI7jOvzlPn3Vek/t+xjbNWvV59Poaace
2PN9iZo969Nla2s9RwXOcCaoM2yi5qu69vK1+9Xi8Fvb32C4mkYNc2c7/WFp
Vtqj/mtVk7BgPbSeowJnuJTPTLVFWFVcmyTszppr1f52mrD1A1W3EW09GCYh
Yb0MfI4KnKEgmdPq0BDV6CWVvx2ZTbXi6VmfjlsdvqeazoZJSFjvOs5RgTPc
CWSmejWsWryhxurC3GtV69M5qt2ItvtENQnZ6jjwix316/fU9QEgG/ej2Fr1
ZF55MT0cSFpTLThV69P5qsX3VKMcCD8r9VAfG12ml8+9ZqqYm4oJPLQyNQ0r
L6bjw0krq+fvorOdztH9UariiNYdFZOQsE4G/lWxPO61tSpmpboeWKs+RAdF
OXlQaU3146uBna5QVb6nKk6LSUhY5/t73ievfi8zVcxEOzFY/H1qfVp8aGll
9flqu9np9K0fqO6MaJWZWTxac9bVwD9pkmWNtlbFNLT2gTXXqtan9w8wralu
9LTTdVo/SpWN6P2xMQkJq6CtHwWyylPPVDE63Uxgkfes9Wn1w8wmq9anqngy
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
REw1OZnfdK1foxUTL+T6xw1Y69OKx5hhGg9G9OUGQ68XrK31GRx1jiAdpSo+
9eeV8nxnrVUzk/YF1+EF2ij0Ot/FcBlrfdriSJMM5MGUdmv93L0etPatT+Wo
4wbpKFX3qT9pkmWtZKoJyfxqa/3ebBp6/W8nf8Ban3Y43myTWeuJ0+tB6/mp
T+ioYwXpKNUi8D865P0OWqumIu0bLfkbM+e5Zd4GWJ/2POqE89l6ANbsdfJ6
2fTMjpo/SEepRs/7sTrWbRlTzUDCd9kQb8zk55YqYK1PA489z6C2mwG9TlgH
T31+R80ZpKNU08B/J43tOmWtGkueV9hYb8whzi3DNsD6NLySmGq7vUr4CauH
Ou71HUct85+b858hSEepDn9c8lJj+twaU+1PhpfXiG/Msc4tJGCtT1NV+Fq1
+jDodcI689QXO+rW7m2YO8e1kbvZ+ipP/YPAdO6ItWpnxnKtPG/MEc+t5zbA
+jRtRZlqxZGgCjnrZIvLHPVlx096Ud2Bt1Ytbn2VZ39vL7G3zFQ7MKJrZXhj
Dn1uTQPW+nSI6r9WrTUVGp2wmm41P3b841q10ZyLnautr/L4/xaxPj2+fbLa
jqFdK/CNOcG5tdgGsNPhqpup3p8Nvc5ZVzt7ft6udvydLzWd8JXXqgJ/fxRM
tQUTuFbIG3Omc6vy1EetT8OjaY7qsFa9/8Rpd7Yqe+rPjNmddj+vVbt9ha0z
olGBn/yErVVbMJNu9Xxjht9C9QMpSwBhNVO1M9UqT5y+56nihn4csFot3qKp
Z1yvsFYV+GeOiKnWYj7d6vbGnLIupUH/sPphfdorYOsOecUnbgUNyFw3P0sP
5qpFW1sMc/UgHaWiNhLhN37nuMjqTSbWreMAqfXGnLI+aoD16QpV9+VeXWzM
Q8g83H+K341Hh4vPFqSjlMC/f3rRrjcq0+vWu+hoEbPz1cuUsD5dqmptopou
34xHhzGo9SCfCZl2d2GtGtX6xQPfWrWMdXTrITHqxuzc9fV7+ofVfHk1Yt18
uTdy1IcpDT+l+aruU//QyqiWWav2b73A359qtPoNw2q6tWVFxZhdp0LyKjxS
1L6KX+6tHXX7KdO/4zq3u/oTve9U+N1Zq3ZrvcB/OF6yeoY1dYujhpzb1UNe
J69GqTvv9D6Ouv9x5ud+r1s81z/j1qfHN9s/TnNOqfVp/9OONsG8rKlbHDXk
3C6dcHh0qIfauj+Eo24/dNl3X5VeL6Ui1qpNWy/wj4+drL5kTd3iqCHnNvor
bNl62KsM5Kj7n26uCnq9poqsuVa1Ps1QTPWBNXWLo4ac2zSvsKXquekjOup2
Dd6Jl3q9soostVa1Pk1V1qoba+oWRw05t8leYdPXu73KuI66vxjzdqbXVOSP
s69VrU8zF1OlWxnemKNUiygTVjnroNcTOOp2ScbvuNee7v0pzbdWtT4dolZe
q9KtPG/M/FU90IRVwvq4V5nGUffXtuYottuhTXykc6xVrU9HrAVNlW4lfGOm
rYqZJqxy1pkW93fUPg/damvVpuvT8LvrcHrjrlXZ6dC11FqVbpU9a+HXP9ah
LfgKG67O71VmddT9pc49otan1Q+zfxSXHXXU+jS8TVPWCqZKt64+a/+PPapX
2HR1qbPTO+p2wfONa1NFmeysCg4281o1yk5Xnoo+NfdalW5detx+CSpH9Qqb
qQreXIs46v7K5xjdpnY6xxFVOeSE31P97VTg968pTZVunX/cvgWVo958kQmu
JFW8V1nNUbfrH3d6rU9DDjzDWtX6dLWabK0anvyBb5xLT9wmqBz1vmYM/bqf
o+60ck1H3d/IWKNrfRp7+IFrVevTlWsOU82T/P2f4vNP3F5QOWpFzfCOiwqu
+6+h8OEJfxbyT6/1aZIKWatan6o/jm+q2ZI/4fPLUQsO7ZJmDPG6n6NqvbY4
6sP0hne2Xa+pSN2mdJvkzo5qJBLW9wxw1BHr5PP7LKgctZ1mePc1DauK7yyO
+nJ0k0yv9Wny6rNW7eaoeSZfbbUPAY46Yp15fl8K6sqa2kczUr3u56jqbyuO
ejy9M/WaijRtVrvB7uOoRiJhPbSeo45YH5/fA0HlqH00wzuxSli1eFVx1DOj
23l6rU8HrUZr1daOKp8T1ssQ4Kgj1vHzeyyoHLWnZlir3smrdq+nIYYnvLqN
rvXpBFXXVJs6qpFIWO86zlFHrIPn96OgctQQzfCuvBRWrd9QYw1P+IPTbnrb
9doTF1IV16qN/gzFVGSr4xDgqCMWR617aN00w1r1TF61MJabrcwwPOFVfXT9
4f7Edd9U646H4M1ZH7vMUUesg634R0HlqBk0Q2C+DKsOglrWylTDE/4c3Z9e
69NF6s5ateKEGImEdTIEOOqI9bKzJwWVo+bRDGvVfV61MJZarUw4POFVNrpN
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
1qonn9N3N5vzjZnn3Aaqq3vUH7df/Ybn4GSe7TSzo273lVBW+9tpthOIOvae
snpp9vp/s7QYsz4+2YKKU3HGTrcfGm6kHez05fkMvVY9udI5uMI+EZStRo+4
l13u/MY3PC/P5EBQkzvq/gYzeFpnFUly19kq21p1juhe3FG3T5LzPzFcSvdq
2jnGtx864lr1zErn+Np6HnWemiPoHhrd+Y1veJ4P5MBOB3LU7TYDta3/+jTc
BjNXhrXqBOvT/bw11cim3BmDS2q6/4lJ7DRDJo+1Vj1+Zj/eTviZB/Y6PKaq
h17nN77h2R/FGUEdy1H399tT4axPM1fUWnWyxF7QUcvs9LcEgprBTp9PcpS1
KkdtcW4j1rv3bLs3vuHZzuGMnY7rqNtdd9A569Mhqv9aNTxgqw9edXXsyfnW
b6Ny52ex04Ozzb9Wfff8nhHUzOffurnhMVU99Dq/8Q3P+fXpBI66v/0Wamd9
OmL1eYlMGdcVjbE/Z5p+U023HxSlpqNkdf616svn94yg/v9/+KejdKFFW8Nj
qnrodX7jLz48V+10GkfdDqGi5lmfDl2t3+lTxnUVV4ziuNdV7PS3CEEdSE3f
HXvCterz83tSUDnqTLV/7fa5u1mH5+scBYI6mabuj+um3vR8TAhqu2r0ip8y
ru8rXCDvulzLTrefwk7LArmdrBZ8kH49/XbcmZ/CUcNjqnrodX7jn/mUHpFi
+VzTUR/afVVp+j8jqnVtwyCuD0axlsiF8NDcreN1fwQ7vZ/JGdaq++f3zCV9
/VlQOepM9T0wIT/0Jd1+emul5KhXn6wzKth5XAv8Wd2vWm//KeO6os71Z2tr
dTXd/4gOajp3Gv/MsVb92v0NjkuCylFnqvnu6OP9htsmRz14vt5pYf+PKXYa
W/dlYL5wm8BR29npb40FdQU1fZfJIWvV8476IKgcdaaa744O7nRcQV3EUfcP
2lf335R+GJVwSVPfVewG84XbBI7a9B/OTpsGcue16tef/5bxVUHlqDPVfHf0
7jbDJZOjFjxu1qfqj6WSMF+4je6oTWnhqOz0ZSb3Waue+VkvBZWjzlTz3dHz
DU4gqGs6aucnzvo0YW0fKRz1B0d9T11BfbnWU/snq89a9cx/kqM+tCY8pqqH
Xvg1NL27cLes6KgLxmaf+WSnOevr93+xN+fwdA60aBlMSi1HXTBjb+Zz07Vq
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
AAAAAAAAAMAv/icRLlhy
      "], {{0, 397.5}, {681., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{96., 96.},
      SmoothingQuality->"High"],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{418.5, Automatic},
    ImageSizeRaw->{681., 397.5},
    PlotRange->{{0, 681.}, {0, 397.5}}], "  ", 
   StyleBox[
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzsnQVYFtn3xw1EQVQEQWmwwVbEROx2LVDXDsw11sLu7sBAbERcuzEw0V0M
FEVBVBRBREJCQhBE/2fn/Jz/XUp4mfedeeF8Hp99lH1559z5zj3fe2bu3Gs2
ckqfMcWKFCkyvRT8p8+IWW2mTRsxp68m/MNu8vTxYyePtu8yecbosaOnNR1Z
HH74vmiRIhbw+X///oMgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIotLzZ
/dmwajT+6br7m9jhEARBEIWBb069onn3IQMiCIIgFMI3p91f8W//K4Icvoob
EEEQBFGo8HD4t/aZdl3sOAiCIIjCwPUEuu1GEARBKBrGfQyrfnZ6K3Y8BEEQ
RKECbahX8huxAyEIgiAKONcT/v9BD7kPQRAEoRj+c9uNHv0QBEEQiuHrNLIe
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giDkSEpKSmxsbDTDly9fxA6KIAiCKODcvXvXwcFhPIO7u7vYQREEQRAFlqSk
pLCwsLVr12praxfhiDasCv+dMWNGaGhofHy82AESBEEQBZB//vln+vTpzZo1
K1WqFOs+9evXt7e3v3TpktgBEgRBEAWKhISEoKCg9evXGxoaFmFA9wFKliw5
e/bsAI43b958/vxZ7JAJgiAIpef+/ftTp061srJSV1fP0n2KFStWt27dvhxj
x469ffu22CETBEEQSsaXL18CAwMfMWzcuLFKlSpoNNra2rVr127AAe6Df6lX
r56Ojg5+oFKlSsuWLcNffPHiBdVBBEEQRG54+/btokWLOjM0bNhQQ0MDzaVj
x46HDx925wD3wb+cOnWqZ8+e+IFSpUpBHYS/OHnyZG9vb7EbRBAEQUgaqHqg
Wtm/f3/z5s3ZO2xaWlpQ4LTgWLVqVXR0NH4e3Af/kpycvGXLFvyApaUlXwfV
qFFj/fr1dzieP3+ekJAgXuMIgiAIifL+/XuoeqDSAbth3QfMaN++fbc4AgIC
vn79ip/n3efbt2+BgYH4gaNHj7Zv3x5/ESqm2rVrt+KYOXPmy5cvxWscQRAE
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
1dHRQflatWp16tQpscMksgbcJzIyEuW7c+eOra0tyqeqqgrjdlRwyJAhjx8/
FjtSSfPs2bPffvutSCasrKzWrVsHZREkOrFjFAYpZCF5JMOHDx/CcAtXAmnS
pAn/djbIisuGuLm5Qa0k4BHz2grRLUAK0ufAhQsXhg0bBvINHDiQ30G1fPny
o0ePRgUlvoZVIQTcB5wF1WGXV2Jp3bo15E+xI5U02bmPmppapUqVYFSWp4do
Ukb0FCSnAGB4ACVqMMfKlSs1NTVRwbJlyxpxwDBs7969gh83l80R/bQjojtg
Dnz+/DkkJATkg2oIHAflg2pIS0sLFezcubOU1+8thID7rF69GtVhl5Yl98kT
rPvAaezVqxdc6nDZ40+aNWsGJxlKywKwQq/SvcgvA7dv34YBw1gOfpkXDQ2N
LVu2yONwObdLgglfgiGxpKamHj9+HOUbPHgw/3437l1y+vRpWvBfCuC2Gp06
dcrsOOQ+DP+/lFB2y/yy7tOyZctLly4dPnzYwsICf6KqqgpjaQcHBylsTppP
xEo7ijxucnJydHT0J445c+bI232QLFO6lJO8ZGODEXViYiLK5+vr279/f74O
KlOmTJcuXe7evSt2jMS/WwrC+Jx/ZZjcJyveZnqtKQsDYt2nTZs2//zzz/Pn
z9etW9etWzd+r5kWLVosX74c96KFD4jQFCFQfM4Rd6R99erVqVOnQgUEQ4ie
PXuuZzhw4MDr16+FPRzfWInXF4j0g4yNjXVzcxs+fHi1atWwG5qamo4fPx4V
PHPmzC/nUxGCA1XP5s2b+e3UETU1tQ4dOowaNapGjRrkPj95mzzt5/uz/9vl
JIs9tjK7z7dv31JSUlxcXPjXqWDoVfInYEOKbodAKHiur+jJLS0tLSkpacaM
GUW4qbwlGRo2bHj+/Hl5HFT0VucJKUcLdVBqaurTp0979eqF3bBo0aIlSpRA
Bfv16/fixQuxYyx0bNmyRVNTk5+giOjo6Gzfvh3kAFHIfbICb8Hlyn3w51D4
b9q0aQFHp06d+JlU8JklHGvXrn348KGi25EPFLl2mWIO9EvS09OhAkIRoQ6q
X78+iqirqztw4MA9e/a8eSPYlp/KVfvwSDzaqKioI0eOoILDhg0zNjZGBc3N
zSdOnIg9EQYSBWZiqqQAQ9mxY8cSBqh6YCDHZ0LUZfXq1ZAJ3759+/vvv5P7
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
2bOb+KXR5gbW6s+ePYMuTUtLmzt3LulMaWlpTU1NmDNhGAwbNgwW8415yBcV
jiYkvAp0vZpn8Ofn59+4ceM0g4eHB/3OMHTsqFGjxlHOnDnDdmNR8yL66fOJ
H0UQf9OnvLwclt/knHV0dOS417mlpSX0YXR0dMNbSSAOly5dcnNzI73aqVMn
0pmqqqpz5swh02ZYWNjbt2+5fjwSPaMqnn/69Py3YhhCjr/VCLD5YuPKlSuw
XoIFEl0BET/99FNycjJWlEhompg+VYv+zoXiAy8E10JaUzKIX+lTV1eXlZV1
+/btiRMnkgeUlZXV19fvwjBr1qwHDx7w/BTNEKzPHz16tHjxYnrjO21tbdKZ
AwcO/P3333l61Osl/0scRhI1e5mZmZGRkQsXLlRXV2ee+GZmZlAH/fHHH2w3
EDUXvKYP8z0NIaUPwVsG8St9amtrDx8+bG9vb2hoSB5QS0tr6dKlFxliY2Mb
3vEbcYCixtXV1dzcnP6q6ZQpU0hnhoeHv37N265AzMRhJhH6G/Sts7Nzbwos
n0i3y8jIuLu736YkJCRgHYQEqknp4/hb1YFRQk4forEB1MT0geUiZAqckjEx
MZMnT6ZPVWNj4zFjxsAM2dgHRFDv3L9/n0x0Xl5e9Hdy27dvD/PhkSNH+PEk
VOg07899vgRK+Fu3bkVSZs+eTXK/ZcuWMKQHUsaNG3flyhW2m4kkWRPfeath
KX0+NbIIamL6nD592s7ODk7JAQMG0AtFeKglS5ZAKr17966xD4iio6OnTZtG
JjozMzP6/h1ubm4wH/JlI0HytvD//mDt8wUnT56E4U1vCUW0bdsWivpwyt27
d/Py8thuJpI04ps+BJcZxEP6wOIQZkhy9s2dO5d5eyNpaWmYMGFxGBoqClum
iY3CwsKEhATSpevWraNznID/HDRoEN+214jw+ntsLLpO/oskUUmjrphrNqC0
j4uLmzFjBvNwwICHPOpBmTJlCn63F/GduKcP8dUM4iF9Ll++PHz4cHL26enp
MfcjUlBQWLRo0f3793HHkkZ58OAB5DjpUhMTE3l5eebAmzhxYlRUVEZGBl+e
i2NkishAFWXHjx8fyQDVkK6uLjk0RkZGa9asOUeBGMKLORFfSEb6EA1kEJfp
8+7duxs3bpCzzMPDg3kLgBbURUHkxJwwYcLFixcF9jokSklJCayrSZdu3brV
0tKSdKa2tjZUOszp7tChQ5WVlXx74v9cZY3XvH1dTk7OI4aIiAhYfZGDBesE
qEwtKXPmzBGFr6IjCSBJ6UN8NoC4TJ+YmJhx48aRs6x9+/YcNxOHdTs5MVNT
U/Pz8wX5IiTHy5cvPT09SZd26NBBUVGRdObgwYPPnz/PnO6ysrL4vecYXnXA
OxjhcKaQbwYxzwIrK6tNmzZFR0cXFRWx3UYk3iQvfT59rgj6avrAwg8We8uW
LeP47NXY2NjFxcWVEhISIqxXIAnKysru3Lnj5+fXs2dP0plQSw4ZMoR05vbt
29+8ecN2G9EXVVdX5+bmwklhb2/PPCOgDtLR0YGV2LNnz9huIxJvEpk+BDOD
vpo+8fHx48eP19LSYt5+FMA8mZiY+IKC3+JplOzs7MWLF0MJSdc73bp1O3Hi
BOnMd+/e4a53og8KUjhfRo0axVEBffvttxs3bvyVEhMTU1FRwXZLkfgRi512
moJk0GfTp7CwEJZ25Azy8vIyNTUlP2NgYDB27NhZlKNHj+LG1Nyrqam5e/cu
6dJt27b17t2bdGmbNm3s7Oy2bt36119/sd1G1AhQARUVFYWHhw8aNIg5S8Ai
DY6pJgXWGLhDKeKBxKcPQe+TzEyfp0+f/vDDD+QMUldXpz/lcXR0hOVcDgWi
B2+Awj0oZ9atW0e6VENDg76qzdLSMjg4GIpHrHfEUUZGRkBAgAdl5MiRcHCZ
M4aNjc3mzZt3UvDCbMS9ZpI+pPaBAFJQUIC6hpwpK1as6NKlC/O16+vrT5w4
8dChQ9nZ2Ww3WZwkJCTs3r0butTPz49jkQyxDmnu4+ODF0o1DeMKCqF/bRZK
2oqKilLKuXPnunbtyjzErVq1UvzXhg0bhNs0JMaaVfrQbxqQMwWSSFpamvna
hwwZEh0dDSca1juNsmPHDjU1NdKrHDsnGxsbHz16tLy8vLq6mu1mii1y9bho
bNqQlpa2d+/elZThw4erqKgwD/fAgQM3UXx9ffH2f6hhzTB9aG3atBk9evRK
hsDAQLwQi0vJyclQ75Cpxt7enmwUBv8cPHgws0u3b9/+8OFDthsr3v7ZMujf
fRvYVccQFBTEcTUCDVJpz549bDcWibTmnD6mpqYhISF19bDdWPFw+PDhdu3a
cXQpFD4+Pj7YpXz1zwbdZEdfkdovCNYVEDFkBeLg4MB8J0FWVtbW1nbLli0J
CQlsNxOJqOaZPqqqqmPGjNm/f//jx4/Zbpr4gTkHKhpnZ2dlZWVmr0LVs3Xr
1jt37rDdQMlCNqz7zx9R3LRh165drVu35viCtpaWFpxl5AMjfPcVcZD49Pn4
8SOM/OXLl7egNk4kn02YmJgcO3aM7aaJk5qaGpg9yDRy9OhRY2NjuthRUFAg
vQoLYLabKYn+SZ9/9moQ5v0cG+XevXtQBw0bNow5mcCoGDp0KLlYztvb+9Gj
R2w3E4kQiU+fa9eu/fzzz99//720tPSIESPI1W7wqlNTU9lumjhJT0+HxS2Z
RhwdHenbYvbp04e+2jY2NpbtZkoikj7/Xmkgyt/vBn5+fpoMzKvuzc3NYclH
vshQWFgIy0K2G4tYJvHp4+PjQ67CkpWV9fX1Zbs54oR805BMF+fOnevRowcZ
IXJycvQ3DZcuXYo7HgsYudaavNv2zz2FReejHw6JiYm/MsAZZ2NjQ4ZN69at
7ezsyJe4IaSePxe9dw+RcGH6oC/JzMzct28fmS6cnJzocdKtWzcYJPQuK/zc
mBp9jvjeJg/WLUuWLGHutkT07t37jz/+IHsuwc9gHdQ8SWT6fPjwISMjg4zt
ZcuWSUtLq6urm5qaHjx4kO2mibqampq8vDzSdeHh4ba2tnS9o62tbUj56aef
cOEqZIwAEqfNusvLy2NjY3fs2NGrVy+OqxGgDppE2bNnDwQQ2y1FLJDI9Ll5
8+a8efPI2La2tm7ZsqWLi8vJkyfxCrevKi4uhiFBuo65u36nTp3Wrl0bTImO
joYfY7ulSGy8fv168eLFFhTmXTaIYcOGhYWFvX37Fiug5kYi0ycwMFBHR4f5
otavX9/Az4dGv2tx9J3NQ8bloEWlNkf//su///xZ+lTgTWZfbW1tdnY2JMvY
sWOZXScvL29gYDBt2rTExES224jEUmlpaXx8PLnDoLe3d+fOnZkDrH379kOH
DvX398c95Jub5p0+1bv+/Ddi/ps+Tx8W0H/fTAKosrLy0KFDDg4OkDXMrjM2
Nl63bl1MTAzeUA81XXJy8o8//tixY0clJSXmMBsxYkRoaGgcJSMjA7+h3BxI
WPrADAnDe/Xq1RoaGuTlaGtrf/fdd7/++uvnfpxKnz9LQ6ms+W/6lIaSf/un
CCoKFUr7hS8zM5Oc8lFRURMnTiSdJisra2Rk1IMydepUvJQa8UthYWFCQoKP
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
V6Wmpp46dWrEiBH100dNTQ3qoBUrVjx69IjtZjZTYpc+mpqa8O9Xr16V1Ovc
nj17BocA6h0NDQ3mcenfvz8s1c5QkpOTm+2GQgg1ysePH3fu3Pktg4WFhbq6
OjmtrKysDh48mEiBUw8/CRImEU+furq6zMzMmJgYV1dXqHr09PSg6gkNDWW7
XXxWVVX18uVLcgoEBwf37t2bHAsVFZWOHTuSU2b16tXZ2dlstxQhMVNbW/vk
yZNQBpj0+vbtS04xiKGePXs6UDZs2PDq1Su229uMiH76HD582NbW1sDAACrl
hQsX3rhxQ/L2c8vJydm2bRs5BWxsbNq2bUuORffu3ffs2UNOmQcPHuDCDKGm
y8jIWLNmjbW1NcfnQRBJQUFB0ZT09HRYE7LdUgknyunz+vVrGAaTJ0+m33OT
pG+11NTUPH/+nAz1M2fO2NnZkZeppKRkaWnZl7J48eK//vqL7ZYiJFFgFZea
mnro0KFevXoxpz4NDQ1Y7/Wj+Pj44FalgibK6QPrEBgG9EaCEpY+lZWVe/fu
JUMdan/6KJiamkIdFEV5+PDhhw8f2G4pQhLo2bNnq1evtmOAagjWfuQ0dHBw
OHXq1OPHj3GPOMER5fTZtGkTaZK0tHTHjh3Hjx8vMZ/4QF1/4cIFFxcX8gLl
5eWtrKzIKTBv3ryEhAS2G4iQhCsrK4PTMIHB19eXvgd927Ztu3TpAn+Db3cL
jlikD0zOixYtSkpKys3NZbtR/LF///5vv/2W7nktLa0NGzaQUyA1NbWoqIjt
BiLU7Jw7d87CwoI5GTo5OR0/fvwPCm6fyHeimT5Pnz49f/48vbMBlMM7d+5k
u1FNBZU+1DtkJI8dO5a8NBkZGaj3Z8+efePGDbYbiFCzVj99WrdubWZm1okS
EBDAdgMljWimz5EjR2BOpi/9koz0OXbsWPfu3clIpr/Lo6amtm7dOkhbrHcQ
YldCQsKyZcsmM8AJKy0tTU5VWDEepYSEhKSnp7PdWEkgaukDhxUOrpubG72X
JsTQzJkzw8LCWGwVz16+fHn27FkyaKdMmSIvL09eVNeuXcnwnjt37rVr19hu
JkLo70+CsrKyXjOsXbuWPmdhoahHgRnp+PHjbDdWEoha+gQHB8PBVVdXp+/Q
sXTp0oyMjOLiYhZbxbMLFy706dOHDFqo4ukXtWjRIjK837x5g1e1ISSaYGW4
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
qfY=
       "], {{0, 362.25}, {415.5, 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{96., 96.},
       SmoothingQuality->"High"],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{302.9999999999989, Automatic},
     ImageSizeRaw->{415.5, 362.25},
     PlotRange->{{0, 415.5}, {0, 362.25}}], "Text"], " ", "3", " ", 
   RowBox[{"times", ".", " ", "8"}], " ", "nodes"}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"4", " ", 
     RowBox[{"element", ".", "\[IndentingNewLine]", "x9"}]}], "=", 
    RowBox[{"x1", "+", 
     RowBox[{"y14", "/", "3"}]}]}], ";", 
   RowBox[{"x10", "=", 
    RowBox[{"x2", "+", 
     RowBox[{"y23", "/", "3"}]}]}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x11", "=", 
   RowBox[{"x3", "-", 
    RowBox[{"y23", "/", "3"}]}]}], ";", 
  RowBox[{"x12", "=", 
   RowBox[{"x4", "-", 
    RowBox[{"y14", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x13", "=", 
   RowBox[{"x9", "+", 
    RowBox[{"y15", "/", "2"}]}]}], ";", 
  RowBox[{"x16", "=", 
   RowBox[{"x12", "+", 
    RowBox[{"y48", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x14", "=", 
   RowBox[{"x10", "+", 
    RowBox[{"y26", "/", "2"}]}]}], ";", 
  RowBox[{"x15", "=", 
   RowBox[{"x11", "+", 
    RowBox[{"y37", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ele", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "2", ",", "10", ",", "9", ",", "1", ",", "6", ",", "14", ",", "13", ",",
        "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "10", ",", "11", ",", "12", ",", "9", ",", "14", ",", "15", ",", "16", 
       ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "11", ",", "3", ",", "4", ",", "12", ",", "15", ",", "7", ",", "8", ",",
        "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "13", ",", "14", ",", "15", ",", "16", ",", "5", ",", "6", ",", "7", 
       ",", "8"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "first", " ", "three", " ", "elements", " ", "should", " ", "be", " ", 
    "divided", " ", 
    RowBox[{"again", "."}]}], "*)"}]}]}], "Text",
 CellChangeTimes->{
  3.899600074965764*^9, {3.899600665312557*^9, 3.899600665312557*^9}, {
   3.8996252696822653`*^9, 
   3.8996252732557364`*^9}},ExpressionUUID->"4bebe122-6c47-44a2-962b-\
38769adbb5b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RefineH1To4H1", "[", 
    RowBox[{"cd8_", ",", 
     RowBox[{"inc_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", 
       ",", "x8", ",", "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", 
       ",", "x14", ",", "x15", ",", "x16", ",", "y14", ",", "y23", ",", "y15",
        ",", "y48", ",", "y26", ",", "y37", ",", "ele"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", 
         "x7", ",", "x8"}], "}"}], "=", "cd8"}], ";", "\[IndentingNewLine]", 
      RowBox[{"y14", "=", 
       RowBox[{"x4", "-", "x1"}]}], ";", 
      RowBox[{"y23", "=", 
       RowBox[{"x3", "-", "x2"}]}], ";", 
      RowBox[{"y15", "=", 
       RowBox[{"x5", "-", "x1"}]}], ";", 
      RowBox[{"y48", "=", 
       RowBox[{"x8", "-", "x4"}]}], ";", 
      RowBox[{"y26", "=", 
       RowBox[{"x6", "-", "x2"}]}], ";", 
      RowBox[{"y37", "=", 
       RowBox[{"x7", "-", "x3"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x9", "=", 
       RowBox[{"x1", "+", 
        RowBox[{"y14", "/", "3"}]}]}], ";", 
      RowBox[{"x10", "=", 
       RowBox[{"x2", "+", 
        RowBox[{"y23", "/", "3"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x11", "=", 
       RowBox[{"x3", "-", 
        RowBox[{"y23", "/", "3"}]}]}], ";", 
      RowBox[{"x12", "=", 
       RowBox[{"x4", "-", 
        RowBox[{"y14", "/", "3"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x13", "=", 
       RowBox[{"x9", "+", 
        RowBox[{"y15", "/", "2"}]}]}], ";", 
      RowBox[{"x16", "=", 
       RowBox[{"x12", "+", 
        RowBox[{"y48", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x14", "=", 
       RowBox[{"x10", "+", 
        RowBox[{"y26", "/", "2"}]}]}], ";", 
      RowBox[{"x15", "=", 
       RowBox[{"x11", "+", 
        RowBox[{"y37", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ele", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "2", ",", "10", ",", "9", ",", "1", ",", "6", ",", "14", ",", "13",
             ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "10", ",", "11", ",", "12", ",", "9", ",", "14", ",", "15", ",", 
            "16", ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "11", ",", "3", ",", "4", ",", "12", ",", "15", ",", "7", ",", "8",
             ",", "16"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "13", ",", "14", ",", "15", ",", "16", ",", "5", ",", "6", ",", 
            "7", ",", "8"}], "}"}]}], "}"}], "+", "inc"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", "x6", ",", 
          "x7", ",", "x8", ",", "x9", ",", "x10", ",", "x11", ",", "x12", ",",
           "x13", ",", "x14", ",", "x15", ",", "x16"}], "}"}], ",", "ele"}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RefineH1To4H1FourTimes", "[", "cd8_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "cdNew", ",", "eleNew", ",", "cdN0", ",", "eleN0", ",", "cdN1", ",", 
      "eleN1", ",", "cdN2", ",", "eleN2", ",", "eleA", ",", "cdA", ",", 
      "tol"}], "}"}], ",", 
    RowBox[{
     RowBox[{"tol", "=", 
      RowBox[{"0.05", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"cd8", "[", 
          RowBox[{"[", "7", "]"}], "]"}], "-", 
         RowBox[{"cd8", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cdNew", ",", "eleNew"}], "}"}], "=", 
      RowBox[{"RefineH1To4H1", "[", "cd8", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cdN0", ",", "eleN0"}], "}"}], "=", 
      RowBox[{"RefineH1To4H1", "[", 
       RowBox[{
        RowBox[{"cdNew", "[", 
         RowBox[{"[", 
          RowBox[{"eleNew", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "16"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cdN1", ",", "eleN1"}], "}"}], "=", 
      RowBox[{"RefineH1To4H1", "[", 
       RowBox[{
        RowBox[{"cdNew", "[", 
         RowBox[{"[", 
          RowBox[{"eleNew", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", "32"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cdN2", ",", "eleN2"}], "}"}], "=", 
      RowBox[{"RefineH1To4H1", "[", 
       RowBox[{
        RowBox[{"cdNew", "[", 
         RowBox[{"[", 
          RowBox[{"eleNew", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", "48"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"eleA", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"eleNew", "[", 
         RowBox[{"[", 
          RowBox[{"{", "4", "}"}], "]"}], "]"}], ",", "eleN0", ",", "eleN1", 
        ",", "eleN2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cdA", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"cdNew", ",", "cdN0", ",", "cdN1", ",", "cdN2"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c2", ",", "e2"}], "}"}], "="}], "*)"}], 
     RowBox[{"MeshMergePoints", "[", 
      RowBox[{"cdA", ",", "eleA", ",", "tol"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RefineH1To13H1inc", "[", 
   RowBox[{"cd8_", ",", "inc_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cdNew", ",", "eleNew"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cdNew", ",", "eleNew"}], "}"}], "=", 
      RowBox[{"RefineH1To4H1FourTimes", "[", "cd8", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cdNew", ",", 
       RowBox[{"eleNew", "+", "inc"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8995981224698477`*^9, 3.8995982667051315`*^9}, {
   3.899598304251871*^9, 3.899598448685275*^9}, {3.8995985057437773`*^9, 
   3.8995985071505165`*^9}, {3.899598544025831*^9, 3.8995988520251665`*^9}, {
   3.8995989302483745`*^9, 3.8995990041110497`*^9}, {3.8995990863976703`*^9, 
   3.899599114140156*^9}, {3.899599257814561*^9, 3.899599283465624*^9}, {
   3.8995993870746417`*^9, 3.8995994715701656`*^9}, {3.89960688949907*^9, 
   3.8996068983007755`*^9}, {3.8996069361739335`*^9, 3.8996070157475743`*^9}, 
   3.899607828185705*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"541e25c0-a8e7-46a5-9f54-ef0c5986eacf"],

Cell[CellGroupData[{

Cell["Kernel functions for refining Q1 and H1 elements. ", "Subsubsection",
 CellChangeTimes->{{3.8997180620603247`*^9, 
  3.8997180845581646`*^9}},ExpressionUUID->"595428f2-c415-40ef-8b51-\
accf6f297148"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "RefineH1Pair", "]"}], ";", 
  RowBox[{
   RowBox[{"RefineH1Pair", "[", 
    RowBox[{
    "coord_", ",", "ele_", ",", "eleRefineList_", ",", "bcPairList_", ",", 
     "mixPairList_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lenC", "=", 
        RowBox[{"Length", "[", "coord", "]"}]}], ",", "cd1", ",", "ele1", ",",
        "cd1new", ",", "ele1new", ",", "coordNew", ",", "eleNew", ",", "len", 
       ",", "eleindeEffective", ",", 
       RowBox[{"eleSize", "=", "0."}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{
        RowBox[{"Length", "[", "eleRefineList", "]"}], "+", 
        RowBox[{"Length", "[", "bcPairList", "]"}], "+", 
        RowBox[{"Length", "[", "mixPairList", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"coordNew", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "len", "}"}]}], "]"}]}], ";", 
      RowBox[{"eleNew", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "len", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ele1", "=", 
          RowBox[{"ele", "[", 
           RowBox[{"[", 
            RowBox[{"eleRefineList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ";", 
         RowBox[{"cd1", "=", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "ele1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"ele1", ",", "cd1"}], "]"}], ";"}], "*)"}], 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cd1new", ",", "ele1new"}], "}"}], "=", 
          RowBox[{"RefineH1To27H1inc", "[", 
           RowBox[{"cd1", ",", "lenC"}], "]"}]}], ";", 
         RowBox[{
          RowBox[{"coordNew", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "cd1new"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eleNew", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "ele1new"}], ";", 
         RowBox[{"lenC", "+=", "64"}], ";"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"lenC", ",", 
            RowBox[{"Max", "[", "ele1new", "]"}], ",", 
            "\"\<add n coord: \>\"", ",", 
            RowBox[{"Length", "[", "cd1new", "]"}]}], "]"}], ";"}], "*)"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "eleRefineList", "]"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"eleSize", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"H1LengthOf12Edge", "[", "cd1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "last", " ", "element", " ", "in", " ", "eleRefineList", " ", "is", 
        " ", "selected", " ", "as", " ", "to", " ", "calculate", " ", "the", 
        " ", "length", " ", "of", " ", "H1", " ", "edge", " ", "so", " ", 
        "that", " ", "the", " ", "eleSize", " ", "is", " ", 
        RowBox[{"estimated", "."}]}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Refined list finished!\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "eleRefineList", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "eleNew", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ele1", "=", 
          RowBox[{"ele", "[", 
           RowBox[{"[", 
            RowBox[{"bcPairList", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ele1", "=", 
          RowBox[{"H1To13H1ElementAlign", "[", 
           RowBox[{"ele1", ",", 
            RowBox[{"bcPairList", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"cd1", "=", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "ele1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"xm1", "=", 
            RowBox[{"{", 
             RowBox[{"ele1", ",", "cd1", ",", 
              RowBox[{"bcPairList", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cd1new", ",", "ele1new"}], "}"}], "=", 
          RowBox[{"RefineH1To13H1inc", "[", 
           RowBox[{"cd1", ",", "lenC"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coordNew", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "len"}], "]"}], "]"}], "=", "cd1new"}], ";", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<add n coord: \>\"", ",", 
             RowBox[{"Length", "[", "cd1new", "]"}], ",", "\"\< \>\"", ",", 
             RowBox[{"Max", "[", "ele1new", "]"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eleNew", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "len"}], "]"}], "]"}], "=", "ele1new"}], ";", 
         RowBox[{"lenC", "+=", "32"}], ";"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "lenC", "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "bcPairList", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<bcPairList list finished!\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{
        RowBox[{"Length", "[", "eleRefineList", "]"}], "+", 
        RowBox[{"Length", "[", "bcPairList", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mixPairList", "!=", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ele1", "=", 
            RowBox[{"ele", "[", 
             RowBox[{"[", 
              RowBox[{"mixPairList", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
           RowBox[{"ele1", "=", 
            RowBox[{"H1To5H1ElementAlign", "[", 
             RowBox[{"ele1", ",", 
              RowBox[{"mixPairList", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"cd1", "=", 
            RowBox[{"coord", "[", 
             RowBox[{"[", "ele1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cd1new", ",", "ele1new"}], "}"}], "=", 
            RowBox[{"RefineH1To5H1inc", "[", 
             RowBox[{"cd1", ",", "lenC"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"coordNew", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "len"}], "]"}], "]"}], "=", "cd1new"}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<add n coord: \>\"", ",", 
               RowBox[{"Length", "[", "cd1new", "]"}], ",", "\"\< \>\"", ",", 
               RowBox[{"Max", "[", "ele1new", "]"}]}], "]"}], ";"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"eleNew", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "len"}], "]"}], "]"}], "=", "ele1new"}], ";", 
           RowBox[{"lenC", "+=", "16"}], ";"}], 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "lenC", "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "mixPairList", "]"}]}], "}"}]}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"eleindeEffective", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "ele", "]"}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"eleRefineList", ",", 
           RowBox[{"bcPairList", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"mixPairList", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<mixPairList finished\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "eleNew", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"eleNew", ",", "1"}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"coordNew", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"coordNew", ",", "1"}], "]"}]}], ";", 
      RowBox[{"eleNew", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"eleNew", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cdAllnew", ",", "eleAllnew"}], "}"}], "="}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dataTemp", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"coord", ",", "coordNew"}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"ele", "[", 
              RowBox[{"[", "eleindeEffective", "]"}], "]"}], ",", "eleNew"}], 
            "]"}], ",", 
           RowBox[{"0.01", " ", "eleSize"}]}], "}"}]}], ";", 
        RowBox[{"Abort", "[", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"MeshMergePoints", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"coord", ",", "coordNew"}], "]"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ele", "[", 
           RowBox[{"[", "eleindeEffective", "]"}], "]"}], ",", "eleNew"}], 
         "]"}], ",", 
        RowBox[{"0.01", " ", "eleSize"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H1LengthOf12Edge", "[", "cd1_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"cd1", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "-", 
       RowBox[{"cd1", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Test1", ":", "\[IndentingNewLine]", "cd1"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "1.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.`", ",", "0.`", ",", "1.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "1.`", ",", "1.`"}], "}"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"H1LengthOf12Edge", "[", "cd1", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
       "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
      "}"}]}]}], "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8996072684461756`*^9, 3.899607268664921*^9}, {
   3.8996075020704145`*^9, 3.8996075809180937`*^9}, {3.8996076241077814`*^9, 
   3.8996078142885036`*^9}, {3.8996078547707205`*^9, 
   3.8996078592867317`*^9}, {3.8996078925882597`*^9, 3.899607942904111*^9}, {
   3.8996083159424543`*^9, 3.89960839341088*^9}, {3.899608448156478*^9, 
   3.8996085348111143`*^9}, {3.8996085668930335`*^9, 3.899608575426044*^9}, {
   3.899610340549836*^9, 3.899610453013735*^9}, {3.899613290260388*^9, 
   3.8996133238355618`*^9}, {3.8996162823861284`*^9, 3.89961629225091*^9}, {
   3.8996172489589148`*^9, 3.89961725669878*^9}, {3.89971650942653*^9, 
   3.8997165113882923`*^9}, {3.899717246689252*^9, 3.899717268598238*^9}, {
   3.899717332508521*^9, 3.899717568215827*^9}, {3.899717598390068*^9, 
   3.8997176909671817`*^9}, {3.8997177260350695`*^9, 3.89971773465092*^9}, {
   3.899717904571138*^9, 3.899717947916094*^9}, {3.8998851748235035`*^9, 
   3.899885194250484*^9}, {3.8998872041174164`*^9, 3.8998872235565033`*^9}, 
   3.8998876849568553`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"85fd387b-ecb8-4159-a996-277660c16869"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "RefineQ1Pair", "]"}], ";", 
  RowBox[{
   RowBox[{"RefineQ1Pair", "[", 
    RowBox[{
    "coord_", ",", "ele_", ",", "eleRefineList_", ",", "bcPairList_"}], "]"}],
    ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lenC", "=", 
        RowBox[{"Length", "[", "coord", "]"}]}], ",", "cd1", ",", "ele1", ",",
        "cd1new", ",", "ele1new", ",", "coordNew", ",", "eleNew", ",", "len", 
       ",", "eidEffect"}], "}"}], ",", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{
        RowBox[{"Length", "[", "eleRefineList", "]"}], "+", 
        RowBox[{"Length", "[", "bcPairList", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"coordNew", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "len", "}"}]}], "]"}]}], ";", 
      RowBox[{"eleNew", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "len", "}"}]}], "]"}]}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ele1", "=", 
          RowBox[{"ele", "[", 
           RowBox[{"[", 
            RowBox[{"eleRefineList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ";", 
         RowBox[{"cd1", "=", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "ele1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"ele1", ",", "cd1"}], "]"}], ";"}], "*)"}], 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cd1new", ",", "ele1new"}], "}"}], "=", 
          RowBox[{"RefineQ1To3x3Q1", "[", 
           RowBox[{"cd1", ",", "ele1", ",", "lenC"}], "]"}]}], ";", 
         RowBox[{
          RowBox[{"coordNew", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "cd1new"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eleNew", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "ele1new"}], ";", 
         RowBox[{"lenC", "+=", "12"}], ";"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"lenC", ",", 
            RowBox[{"Max", "[", "ele1new", "]"}], ",", 
            "\"\<add n coord: \>\"", ",", 
            RowBox[{"Length", "[", "cd1new", "]"}]}], "]"}], ";"}], "*)"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "eleRefineList", "]"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "eleRefineList", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "eleNew", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ele1", "=", 
          RowBox[{"ele", "[", 
           RowBox[{"[", 
            RowBox[{"bcPairList", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
         RowBox[{"cd1", "=", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "ele1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"xm1", "=", 
            RowBox[{"{", 
             RowBox[{"ele1", ",", "cd1", ",", 
              RowBox[{"bcPairList", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cd1new", ",", "ele1new"}], "}"}], "=", 
          RowBox[{"RefineQ1ToFourQ1Aligned", "[", 
           RowBox[{"cd1", ",", "ele1", ",", 
            RowBox[{"bcPairList", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", "lenC"}], "]"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coordNew", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "len"}], "]"}], "]"}], "=", "cd1new"}], ";", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<add n coord: \>\"", ",", 
             RowBox[{"Length", "[", "cd1new", "]"}], ",", "\"\< \>\"", ",", 
             RowBox[{"Max", "[", "ele1new", "]"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eleNew", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "len"}], "]"}], "]"}], "=", "ele1new"}], ";", 
         RowBox[{"lenC", "+=", "4"}], ";"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "lenC", "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "bcPairList", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "eleNew", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"eleNew", ",", "1"}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"eidEffect", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "ele", "]"}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"eleRefineList", ",", 
           RowBox[{"bcPairList", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"coordNew", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"coordNew", ",", "1"}], "]"}]}], ";", 
      RowBox[{"eleNew", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"eleNew", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"coord", ",", "coordNew"}], "]"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"ele", "[", 
           RowBox[{"[", "eidEffect", "]"}], "]"}], ",", "eleNew"}], "]"}]}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8995629893837557`*^9, 3.8995629931245584`*^9}, {
   3.8995632967157764`*^9, 3.899563300962641*^9}, {3.8995633876136208`*^9, 
   3.8995635051136*^9}, {3.899563550744799*^9, 3.8995635519707813`*^9}, {
   3.89956359593854*^9, 3.899563649314288*^9}, {3.899563681026078*^9, 
   3.899563775662994*^9}, {3.899563882294318*^9, 3.8995638888163548`*^9}, {
   3.8995639277340784`*^9, 3.8995639971278486`*^9}, {3.899564040359603*^9, 
   3.899564238566038*^9}, {3.899564269298517*^9, 3.8995643228729453`*^9}, {
   3.8995645182502985`*^9, 3.8995645225316706`*^9}, {3.8995647820517044`*^9, 
   3.8995648010954895`*^9}, {3.899564924397278*^9, 3.8995649321678877`*^9}, {
   3.89956503634921*^9, 3.8995650382252054`*^9}, {3.8995651041511164`*^9, 
   3.8995651347828927`*^9}, {3.899565939062216*^9, 3.899565951781802*^9}, {
   3.8995662055256033`*^9, 3.8995662062939615`*^9}, {3.8995665741291895`*^9, 
   3.8995665791090655`*^9}, {3.8995667265499597`*^9, 3.8995667444640183`*^9}, 
   3.8995668869644265`*^9, 3.899566971740301*^9, {3.8995672993772707`*^9, 
   3.899567302984121*^9}, {3.899567825970828*^9, 3.8995678278222475`*^9}, {
   3.899567911485401*^9, 3.89956791539161*^9}, {3.899568014144103*^9, 
   3.8995680414497557`*^9}, {3.899568282754496*^9, 3.8995683192265806`*^9}, {
   3.89959098034032*^9, 3.8995909886060643`*^9}, {3.899591041659833*^9, 
   3.8995910442386007`*^9}, {3.899613376046547*^9, 3.899613404953186*^9}, {
   3.8996134445998125`*^9, 3.8996136137158146`*^9}, {3.899613794163865*^9, 
   3.8996137988990154`*^9}, {3.8997165844755025`*^9, 3.8997165951615725`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"14ab0268-d0fe-4237-98dd-e6c86e689978"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final main functions for mesh refinement", "Subsection",
 CellChangeTimes->{{3.899717988833377*^9, 3.8997180133547983`*^9}, {
  3.899718222494203*^9, 
  3.899718226855136*^9}},ExpressionUUID->"edfca2f9-b9b1-46ac-ab76-\
ac47743f0f17"],

Cell[CellGroupData[{

Cell["ElementQ1H1RefinementDist is recommended.", "Subsubsection",
 CellChangeTimes->{
  3.899718232200039*^9},ExpressionUUID->"febe373f-06b4-4944-a70e-\
d66569598fea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ElementQ1H1Refinement", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElementQ1H1Refinement", "[", 
   RowBox[{
   "coord_", ",", "ele_", ",", "boolFun1_", ",", "boolFun2_", ",", "eleSize_",
     ",", 
    RowBox[{"isShow_", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ndim", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"coord", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "eleRefineList", ",", 
      "eleBCRefineList", ",", 
      RowBox[{"mixRefineList", "=", 
       RowBox[{"{", "}"}]}], ",", "cdNew3", ",", "eleNew3"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{"eleRefineList", ",", "eleBCRefineList", ",", "mixRefineList"}],
       "}"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Test", " ", 
      RowBox[{"boolFun1", ":"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"boolFun1", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "ndim"}], "]"}], "]"}], ")"}]}]}], "]"}]}], 
       ",", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Error, boolFun1 should be f[x_,y_] in 2D or f[x_,y_,z] in \
3D\>\"", "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"boolFun2", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "ndim"}], "]"}], "]"}], ")"}]}]}], "]"}]}], 
       ",", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Error, boolFun2 should be f[x_,y_] in 2D or f[x_,y_,z] in \
3D\>\"", "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ndim", "==", "2"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"ele", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "!=", "4"}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<Error, only Q1 element is supported.\>\"", "]"}],
           ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"ele", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "!=", "8"}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<Error, only H1 element is supported.\>\"", "]"}],
           ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ndim", "==", "2"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eleRefineList", ",", "eleBCRefineList"}], "}"}], "=", 
         RowBox[{"ElementBoundaryOfSet", "[", 
          RowBox[{
          "coord", ",", "ele", ",", "boolFun1", ",", "boolFun2", ",", 
           "eleSize"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cdNew3", ",", "eleNew3"}], "}"}], "=", 
         RowBox[{"RefineQ1Pair", "[", 
          RowBox[{
          "coord", ",", "ele", ",", "eleRefineList", ",", "eleBCRefineList"}],
           "]"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ndim", "==", "3"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "eleRefineList", ",", "eleBCRefineList", ",", "mixRefineList"}], 
          "}"}], "=", 
         RowBox[{"ElementBoundaryOfSet", "[", 
          RowBox[{
          "coord", ",", "ele", ",", "boolFun1", ",", "boolFun2", ",", 
           "eleSize"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cdNew3", ",", "eleNew3"}], "}"}], "=", 
         RowBox[{"RefineH1Pair", "[", 
          RowBox[{
          "coord", ",", "ele", ",", "eleRefineList", ",", "eleBCRefineList", 
           ",", "mixRefineList"}], "]"}]}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"isShow", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"ShowMesh", "[", 
         RowBox[{"Abaqus2Mesh", "[", 
          RowBox[{"cdNew3", ",", "eleNew3"}], "]"}], "]"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<No. of elements increased from \>\"", "<>", 
       RowBox[{"ToString", "[", " ", 
        RowBox[{"Length", "[", "ele", "]"}], "]"}], "<>", "\"\< to \>\"", "<>", 
       RowBox[{"Length", "[", "eleNew3", "]"}], "<>", 
       "\"\<\\nNo. of nodes increased from \>\"", "<>", 
       RowBox[{"ToString", "[", " ", 
        RowBox[{"Length", "[", "coord", "]"}], "]"}], "<>", "\"\< to \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"Length", "[", "cdNew3", "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cdNew3", ",", "eleNew3"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.899615074014634*^9, 3.899615164633946*^9}, {
   3.8996151996037397`*^9, 3.8996152023593817`*^9}, {3.8996152868866415`*^9, 
   3.899615466843119*^9}, {3.8996155083132267`*^9, 3.8996156078994646`*^9}, {
   3.8996156611071196`*^9, 3.899615994781484*^9}, 3.8996161647549515`*^9, {
   3.8996163620205245`*^9, 3.8996163649282665`*^9}, {3.8996169790202613`*^9, 
   3.899616982149473*^9}, {3.8996171198454313`*^9, 3.8996171290436*^9}, {
   3.899782989553175*^9, 3.899783101335376*^9}, {3.8998850275406694`*^9, 
   3.899885103072925*^9}, {3.899889791705936*^9, 3.8998897967216234`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"f9356e97-aca8-4308-bcd5-db7a147221ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "ElementQ1H1RefinementDist", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ElementQ1H1RefinementDist", "[", 
     RowBox[{
     "coord_", ",", "ele_", ",", "distFunc_", ",", "distValue_", ",", 
      "eleSize_", ",", 
      RowBox[{"isShow_", ":", "False"}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ndim", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "eleRefineList", ",",
         "eleBCRefineList", ",", 
        RowBox[{"mixRefineList", "=", 
         RowBox[{"{", "}"}]}], ",", "cdNew3", ",", "eleNew3"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
        "eleRefineList", ",", "eleBCRefineList", ",", "mixRefineList"}], 
        "}"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Test", " ", 
        RowBox[{"boolFun1", ":"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"NumericQ", "[", 
           RowBox[{"distFunc", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "ndim"}], "]"}], "]"}], ")"}]}], "]"}]}], 
         ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error, distFunc should be f[x_,y_] in 2D or f[x_,y_,z] in 3D \
with/without And0, Or0, Not0\>\"", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "2"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"ele", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "!=", "4"}], ",", 
           RowBox[{
            RowBox[{
            "Print", "[", "\"\<Error, only Q1 element is supported.\>\"", 
             "]"}], ";", 
            RowBox[{"Abort", "[", "]"}]}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"ele", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "!=", "8"}], ",", 
           RowBox[{
            RowBox[{
            "Print", "[", "\"\<Error, only H1 element is supported.\>\"", 
             "]"}], ";", 
            RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "2"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"eleRefineList", ",", "eleBCRefineList"}], "}"}], "=", 
           RowBox[{"ElementBoundaryOfSetDistanceFunction", "[", 
            RowBox[{
            "coord", ",", "ele", ",", "distFunc", ",", "distValue", ",", 
             "eleSize"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cdNew3", ",", "eleNew3"}], "}"}], "=", 
           RowBox[{"RefineQ1Pair", "[", 
            RowBox[{
            "coord", ",", "ele", ",", "eleRefineList", ",", 
             "eleBCRefineList"}], "]"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "3"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "eleRefineList", ",", "eleBCRefineList", ",", "mixRefineList"}], 
            "}"}], "=", 
           RowBox[{"ElementBoundaryOfSetDistanceFunction", "[", 
            RowBox[{
            "coord", ",", "ele", ",", "distFunc", ",", "distValue", ",", 
             "eleSize"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cdNew3", ",", "eleNew3"}], "}"}], "=", 
           RowBox[{"RefineH1Pair", "[", 
            RowBox[{
            "coord", ",", "ele", ",", "eleRefineList", ",", "eleBCRefineList",
              ",", "mixRefineList"}], "]"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isShow", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"ShowMesh", "[", 
           RowBox[{"Abaqus2Mesh", "[", 
            RowBox[{"cdNew3", ",", "eleNew3"}], "]"}], "]"}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"cdNew3", ",", "eleNew3"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.899648524865196*^9, 3.899648664704771*^9}, 
   3.899684106318055*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"6cf20a41-e7a5-4cba-aca4-4b920e35cb91"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.934370470726988*^9},ExpressionUUID->"5d51276d-bf88-429c-8273-\
cdbe797bede2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9343704683476486`*^9, 
  3.934370468389613*^9}},ExpressionUUID->"de240116-00ee-4d24-8c65-\
f8669f6fa79a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Element search from node", "Subsection",
 CellChangeTimes->{{3.899718254681594*^9, 
  3.899718269365255*^9}},ExpressionUUID->"9dda4739-50aa-421f-9059-\
a9adbf280475"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "Q1H1MeshPartialIndex", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q1H1MeshPartialIndex", "[", "ele_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n2e", ",", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"ele", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "ei", ",", 
      RowBox[{"nodeMax", "=", 
       RowBox[{"Max", "[", "ele", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n2e", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "nodeMax", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "ele", "]"}], ">", "nodeMax"}], ",", 
       RowBox[{
       "Print", "[", 
        "\"\<Warning, the number of elements exceeds the number of \
nodes!\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ei", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"ele", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"n2e", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "==", "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"n2e", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", "i"}], ";", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "ei"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "ele", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ei", "=", 
         RowBox[{"ele", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"n2e", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "==", "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"n2e", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", "i"}], ";"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "ei"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "ele", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "n2e"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q1H1MeshPartialIndexC", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ele", ",", "_Integer", ",", "2"}], "}"}], "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n2e", ",", 
         RowBox[{"len", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"ele", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "ei", ",", 
         RowBox[{"nodeMax", "=", 
          RowBox[{"Max", "[", "ele", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n2e", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "nodeMax", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ei", "=", 
            RowBox[{"Sort", "[", 
             RowBox[{"ele", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"n2e", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "==", "0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"n2e", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "=", "i"}], ";", 
                RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "ei"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "ele", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ei", "=", 
            RowBox[{"ele", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"n2e", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "==", "0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"n2e", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "=", "i"}], ";"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "ei"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "ele", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "n2e"}]}], "\[IndentingNewLine]", "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AdjacentNodes", "[", 
    RowBox[{"ni_", ",", "ele_", ",", "n2e_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "ne", "}"}], ",", 
     RowBox[{
      RowBox[{"ne", "=", 
       RowBox[{"ele", "[", 
        RowBox[{"[", 
         RowBox[{"n2e", "[", 
          RowBox[{"[", "ni", "]"}], "]"}], "]"}], "]"}]}], ";", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ele", "[", 
           RowBox[{"[", 
            RowBox[{"n2e", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "ne"}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AdjacentElement", "[", 
    RowBox[{"ni_", ",", "ele_", ",", "n2e_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "ne", "}"}], ",", 
     RowBox[{
      RowBox[{"ne", "=", 
       RowBox[{"ele", "[", 
        RowBox[{"[", 
         RowBox[{"n2e", "[", 
          RowBox[{"[", "ni", "]"}], "]"}], "]"}], "]"}]}], ";", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"n2e", "[", 
        RowBox[{"[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ele", "[", 
              RowBox[{"[", 
               RowBox[{"n2e", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "ne"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
        "]"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8996841116621037`*^9, 3.899684274428363*^9}, {
  3.8996847660859203`*^9, 3.8996848944585037`*^9}, {3.8996849389588485`*^9, 
  3.8996850971193295`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"02892f10-a2a0-4845-a09b-25ae6e37a246"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Refinement of T1 O1 elements.", "Section",
 CellChangeTimes->{{3.900593361282812*^9, 
  3.9005933806065483`*^9}},ExpressionUUID->"e857a661-d5bc-48af-9438-\
1e566ed7e421"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RectanglePoints", "[", 
   RowBox[{"x1_", ",", "x2_", ",", "dx_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n1", ",", "n2", ",", "cd", ",", 
      RowBox[{"ele", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}], "=", 
      RowBox[{
       RowBox[{"Ceiling", "[", 
        FractionBox[
         RowBox[{"x2", "-", "x1"}], "dx"], "]"}], "+", "1"}]}], ";", 
     RowBox[{"cd", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "==", "1"}], "||", 
             RowBox[{"i", "==", "n1"}], "||", 
             RowBox[{"j", "==", "1"}], "||", 
             RowBox[{"j", "==", "n2"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"j", "-", "1"}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", 
               RowBox[{"j", "-", "1"}]}], "}"}], "+", 
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "tol"}], ",", "tol"}], "}"}], ",", "2"}], 
              "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "n2"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"cd", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"cd", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "x2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "x1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          ")"}]}], 
        RowBox[{"n1", "-", "1"}]], "+", 
       RowBox[{
       "x1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], ";", 
     RowBox[{
      RowBox[{"cd", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"cd", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "x2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "x1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          ")"}]}], 
        RowBox[{"n2", "-", "1"}]], "+", 
       RowBox[{
       "x1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ";", 
     "cd"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CuboidPoints", "[", 
    RowBox[{"x1_", ",", "x2_", ",", "dx_", ",", "tol_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n1", ",", "n2", ",", "n3", ",", "cd", ",", 
       RowBox[{"ele", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}], "=", 
       RowBox[{
        RowBox[{"Ceiling", "[", 
         FractionBox[
          RowBox[{"x2", "-", "x1"}], "dx"], "]"}], "+", "1"}]}], ";", 
      RowBox[{"cd", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i", "==", "1"}], "||", 
              RowBox[{"i", "==", "n1"}], "||", 
              RowBox[{"j", "==", "1"}], "||", 
              RowBox[{"j", "==", "n2"}], "||", 
              RowBox[{"k", "==", "1"}], "||", 
              RowBox[{"k", "==", "n3"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", 
               RowBox[{"j", "-", "1"}], ",", 
               RowBox[{"k", "-", "1"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "-", "1"}], ",", 
                RowBox[{"j", "-", "1"}], ",", 
                RowBox[{"k", "-", "1"}]}], "}"}], "+", 
              RowBox[{"RandomReal", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "tol"}], ",", "tol"}], "}"}], ",", "3"}], 
               "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "n2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "n3"}], "}"}]}], "]"}], ",", "2"}], "]"}]}], 
      ";", 
      RowBox[{
       RowBox[{"cd", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"cd", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "x2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
            RowBox[{
            "x1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}]}], 
         RowBox[{"n1", "-", "1"}]], "+", 
        RowBox[{
        "x1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], ";", 
      RowBox[{
       RowBox[{"cd", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"cd", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "x2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
            RowBox[{
            "x1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ")"}]}], 
         RowBox[{"n2", "-", "1"}]], "+", 
        RowBox[{
        "x1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ";", 
      RowBox[{
       RowBox[{"cd", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"cd", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "x2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-", 
            RowBox[{
            "x1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           ")"}]}], 
         RowBox[{"n3", "-", "1"}]], "+", 
        RowBox[{
        "x1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], ";",
       "cd"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "Region2Points", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Region2Points", "[", 
   RowBox[{"x1_", ",", "x2_", ",", "dx_", ",", 
    RowBox[{"tol_", ":", "0."}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "x1", "]"}], "==", "2"}], ",", 
    RowBox[{"RectanglePoints", "[", 
     RowBox[{
      RowBox[{"N", "[", "x1", "]"}], ",", 
      RowBox[{"N", "[", "x2", "]"}], ",", "dx", ",", "tol"}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "x1", "]"}], "==", "3"}], ",", 
      RowBox[{"CuboidPoints", "[", 
       RowBox[{
        RowBox[{"N", "[", "x1", "]"}], ",", 
        RowBox[{"N", "[", "x2", "]"}], ",", "dx", ",", "tol"}], "]"}], ",", 
      RowBox[{
      "Print", "[", "\"\<Error, Length[x1] should be 2 or 3\>\"", "]"}]}], 
     "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.900594242656267*^9, 3.900594256951403*^9}, {
   3.900594292676673*^9, 3.90059436605364*^9}, {3.9005944189789686`*^9, 
   3.9005944236978235`*^9}, {3.9005944720308285`*^9, 3.900594491925808*^9}, 
   3.900594550401292*^9, {3.9005984444556212`*^9, 3.9005984502990694`*^9}, {
   3.900598492607833*^9, 3.900598577828583*^9}, {3.9005994999902525`*^9, 
   3.900599500584007*^9}, 3.90059972922157*^9, {3.9006005688378086`*^9, 
   3.9006007078891716`*^9}, {3.9008589137349434`*^9, 
   3.9008589624232826`*^9}, {3.900949363872941*^9, 3.900949366605833*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"557bbf60-b6d3-4ecc-8025-461484d1234d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "Mesh2Abaqus", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mesh2Abaqus", "[", 
    RowBox[{"file_", ",", "coord_", ",", "ele_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "len", ",", "elen", ",", "strAll", ",", "scoord", ",", "sele", ",", 
       "ci", ",", "\[IndentingNewLine]", 
       RowBox[{
       "shead", "=", 
        "\"\<*Heading\\nMesh from Mathematica\\n*Part, \
name=part1\\n*Node\\n\>\""}], ",", "\[IndentingNewLine]", "selement", ",", 
       RowBox[{"send", "=", "\"\<*End Part\>\""}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"elen", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"ele", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "file", "]"}], ",", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<Warning, existed file was deleted!\>\"", "]"}], 
         ";", 
         RowBox[{"DeleteFile", "[", "file", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "==", "2"}], ",", 
        RowBox[{"selement", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"elen", "==", "4"}], ",", 
           "\"\<*Element, type=CPS4\\n***CPS4 for plane stress, CPE4 for \
plane strain\\n\>\"", ",", 
           "\"\<*Element, type=CPS3\\n***CPS3 for plane stress, CPE3 for \
plane strain\\n\>\""}], "]"}]}], ",", 
        RowBox[{"selement", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"elen", "==", "8"}], ",", "\"\<*Element, type=C3D8\\n\>\"",
            ",", "\"\<*Element, type=C3D4\\n\>\""}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"scoord", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ci", "=", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"DoubleToString", "[", 
                 RowBox[{"coord", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"\"\<  \>\"", "<>", 
                 RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}], ",", 
              "\"\<, \>\""}], "]"}], "]"}], "<>", "\"\<\\n\>\""}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "coord", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sele", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ci", "=", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"IntegerToString", "[", 
                 RowBox[{"ele", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"\"\<  \>\"", "<>", 
                 RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}], ",", 
              "\"\<, \>\""}], "]"}], "]"}], "<>", "\"\<\\n\>\""}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "ele", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"strAll", "=", 
       RowBox[{"shead", "<>", 
        RowBox[{"StringJoin", "[", "scoord", "]"}], "<>", "selement", "<>", 
        RowBox[{"StringJoin", "[", "sele", "]"}], "<>", "send"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"file", "<>", "\"\<.txt\>\""}], ",", "strAll"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"RenameFile", "[", 
       RowBox[{
        RowBox[{"file", "<>", "\"\<.txt\>\""}], ",", "file"}], "]"}], ";", 
      "file"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Mesh2AbaqusInput", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<testinp4.inp\>\""}],
      ",", "coord", ",", "ele"}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"worked", ".", " ", "LS"}], " ", "prepost", " ", 
     RowBox[{"crashed", "."}]}], "*)"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoubleToString", "[", "a_", "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"Internal`MRealToString", "[", 
     RowBox[{"N", "[", "a", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<*^\>\"", "\[Rule]", "\"\<e\>\""}], ",", 
      RowBox[{"\"\<`\>\"", "->", "\"\<\>\""}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"DoubleToString", ",", "Listable"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntegerToString", "[", "a_", "]"}], ":=", 
   RowBox[{"ToString", "[", "a", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"IntegerToString", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->{{3.899625040871282*^9, 3.899625049588196*^9}, {
   3.899636299762705*^9, 3.899636300356451*^9}, {3.899637574864715*^9, 
   3.899637590954475*^9}, {3.8996381110819187`*^9, 3.899638115483426*^9}, {
   3.899638153784229*^9, 3.899638168936843*^9}, {3.899638317781869*^9, 
   3.8996383221638427`*^9}, 3.8996383699884205`*^9, {3.8996384059221163`*^9, 
   3.8996384265503626`*^9}, {3.8996384610258503`*^9, 
   3.8996384738361645`*^9}, {3.900294532558949*^9, 3.9002945426425524`*^9}, {
   3.9003013613926888`*^9, 3.900301365651948*^9}, {3.9003020732662163`*^9, 
   3.900302122537135*^9}, {3.9005988555172777`*^9, 3.9005988692251825`*^9}, {
   3.900598919205305*^9, 3.9005990234799643`*^9}, {3.9006003693619595`*^9, 
   3.90060042288346*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"dbaa373c-8721-4bb7-bc7c-9e4e0fc92144"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Test", " ", "T1", " ", 
    RowBox[{"refinement", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pts", "=", 
     RowBox[{"RectanglePoints", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}], ",", "0.1", ",", "0.1"}], "]"}]}], 
    ";", "\n", 
    RowBox[{
     RowBox[{"bFun1", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"2", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts", ",", "bFun1"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"bFun2", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"1", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun2"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"bFun2", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"0.5", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun2"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"bFun2", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"0.25", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun2"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"bFun2", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"0.125", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun2"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"bFun2", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"0.06", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun2"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"bFun2", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"0.03", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun2"}], "]"}]}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.900596474029805*^9, 3.900596476842244*^9}, {
   3.900598255049142*^9, 3.9005982556272335`*^9}, {3.900598665580099*^9, 
   3.90059867050005*^9}, 3.9005992217580876`*^9, {3.900599392399052*^9, 
   3.9005993929145513`*^9}, {3.9006002761210375`*^9, 3.9006002918774157`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"46ebed62-2f12-44f1-af60-524e2f7f3af7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Test", " ", "O1", " ", 
    RowBox[{"refinement", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pts", "=", 
     RowBox[{"CuboidPoints", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10", ",", "2"}], "}"}], "]"}], ",", "1", ",", 
       "0.1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bFun1", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"2", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts", ",", "bFun1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bFun1", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"1", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pts2", "//", 
      RowBox[{"Dimensions", "\[IndentingNewLine]", 
       RowBox[{"bFun1", "[", 
        RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}]}]}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"0.5", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pts2", "//", 
      RowBox[{"Dimensions", "\[IndentingNewLine]", 
       RowBox[{"bFun1", "[", 
        RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}]}]}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"0.25", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pts2", "//", 
      RowBox[{"Dimensions", "\[IndentingNewLine]", 
       RowBox[{"bFun1", "[", 
        RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}]}]}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "5"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", "5"}], ")"}], "^", "2"}]}], "<=", 
      RowBox[{"0.125", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts2", ",", "ele2"}], "}"}], "=", 
     RowBox[{"DelaunayMeshWithRefinement", "[", 
      RowBox[{"pts2", ",", "bFun1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"pts2", "//", "Dimensions"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Mesh2Abaqus", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\HLREN\\\\Downloads\\\\T1test4.inp\>\"", ",", "pts2", 
      ",", "ele2"}], "]"}], "\n", 
    "\"\<C:\\\\Users\\\\HLREN\\\\Downloads\\\\T1test4.inp\>\"", "\n", 
    RowBox[{"Mesh2Abaqus", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\HLREN\\\\Downloads\\\\T1test7.inp\>\"", ",", "pts2", 
      ",", "ele2"}], "]"}], "\n", 
    "\"\<C:\\\\Users\\\\HLREN\\\\Downloads\\\\T1test7.inp\>\""}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.900599952452367*^9, 3.9005999697268534`*^9}, {
  3.9006000547382946`*^9, 3.9006000681343966`*^9}, {3.9006000991732707`*^9, 
  3.900600109296723*^9}, {3.900600220257476*^9, 3.900600245861035*^9}, {
  3.900600557272987*^9, 3.900600558866727*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"e7db2ce6-bc2c-4771-9ac6-d5bd0b2e7bcc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "DelaunayMeshWithRefinement", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelaunayMeshWithRefinement", "[", 
    RowBox[{"coord_", ",", "boolFun_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mm", ",", "mm2", ",", "ndim", ",", "ige", ",", "cxyz", ",", "ele", ",",
        "eleCenter", ",", "eleFound", ",", "xyzFound", ",", "xyzNew"}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"ndim", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"coord", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ndim", "<", "2"}], "||", 
         RowBox[{"ndim", ">", "3"}]}], ",", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Error, delaunayMesh only applies for 2D and 3D\>\"", "]"}], 
         ";", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mm", "=", 
       RowBox[{"DelaunayMesh", "[", "coord", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "mm", "]"}], ";"}], "*)"}], 
      RowBox[{"cxyz", "=", 
       RowBox[{"MeshCoordinates", "[", "mm", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ele", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "2"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"MeshCells", "[", 
            RowBox[{"mm", ",", "2"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Polygon", "[", "x_", "]"}], ":>", "x"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"MeshCells", "[", 
            RowBox[{"mm", ",", "3"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Tetrahedron", "[", "x_", "]"}], ":>", "x"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eleCenter", "=", 
       RowBox[{"ElementCenter1", "[", 
        RowBox[{"cxyz", ",", "ele"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eleFound", "=", 
       RowBox[{"FindPointsByRule", "[", 
        RowBox[{"eleCenter", ",", "boolFun"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"eleFound", "==", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Error, no element was found!\>\"", "]"}], 
         ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xyzFound", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"cxyz", "[", 
          RowBox[{"[", 
           RowBox[{"ele", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "eleFound"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xyzNew", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ndim", "==", "2"}], ",", 
           RowBox[{"TriangleMiddlePoint", "[", "xyzFound", "]"}], ",", 
           RowBox[{"TetrahedronMiddlePoint", "[", "xyzFound", "]"}]}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xyzNew", "=", 
       RowBox[{"ReturnMergePoints", "[", 
        RowBox[{"xyzNew", ",", 
         RowBox[{"0.05", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"xyzFound", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
            RowBox[{"xyzFound", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mm", "=", 
       RowBox[{"DelaunayMesh", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"cxyz", ",", "xyzNew"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "mm", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cxyz", "=", 
       RowBox[{"MeshCoordinates", "[", "mm", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ele", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndim", "==", "2"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"MeshCells", "[", 
            RowBox[{"mm", ",", "2"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Polygon", "[", "x_", "]"}], ":>", "x"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"MeshCells", "[", 
            RowBox[{"mm", ",", "3"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Tetrahedron", "[", "x_", "]"}], ":>", "x"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"cxyz", ",", "ele"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReturnMergePoints", "[", 
    RowBox[{"XYZ_List", ",", "tot_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nn", ",", "nflag", ",", "ni", ",", "coord", ",", "nc"}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"coord", "=", 
       RowBox[{"N", "[", "XYZ", "]"}]}], ";", 
      RowBox[{"nflag", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "[", "coord", "]"}]}], "]"}]}], ";", 
      RowBox[{"nn", "=", 
       RowBox[{"Nearest", "[", 
        RowBox[{
         RowBox[{"coord", "->", "Automatic"}], ",", "coord", ",", 
         RowBox[{"{", 
          RowBox[{"\[Infinity]", ",", "tot"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{
             "nn", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}], ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
            "nflag", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "\[Equal]", "0"}]}], ",", 
          RowBox[{
           RowBox[{"ni", "=", 
            RowBox[{
            "nn", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           ";", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"nflag", "\[LeftDoubleBracket]", 
               RowBox[{
               "ni", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}], "=", "i"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "2", ",", 
               RowBox[{"Length", "[", "ni", "]"}]}], "}"}]}], "]"}]}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "nn", "]"}], ",", "1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"nc", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"nflag", ",", "0"}], "]"}], "]"}]}], ";", 
      RowBox[{"Print", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Length", "[", "nflag", "]"}], "-", 
          RowBox[{"Length", "[", "nc", "]"}]}], "]"}], "<>", 
        "\"\< were merged.\>\""}], "]"}], ";", 
      RowBox[{"XYZ", "[", 
       RowBox[{"[", "nc", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TriangleMiddlePoint", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"p3", ",", "_Real", ",", "2"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"RuntimeAttributes", "->", 
      RowBox[{"{", "Listable", "}"}]}], ",", 
     RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TetrahedronMiddlePoint", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"p3", ",", "_Real", ",", "2"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"p3", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"RuntimeAttributes", "->", 
      RowBox[{"{", "Listable", "}"}]}], ",", 
     RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9005953634282446`*^9, 3.900595365119515*^9}, {
   3.9005954159740596`*^9, 3.9005954291965084`*^9}, {3.900595503156314*^9, 
   3.90059557901632*^9}, {3.900595666194105*^9, 3.900595808993432*^9}, {
   3.900596109686475*^9, 3.9005963403684483`*^9}, {3.9005963725209627`*^9, 
   3.9005964405063334`*^9}, {3.900597133332584*^9, 3.900597202742739*^9}, {
   3.900597399742337*^9, 3.90059740399677*^9}, {3.9005974511255255`*^9, 
   3.9005974547825203`*^9}, {3.900597588854817*^9, 3.9005975907923727`*^9}, {
   3.9005976726116505`*^9, 3.9005976943250647`*^9}, {3.900597778853207*^9, 
   3.9005977795563745`*^9}, {3.9005978357240477`*^9, 
   3.9005978404292665`*^9}, {3.900597873857233*^9, 3.9005979196483035`*^9}, {
   3.9005979525493336`*^9, 3.900597957986247*^9}, 3.900598378254347*^9, 
   3.900658969218788*^9, {3.900857562386456*^9, 3.90085756732051*^9}, {
   3.9008576342374835`*^9, 3.900857795385315*^9}, {3.9008581069263053`*^9, 
   3.9008581725800714`*^9}, {3.900858204269455*^9, 3.900858257958975*^9}, {
   3.900858440098729*^9, 3.900858444682384*^9}, 3.90085852393095*^9, {
   3.9008591385392466`*^9, 3.900859164288441*^9}, {3.900859451849475*^9, 
   3.900859457649536*^9}, {3.9008595445259356`*^9, 3.900859552802815*^9}, {
   3.9008596859302692`*^9, 3.9008596955854917`*^9}, {3.900860436370924*^9, 
   3.9008604412816153`*^9}, {3.9008605670855465`*^9, 
   3.9008605678696413`*^9}, {3.900860643507324*^9, 3.900860645259777*^9}, {
   3.9008607603901024`*^9, 3.900860821485571*^9}, {3.9008608633385334`*^9, 
   3.900860870275214*^9}, {3.900860921885106*^9, 3.9008609240485187`*^9}, {
   3.9008610888666344`*^9, 3.900861089761294*^9}, {3.900861158825409*^9, 
   3.9008611593607483`*^9}, {3.9008611918716707`*^9, 3.9008612032248673`*^9}, 
   3.900861467249521*^9, {3.9343742782426214`*^9, 
   3.9343742802143593`*^9}},ExpressionUUID->"5b595895-0294-4b0f-968c-\
f9355c4166c6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.900856496787756*^9, 3.900856497860632*^9}, {
   3.9008566527092457`*^9, 3.900856656114098*^9}, 3.900856773324357*^9, 
   3.9008592267431107`*^9, 
   3.934374287287715*^9},ExpressionUUID->"c4281087-8cf7-4e7b-b00c-\
096002eeb1ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "SimplexMeshCheckRegularQuality", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplexMeshCheckRegularQuality", "[", 
    RowBox[{"coord_", ",", "ele_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ndim", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"ne", "=", 
        RowBox[{"Length", "[", "ele", "]"}]}], ",", "xy", ",", "vl", ",", 
       "ei", ",", 
       RowBox[{"vm", "=", "0."}], ",", "ige"}], "}"}], ",", 
     RowBox[{
      RowBox[{"vl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0.", ",", 
         RowBox[{"{", "ne", "}"}]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ndim", "\[Equal]", "2"}], ",", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ei", "=", 
            RowBox[{"ele", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", 
           RowBox[{"xy", "=", 
            RowBox[{"coord", "[", 
             RowBox[{"[", "ei", "]"}], "]"}]}], ";", 
           RowBox[{
            RowBox[{"vl", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"QualityOfTriangle", "[", "xy", "]"}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "ne"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ndim", "\[Equal]", "3"}], ",", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ei", "=", 
            RowBox[{"ele", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", 
           RowBox[{"xy", "=", 
            RowBox[{"coord", "[", 
             RowBox[{"[", "ei", "]"}], "]"}]}], ";", 
           RowBox[{
            RowBox[{"vl", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"QualityOfTet", "[", "xy", "]"}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "ne"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"volListT4", "=", "vl"}], ";", "\[IndentingNewLine]", 
        RowBox[{"vm", "=", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "3"}]}], " ", 
          RowBox[{"Mean", "[", "vl", "]"}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"volListT4", "=", "vl"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ige", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"vl", ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", ">", "0.1"}], "&"}], ")"}]}]}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ige", "]"}], "<", "ne"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"ne", "-", 
           RowBox[{"Length", "[", "ige", "]"}]}], ",", 
          "\"\< bad elements were detected and deleted!\>\""}], "]"}], ",", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<All elements are in good condition\>\"", "]"}], 
         ";", 
         RowBox[{"ige", "=", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "ige"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "RemoveBadQualitySimplexMesh", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveBadQualitySimplexMesh", "[", 
    RowBox[{"ele_", ",", "coord_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"coord", ",", 
     RowBox[{"ele", "[", 
      RowBox[{"[", 
       RowBox[{"SimplexMeshCheckRegularQuality", "[", 
        RowBox[{"coord", ",", "ele"}], "]"}], "]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QualityOfTet", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"v", ",", "_Real", ",", "2"}], "}"}], "}"}], ",", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "vol", ",", "a11", ",", "a12", ",", "a13", ",", "a21", ",", "a22", 
          ",", "a23", ",", "a31", ",", "a32", ",", "a33", ",", "len", ",", 
          "area", ",", "volM"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a11", ",", "a12", ",", "a13"}], "}"}], "=", 
          RowBox[{
           RowBox[{
           "v", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "v", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
         ";", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a21", ",", "a22", ",", "a23"}], "}"}], "=", 
          RowBox[{
           RowBox[{
           "v", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "v", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
         ";", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a31", ",", "a32", ",", "a33"}], "}"}], "=", 
          RowBox[{
           RowBox[{
           "v", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "v", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"len", "=", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a31", ",", "a32", ",", "a33"}], "}"}], ".", 
              RowBox[{"{", 
               RowBox[{"a31", ",", "a32", ",", "a33"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a21", ",", "a22", ",", "a23"}], "}"}], ".", 
              RowBox[{"{", 
               RowBox[{"a21", ",", "a22", ",", "a23"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a11", ",", "a12", ",", "a13"}], "}"}], ".", 
              RowBox[{"{", 
               RowBox[{"a11", ",", "a12", ",", "a13"}], "}"}]}]}], "}"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"area", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"Cross", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a11", ",", "a12", ",", "a13"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a21", ",", "a22", ",", "a23"}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"Norm", "[", 
             RowBox[{"Cross", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a11", ",", "a12", ",", "a13"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a31", ",", "a32", ",", "a33"}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"Norm", "[", 
             RowBox[{"Cross", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a21", ",", "a22", ",", "a23"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a31", ",", "a32", ",", "a33"}], "}"}]}], "]"}], 
             "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"volM", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"area", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", 
              RowBox[{"len", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"area", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", 
              RowBox[{"len", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"area", "[", 
               RowBox[{"[", "3", "]"}], "]"}], " ", 
              RowBox[{"len", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", " ", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a13"}], " ", "a22", " ", "a31"}], "+", 
            RowBox[{"a12", " ", "a23", " ", "a31"}], "+", 
            RowBox[{"a13", " ", "a21", " ", "a32"}], "-", 
            RowBox[{"a11", " ", "a23", " ", "a32"}], "-", 
            RowBox[{"a12", " ", "a21", " ", "a33"}], "+", 
            RowBox[{"a11", " ", "a22", " ", "a33"}]}], "]"}], "/", 
          "volM"}]}]}], "]"}], ",", 
      RowBox[{"CompilationOptions", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<InlineExternalDefinitions\>\"", "->", "True"}], ",", 
         RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "False"}], ",", 
         RowBox[{"\"\<ExpressionOptimization\>\"", "->", "True"}]}], "}"}]}], 
      ",", 
      RowBox[{"RuntimeAttributes", "->", 
       RowBox[{"{", "Listable", "}"}]}], ",", 
      RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QualityOfTriangle", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"v", ",", "_Real", ",", "2"}], "}"}], "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"len", ",", 
         RowBox[{"v12", "=", 
          RowBox[{
           RowBox[{
           "v", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "v", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
         ",", 
         RowBox[{"v13", "=", 
          RowBox[{
           RowBox[{
           "v", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "v", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"v12", ".", "v12"}], ",", 
           RowBox[{"v13", ".", "v13"}]}], "]"}]}], ";", " ", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "v12", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            " ", 
            RowBox[{
            "v13", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "-", 
           RowBox[{
            RowBox[{
            "v12", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            " ", 
            RowBox[{
            "v13", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
           "]"}], "/", "len"}]}]}], "]"}], ",", 
     RowBox[{"CompilationOptions", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<InlineExternalDefinitions\>\"", "->", "True"}], ",", 
        RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "False"}], ",", 
        RowBox[{"\"\<ExpressionOptimization\>\"", "->", "True"}]}], "}"}]}], 
     ",", 
     RowBox[{"RuntimeAttributes", "->", 
      RowBox[{"{", "Listable", "}"}]}], ",", 
     RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.900947560912726*^9, 3.900947695791964*^9}, {
   3.900947801932195*^9, 3.9009478022312064`*^9}, {3.9009480045608273`*^9, 
   3.900948083652946*^9}, {3.9009482667009144`*^9, 3.9009483042297115`*^9}, 
   3.901426336463289*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"fe2de5f3-46eb-42fd-97c8-a1453fc4229f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 729.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e6f9ed73-3f46-4bf6-954b-91845c098cb4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 178, 3, 69, "Chapter",ExpressionUUID->"74634c0f-8f77-43d6-bd68-8d923a5f8290"],
Cell[761, 27, 285, 9, 104, "Text",ExpressionUUID->"c2595c41-3dd0-44e6-a2e4-5fa0b3098a43"],
Cell[CellGroupData[{
Cell[1071, 40, 214, 4, 67, "Section",ExpressionUUID->"81e79014-6fff-4daf-b55a-c29c4c87a2bd"],
Cell[1288, 46, 118063, 1977, 398, "Text",ExpressionUUID->"5f145ffe-1c3e-4447-b34a-8729a6f38d16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119388, 2028, 167, 3, 67, "Section",ExpressionUUID->"83b24f18-4ca4-462b-9685-c7f5b776126b"],
Cell[CellGroupData[{
Cell[119580, 2035, 171, 3, 54, "Subsection",ExpressionUUID->"3333a479-a43f-4f56-9ccd-d1c04524b50e"],
Cell[119754, 2040, 8267, 215, 276, "Input",ExpressionUUID->"a70f72a1-db4c-41ac-8a86-b069dd51a8dd"],
Cell[128024, 2257, 2231, 54, 124, "Input",ExpressionUUID->"58c3c7de-570e-41ef-a89f-5dd98375ead9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130292, 2316, 247, 4, 54, "Subsection",ExpressionUUID->"30e93988-cec9-4a20-8478-1eb8af196226"],
Cell[130542, 2322, 7778, 205, 447, "Input",ExpressionUUID->"ce1e84a1-843d-4899-aeef-087660a3bf08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138357, 2532, 165, 3, 54, "Subsection",ExpressionUUID->"bc382919-f2dc-4a17-99cf-c06bedf9edfe"],
Cell[138525, 2537, 8832, 215, 581, "Input",ExpressionUUID->"e6d184b7-bd6b-4367-9508-6f6157e0aaaf"],
Cell[147360, 2754, 19125, 445, 1189, "Input",ExpressionUUID->"2cbd9ea8-d2ba-471f-af69-544d71160b00"],
Cell[166488, 3201, 3771, 106, 181, "Input",ExpressionUUID->"4f89eaf0-e597-4616-877a-383b4b7c2cca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170296, 3312, 183, 3, 54, "Subsection",ExpressionUUID->"75ea3288-5873-4753-9012-2f126ad93616"],
Cell[170482, 3317, 16384, 345, 634, "Input",ExpressionUUID->"d8861b0e-b3eb-4031-a2ea-5fcc4c3c669f"],
Cell[186869, 3664, 3805, 88, 200, "Input",ExpressionUUID->"44862d7f-fe9a-497d-843c-dfabaf2b4107"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190711, 3757, 193, 3, 54, "Subsection",ExpressionUUID->"86cc26e2-2e61-438b-8670-d7d02e8f4c98"],
Cell[190907, 3762, 25628, 694, 695, "Input",ExpressionUUID->"74e5efe5-b13c-40aa-8b1e-e6c7afba5bbd"],
Cell[216538, 4458, 50996, 863, 605, "Text",ExpressionUUID->"a6cce61d-3dec-4e9b-ab9a-eff72dbba184"],
Cell[267537, 5323, 4069, 107, 219, "Input",ExpressionUUID->"36fe5a61-2e8b-438f-9ef7-1d2a7fca626a"],
Cell[271609, 5432, 76612, 1296, 428, "Text",ExpressionUUID->"4bebe122-6c47-44a2-962b-38769adbb5b3"],
Cell[348224, 6730, 6926, 182, 409, "Input",ExpressionUUID->"541e25c0-a8e7-46a5-9f54-ef0c5986eacf"],
Cell[CellGroupData[{
Cell[355175, 6916, 205, 3, 45, "Subsubsection",ExpressionUUID->"595428f2-c415-40ef-8b51-accf6f297148"],
Cell[355383, 6921, 15697, 396, 942, "Input",ExpressionUUID->"85fd387b-ecb8-4159-a996-277660c16869"],
Cell[371083, 7319, 7947, 187, 409, "Input",ExpressionUUID->"14ab0268-d0fe-4237-98dd-e6c86e689978"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379079, 7512, 239, 4, 54, "Subsection",ExpressionUUID->"edfca2f9-b9b1-46ac-ab76-ac47743f0f17"],
Cell[CellGroupData[{
Cell[379343, 7520, 168, 3, 45, "Subsubsection",ExpressionUUID->"febe373f-06b4-4944-a70e-d66569598fea"],
Cell[379514, 7525, 6446, 165, 333, "Input",ExpressionUUID->"f9356e97-aca8-4308-bcd5-db7a147221ad"],
Cell[385963, 7692, 4947, 129, 295, "Input",ExpressionUUID->"6cf20a41-e7a5-4cba-aca4-4b920e35cb91"],
Cell[390913, 7823, 128, 3, 28, "Input",ExpressionUUID->"5d51276d-bf88-429c-8273-cdbe797bede2"],
Cell[391044, 7828, 154, 3, 28, "Input",ExpressionUUID->"de240116-00ee-4d24-8c65-f8669f6fa79a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[391247, 7837, 172, 3, 54, "Subsection",ExpressionUUID->"9dda4739-50aa-421f-9059-a9adbf280475"],
Cell[391422, 7842, 7330, 208, 333, "Input",ExpressionUUID->"02892f10-a2a0-4845-a09b-25ae6e37a246"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[398801, 8056, 176, 3, 67, "Section",ExpressionUUID->"e857a661-d5bc-48af-9438-1e566ed7e421"],
Cell[398980, 8061, 8785, 230, 372, "Input",ExpressionUUID->"557bbf60-b6d3-4ecc-8025-461484d1234d"],
Cell[407768, 8293, 6066, 145, 371, "Input",ExpressionUUID->"dbaa373c-8721-4bb7-bc7c-9e4e0fc92144"],
Cell[413837, 8440, 4809, 138, 314, "Input",ExpressionUUID->"46ebed62-2f12-44f1-af60-524e2f7f3af7"],
Cell[418649, 8580, 4723, 126, 390, "Input",ExpressionUUID->"e7db2ce6-bc2c-4771-9ac6-d5bd0b2e7bcc"],
Cell[423375, 8708, 12408, 319, 523, "Input",ExpressionUUID->"5b595895-0294-4b0f-968c-f9355c4166c6"],
Cell[435786, 9029, 277, 5, 28, "Input",ExpressionUUID->"c4281087-8cf7-4e7b-b00c-096002eeb1ba"],
Cell[436066, 9036, 11713, 311, 504, "Input",ExpressionUUID->"fe2de5f3-46eb-42fd-97c8-a1453fc4229f"]
}, Open  ]]
}, Open  ]]
}
]
*)

